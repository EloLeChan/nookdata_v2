{"version":3,"sources":["components/LanguageDialogue.tsx","components/AppBar.tsx","components/NavigationDrawer.tsx","components/UpdateReadyDialogue.tsx","components/WorksOfflineDialogue.tsx","context.ts","i18n.ts","pages/critterpedia/data.ts","prototype_mods.ts","pages/critterpedia/components/MonthPanels.tsx","misc.ts","pages/critterpedia/components/TimeTracker.tsx","pages/critterpedia/components/CritterPanel.tsx","pages/critterpedia/index.tsx","serviceWorkerRegistration.ts","common_theme_data.ts","dark.tsx","light.tsx","themes.tsx","index.tsx"],"names":["LanguageDialogue","props","t","useTranslation","Dialog","aria-labelledby","open","PaperProps","style","width","DialogTitle","textAlign","id","List","ListItem","button","onClick","setLang","ListItemText","primary","AppBar","i18n","React","useState","langOpen","setLangOpen","position","Toolbar","IconButton","edge","color","aria-label","marginRight","setDrawerOpen","drawerOpen","flexGrow","title","Language","theme","window","localStorage","setTheme","value","changeLanguage","NavigationDrawer","useTheme","container","undefined","document","body","Hidden","smUp","Drawer","variant","anchor","direction","onClose","setOpen","children","xsDown","UpdateReadyDialogue","DialogContent","DialogActions","Button","WorksOfflineDialogue","defaultSettings","time","Date","settings","hemisphere","islandName","playerName","timeOffset","useSystemTime","useTwelveHourTime","NDContext","createContext","NDContextProvider","createElement","Provider","useNDContext","useContext","use","Backend","LanguageDetector","initReactI18next","init","backend","loadPath","fallbackLng","debug","process","interpolation","escapeValue","getCritterName","critter","type","normal_name","getCritterQuote","playername","getCritterLocation","location","String","prototype","capitalise","this","charAt","toUpperCase","slice","months","winter","palette","summer","spring","autumn","_getTextWidthDiv","seasons","MonthPanel","Card","backgroundColor","month","main","opacity","contrastText","borderColor","active","error","borderWidth","borderStyle","margin","CardContent","paddingBottom","MonthPanels","activeMonth","getTextWidth","text","div","top","left","appendChild","innerText","clientWidth","TimeTracker","now","progress","getMilliseconds","getSeconds","getMinutes","getHours","className","marginBottom","Math","max","pad","h12","h24","m","hours","modelled","useStyles","makeStyles","createStyles","transparent","CritterPanel","data","activeNow","hour","reduce","a","b","leavingSoon","searchParameters","activeRequired","name","price","priceComparison","size","stateRequired","shadow","match","includes","toLowerCase","obtained","index","filter","elem","join","CardActionArea","setOpenDialogue","Warning","Help","src","toString","padStart","openDialogue","scroll","transition","ChevronLeft","ChevronRight","disabled","Divider","marginTop","dangerouslySetInnerHTML","__html","map","getMonth","dry","WbSunny","rain","Cloud","FormControlLabel","control","Checkbox","checked","onChange","event","setObtained","target","label","setModelled","range","stop","Array","from","keys","Critterpedia","params","setParams","critterpedia","bugs","fish","i","push","JSON","stringify","parse","setActiveRequired","setLocation","setName","setPrice","setPriceComparison","setSize","setStateRequired","bugsData","setBugsDataImpl","fishData","setFishDataImpl","setOpenDialogueImpl","openDialogueType","setOpenDialogueTypeImpl","openCritterDialogue","console","log","history","pushState","URLSearchParams","has","Error","get","setBugsData","bug","state","setFishData","maxWidth","CardHeader","Grid","spacing","item","xs","sm","md","TextField","fullWidth","display","justifyContent","alignItems","height","FormControl","InputLabel","Select","labelId","MenuItem","Trans","i18nKey","total","overflowX","paddingRight","y","x","critterData","isLocalhost","Boolean","hostname","register","config","navigator","URL","href","origin","addEventListener","swUrl","fetch","headers","then","response","contentType","status","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","catch","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","commonProps","MuiTextField","MuiSelect","MuiFormControl","MuiDialogTitle","createMuiTheme","elevations","0","1","2","3","4","6","8","12","16","24","dark","secondary","background","paper","default","hint","zIndex","appBar","overrides","MuiAppBar","colorPrimary","colorSecondary","colorDefault","MuiDrawer","MuiCard","root","MuiCardHeader","MuiListItemIcon","themes","light","baseUrl","homepage","pageData","icon","EmojiNature","DrawerAdjust","matches","useMediaQuery","breakpoints","up","paddingLeft","AppFrame","startOpen","initialRender","setInitialRender","Typography","Object","entries","route","selected","page","setPage","ListItemIcon","Route","split","pageTitle","timeUpdateId","sentinelDate","Loading","App","themeSetting","chosenTheme","setChosenThemeImpl","hemisphereSetting","chosenHemisphere","setTime","clearInterval","setInterval","setPageImpl","url","pathname","length","searchParams","useMemo","getTheme","updateReady","setUpdateReady","worksOffline","setWorksOffline","serviceWorkerRegistration","_","ThemeProvider","CssBaseline","classList","add","setTimeout","remove","fallback","newParams","delete","key","append","urlTmp","replaceState","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.85034144.chunk.js","sourcesContent":["import { Dialog, DialogTitle, List, ListItem, ListItemText } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\ninterface LanguageDialogueProps {\n    open: boolean;\n    setLang: (lang: string) => void;\n}\n\nexport default function LanguageDialogue(props: LanguageDialogueProps) {\n    const { t } = useTranslation('core');\n    return <Dialog aria-labelledby=\"lang-dialogue-title\" open={props.open} PaperProps={{ style: { width: 250 } }}>\n        <DialogTitle style={{ textAlign: 'center' }} id=\"lang-dialogue-title\">{t('core:lang.choose')}</DialogTitle>\n        <List>\n            <ListItem style={{ textAlign: 'center' }} button onClick={() => props.setLang('en')}>\n                <ListItemText primary={t('core:lang.en')} />\n            </ListItem>\n            <ListItem style={{ textAlign: 'center' }} button onClick={() => props.setLang('fr')}>\n                <ListItemText primary={t('core:lang.fr')} />\n            </ListItem>\n        </List>\n    </Dialog>;\n}","import { AppBar as TopAppBar, IconButton, Toolbar } from '@material-ui/core';\nimport { Language } from '@material-ui/icons';\nimport DarkModeIcon from '@material-ui/icons/Brightness4';\nimport LightModeIcon from '@material-ui/icons/Brightness7';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport LanguageDialogue from './LanguageDialogue';\n\n\ninterface AppBarProps {\n    setTheme: (value: \"dark\" | \"light\") => void,\n    theme: 'dark' | 'light',\n    setDrawerOpen: (value: boolean) => void,\n    drawerOpen: boolean,\n    title: React.ReactNode,\n}\n\nfunction AppBar(props: AppBarProps) {\n    const { t, i18n } = useTranslation('core');\n    const [langOpen, setLangOpen] = React.useState(false);\n    return (\n        <>\n            <TopAppBar position=\"fixed\">\n                <Toolbar>\n                    <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\"\n                        style={{ marginRight: 16 }}\n                        onClick={() => props.setDrawerOpen(!props.drawerOpen)}>\n                        <MenuIcon />\n                    </IconButton>\n                    <div style={{ flexGrow: 1 }}>\n                        {props.title}\n                    </div>\n                    {/* <FormControl>\n                        <InputLabel id=\"lang-label\">{t('core:lang.choose')}</InputLabel>\n                        <Select\n                            autoWidth\n                            value={i18n.language.split('-')[0]}\n                            onChange={(event) => i18n.changeLanguage(event.target.value as string)}\n                            labelId='lang-label'\n                        >\n                            <MenuItem value=\"en\">{t('core:lang.en')}</MenuItem>\n                            <MenuItem value=\"fr\">{t('core:lang.fr')}</MenuItem>\n                        </Select>\n                    </FormControl> */}\n                    <IconButton color=\"inherit\" onClick={() => setLangOpen(true)}>\n                        <Language />\n                    </IconButton>\n                    {props.theme == 'light'\n                        ? <IconButton\n                            color=\"inherit\"\n                            onClick={\n                                () => {\n                                    window.localStorage.theme = 'dark';\n                                    props.setTheme('dark')\n                                }\n                            }><DarkModeIcon /></IconButton>\n                        : <IconButton\n                            color=\"inherit\"\n                            onClick={\n                                () => {\n                                    window.localStorage.theme = 'light';\n                                    props.setTheme('light')\n                                }\n                            }><LightModeIcon /></IconButton>}\n                </Toolbar>\n            </TopAppBar>\n            <Toolbar />\n            <LanguageDialogue open={langOpen} setLang={(value: string) => {\n                i18n.changeLanguage(value);\n                setLangOpen(false);\n            }} />\n        </>\n    )\n}\nexport default AppBar;\n","import { Drawer, Hidden, Toolbar, useTheme } from '@material-ui/core';\nimport React from 'react';\ninterface NavigationDrawerProps {\n    open: boolean;\n    setOpen: (value: boolean) => void;\n    children: React.ReactNode;\n}\n\n\nfunction NavigationDrawer(props: NavigationDrawerProps) {\n    const theme = useTheme();\n    const container = window !== undefined ? () => window.document.body : undefined;\n    return <>\n        <Hidden smUp>\n            <Drawer\n                variant=\"temporary\"\n                container={container}\n                anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n                open={props.open}\n                onClose={() => props.setOpen(false)}\n            >\n                {props.children}\n            </Drawer>\n        </Hidden>\n        <Hidden xsDown>\n            <Drawer\n                variant=\"persistent\"\n                anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n                open={props.open}\n            >\n                <Toolbar />\n                {props.children}\n            </Drawer>\n        </Hidden>\n    </>;\n}\nexport default NavigationDrawer;\n","import { Button, Dialog, DialogActions, DialogContent, DialogTitle } from '@material-ui/core';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\ninterface UpdateReadyDialogueProps {\n    open: boolean;\n    setOpen: (value: boolean) => void;\n}\n\nexport default function UpdateReadyDialogue(props: UpdateReadyDialogueProps) {\n    const { t } = useTranslation(['service', 'core']);\n    return <Dialog open={props.open} onClose={() => props.setOpen(false)}>\n        <DialogTitle>{t('service:available_update.title')}</DialogTitle>\n        <DialogContent>\n            {t('service:available_update.content')}\n        </DialogContent>\n        <DialogActions>\n            <Button variant=\"text\" onClick={() => props.setOpen(false)}>{t('core:button.dismiss')}</Button>\n        </DialogActions>\n    </Dialog>\n}","import { Button, Dialog, DialogActions, DialogContent, DialogTitle } from '@material-ui/core';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\ninterface WorksOfflineDialogueProps {\n    open: boolean;\n    setOpen: (value: boolean) => void;\n}\n\nexport default function WorksOfflineDialogue(props: WorksOfflineDialogueProps) {\n    const { t } = useTranslation(['service', 'core']);\n    return <Dialog open={props.open} onClose={() => props.setOpen(false)}>\n        <DialogTitle>{t('service:available_offline.title')}</DialogTitle>\n        <DialogContent>\n            {t('service:available_offline.content')}\n        </DialogContent>\n        <DialogActions>\n            <Button variant=\"text\" onClick={() => props.setOpen(false)}>{t('core:button.dismiss')}</Button>\n        </DialogActions>\n    </Dialog>\n}","import React, { useContext } from \"react\";\nimport UserSettings from \"./user_settings\";\n\ninterface INDContext {\n    time: Date;\n    settings: UserSettings;\n};\nlet defaultSettings: INDContext = {\n    time: new Date(),\n    settings: {\n        theme: 'dark',\n        hemisphere: 'north',\n        islandName: 'Gloverboia',\n        playerName: 'Starwort',\n        timeOffset: 0,\n        useSystemTime: true,\n        useTwelveHourTime: true,\n    }\n}\nexport const NDContext = React.createContext<INDContext>(defaultSettings);\nexport function NDContextProvider({ time, settings, children }: INDContext & { children: React.ReactElement[] }) {\n    const value = { time, settings };\n    return React.createElement(\n        NDContext.Provider,\n        { value },\n        children,\n    )\n}\nexport function useTime() {\n    const { time } = useContext(NDContext);\n    return time;\n}\nexport function useSettings() {\n    const { settings } = useContext(NDContext);\n    return settings;\n}\nexport function useNDContext() {\n    return useContext(NDContext);\n}\n","\nimport i18n from 'i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport Backend from 'i18next-http-backend';\nimport { initReactI18next } from 'react-i18next';\n\ni18n.use(Backend)\n    .use(LanguageDetector)\n    .use(initReactI18next)\n    .init({\n        backend: { loadPath: '/nookdata_v2/assets/i18n/{{lng}}/{{ns}}.json' },\n        fallbackLng: 'en',\n        debug: process.env.NODE_ENV == 'development',\n\n        interpolation: {\n            escapeValue: false, // not needed for react as it escapes by default\n        }\n    });","import { bugs, fish } from './data.json';\n\ntype Critter = typeof bugs[0] | typeof fish[0];\nexport type { Critter };\nexport {\n    getCritterName,\n    getCritterQuote,\n    getCritterLocation\n};\n\n\nfunction getCritterName(critter: Critter, type: 'bug' | 'fish', t: (key: string, props?: Object) => string) {\n    return t(`critterpedia:${type}.name.${critter.normal_name}`);\n}\n\nfunction getCritterQuote(critter: Critter, type: 'bug' | 'fish', playername: string, t: (key: string, props?: Object) => string) {\n    return t(`critterpedia:${type}.quote.${critter.normal_name}`, { playername });\n}\n\nfunction getCritterLocation(critter: Critter, type: 'bug' | 'fish', t: (key: string, props?: Object) => string) {\n    return t(`critterpedia:${type}.location.${critter.location}`);\n}\n\n\n","declare global {\n    interface String {\n        capitalise: () => String;\n    }\n}\nString.prototype.capitalise = function () {\n    return this.charAt(0).toUpperCase() + this.slice(1);\n}\n\ndeclare module \"react\" {\n    interface CSSProperties {\n        '--progress'?: string | number;\n    }\n}\n\ndeclare module \"@material-ui/core/styles/createPalette\" {\n    interface ElevationColour {\n        0: { main: string };\n        1: { main: string };\n        2: { main: string };\n        3: { main: string };\n        4: { main: string };\n        6: { main: string };\n        8: { main: string };\n        12: { main: string };\n        16: { main: string };\n        24: { main: string };\n    }\n    interface PaletteColor {\n        transparent?: string;\n    }\n    interface SimplePaletteColorOptions {\n        transparent?: string;\n    }\n    interface Palette {\n        elevations: ElevationColour;\n        opacity: number;\n        modelled: Palette['primary'];\n        spring: Palette['primary'];\n        summer: Palette['primary'];\n        autumn: Palette['primary'];\n        winter: Palette['primary'];\n    }\n    interface PaletteOptions {\n        elevations: ElevationColour;\n        opacity: number;\n        modelled: PaletteOptions['primary'];\n        spring: PaletteOptions['primary'];\n        summer: PaletteOptions['primary'];\n        autumn: PaletteOptions['primary'];\n        winter: PaletteOptions['primary'];\n    }\n}\nexport { };\n","import { Card, CardContent, Theme, useTheme } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useNDContext } from \"../../../context\";\nimport '../../../prototype_mods';\nimport UserSettings from '../../../user_settings';\nimport './CritterPanel.scss';\nconst months = [\n    \"critterpedia:dialogue.months.jan\",\n    \"critterpedia:dialogue.months.feb\",\n    \"critterpedia:dialogue.months.mar\",\n    \"critterpedia:dialogue.months.apr\",\n    \"critterpedia:dialogue.months.may\",\n    \"critterpedia:dialogue.months.jun\",\n    \"critterpedia:dialogue.months.jul\",\n    \"critterpedia:dialogue.months.aug\",\n    \"critterpedia:dialogue.months.sep\",\n    \"critterpedia:dialogue.months.oct\",\n    \"critterpedia:dialogue.months.nov\",\n    \"critterpedia:dialogue.months.dec\",\n];\nfunction winter(theme: Theme, settings: UserSettings) {\n    return (\n        settings.hemisphere === \"north\"\n            ? theme.palette.winter\n            : theme.palette.summer\n    );\n}\nfunction spring(theme: Theme, settings: UserSettings) {\n    return (\n        settings.hemisphere === \"north\"\n            ? theme.palette.spring\n            : theme.palette.autumn\n    );\n}\nfunction summer(theme: Theme, settings: UserSettings) {\n    return (\n        settings.hemisphere === \"north\"\n            ? theme.palette.summer\n            : theme.palette.winter\n    );\n}\nfunction autumn(theme: Theme, settings: UserSettings) {\n    return (\n        settings.hemisphere === \"north\"\n            ? theme.palette.autumn\n            : theme.palette.spring\n    );\n}\nconst seasons = [\n    winter,\n    winter,\n    spring,\n    spring,\n    spring,\n    summer,\n    summer,\n    summer,\n    autumn,\n    autumn,\n    autumn,\n    winter,\n];\n\ninterface MonthPanelProps {\n    months: boolean[];\n    month: number;\n    active: boolean;\n}\nfunction MonthPanel(props: MonthPanelProps) {\n    const theme = useTheme();\n    const { t } = useTranslation('critterpedia');\n    const { settings } = useNDContext();\n    return <td width=\"33%\">\n        <Card\n            variant=\"outlined\"\n            style={{\n                // backgroundColor: ((colour) => (\n                //     props.months[props.month]\n                //         ? colour.main\n                //         : colour.transparent\n                // ))(\n                //     seasons[props.month](theme, settings)\n                // ),\n                backgroundColor: seasons[props.month](theme, settings).main,\n                opacity: props.months[props.month] ? undefined : theme.palette.opacity,\n                color: seasons[props.month](theme, settings).contrastText,\n                borderColor: props.active ? theme.palette.error.main : 'transparent',\n                borderWidth: 2,\n                borderStyle: 'solid',\n                margin: -1,\n            }}\n        >\n            <CardContent style={{ paddingBottom: 16 }}>\n                {t(months[props.month])}\n            </CardContent>\n        </Card>\n    </td>\n}\ninterface MonthPanelsProps {\n    months: boolean[];\n    activeMonth: number;\n}\nexport default function MonthPanels(props: MonthPanelsProps) {\n    return <table style={{ width: '100%' }}>\n        <tbody>\n            <tr>\n                <MonthPanel\n                    months={props.months}\n                    month={0}\n                    active={props.activeMonth == 0}\n                />\n                <MonthPanel\n                    months={props.months}\n                    month={1}\n                    active={props.activeMonth == 1}\n                />\n                <MonthPanel\n                    months={props.months}\n                    month={2}\n                    active={props.activeMonth == 2}\n                />\n            </tr>\n            <tr>\n                <MonthPanel\n                    months={props.months}\n                    month={3}\n                    active={props.activeMonth == 3}\n                />\n                <MonthPanel\n                    months={props.months}\n                    month={4}\n                    active={props.activeMonth == 4}\n                />\n                <MonthPanel\n                    months={props.months}\n                    month={5}\n                    active={props.activeMonth == 5}\n                />\n            </tr>\n            <tr>\n                <MonthPanel\n                    months={props.months}\n                    month={6}\n                    active={props.activeMonth == 6}\n                />\n                <MonthPanel\n                    months={props.months}\n                    month={7}\n                    active={props.activeMonth == 7}\n                />\n                <MonthPanel\n                    months={props.months}\n                    month={8}\n                    active={props.activeMonth == 8}\n                />\n            </tr>\n            <tr>\n                <MonthPanel\n                    months={props.months}\n                    month={9}\n                    active={props.activeMonth == 9}\n                />\n                <MonthPanel\n                    months={props.months}\n                    month={10}\n                    active={props.activeMonth == 10}\n                />\n                <MonthPanel\n                    months={props.months}\n                    month={11}\n                    active={props.activeMonth == 11}\n                />\n            </tr>\n        </tbody>\n    </table >;\n}","type Dict<V> = {\n    [key: string]: V;\n}\nvar _getTextWidthDiv: HTMLDivElement;\nfunction setUpDiv() {\n    _getTextWidthDiv = document.createElement(\"div\");\n    _getTextWidthDiv.style.position = 'absolute';\n    _getTextWidthDiv.style.top = '-9999px';\n    _getTextWidthDiv.style.left = '-9999px';\n    // _getTextWidthDiv.ariaHidden = true;\n    document.body.appendChild(_getTextWidthDiv);\n    return _getTextWidthDiv;\n}\nfunction getTextWidth(text: string) {\n    var div = _getTextWidthDiv ?? (setUpDiv());\n    div.innerText = text\n    return div.clientWidth;\n}\n\nexport type { Dict };\nexport { getTextWidth };\n\n","import { useTheme } from '@material-ui/core';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useNDContext } from '../../../context';\nimport { getTextWidth } from '../../../misc';\nimport './TimeTracker.scss';\n\ninterface TimeTrackerProps {\n    hours: boolean[];\n}\n\nexport default function TimeTracker(props: TimeTrackerProps) {\n    const theme = useTheme();\n    const { t } = useTranslation('core');\n    const { time: now, settings } = useNDContext();\n    let progress = (\n        (\n            (\n                now.getMilliseconds() / 1000\n                + now.getSeconds()\n            ) / 60\n            + now.getMinutes()\n        ) / 60\n        + now.getHours()\n    ) * 100 / 24;\n    return <div\n        className=\"time-tracker\"\n        style={{\n            marginBottom: Math.max(\n                getTextWidth(\n                    t(\n                        settings.useTwelveHourTime\n                            ? 'core:time.twelve_hour.am_short'\n                            : 'core:time.twenty_four_hour',\n                        {\n                            pad: '0',\n                            h12: 12,\n                            h24: 0,\n                            m: '00',\n                        }\n                    )\n                ),\n                getTextWidth(\n                    t(\n                        settings.useTwelveHourTime\n                            ? 'core:time.twelve_hour.pm_short'\n                            : 'core:time.twenty_four_hour',\n                        {\n                            pad: '0',\n                            h12: 12,\n                            h24: 0,\n                            m: '00',\n                        }\n                    )\n                ),\n            ) - 8,\n        }}\n    >\n        <div\n            className=\"now\"\n            style={{\n                backgroundColor: theme.palette.error.main,\n                '--progress': `${progress}%`,\n            }}\n        />\n        <div>\n            <div className=\"large-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n            <div className=\"division-label\">\n                {\n                    t(\n                        settings.useTwelveHourTime\n                            ? 'core:time.twelve_hour.am_short'\n                            : 'core:time.twenty_four_hour',\n                        {\n                            pad: '0',\n                            h12: 12,\n                            h24: 0,\n                            m: '00',\n                        }\n                    )\n                }\n            </div>\n        </div>\n        <div className=\"hour\" style={{ backgroundColor: props.hours[0] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[1] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[2] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[3] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[4] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[5] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div>\n            <div className=\"medium-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n            <div className=\"division-label\">\n                {\n                    t(\n                        settings.useTwelveHourTime\n                            ? 'core:time.twelve_hour.am_short'\n                            : 'core:time.twenty_four_hour',\n                        {\n                            pad: '0',\n                            h12: 6,\n                            h24: 6,\n                            m: '00',\n                        }\n                    )\n                }\n            </div>\n        </div>\n        <div className=\"hour\" style={{ backgroundColor: props.hours[6] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[7] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[8] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[9] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[10] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[11] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div>\n            <div className=\"large-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n            <div className=\"division-label\">\n                {\n                    t(\n                        settings.useTwelveHourTime\n                            ? 'core:time.twelve_hour.pm_short'\n                            : 'core:time.twenty_four_hour',\n                        {\n                            pad: '',\n                            h12: 12,\n                            h24: 12,\n                            m: '00',\n                        }\n                    )\n                }\n            </div>\n        </div>\n        <div className=\"hour\" style={{ backgroundColor: props.hours[12] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[13] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[14] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[15] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[16] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[17] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div>\n            <div className=\"medium-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n            <div className=\"division-label\">\n                {\n                    t(\n                        settings.useTwelveHourTime\n                            ? 'core:time.twelve_hour.pm_short'\n                            : 'core:time.twenty_four_hour',\n                        {\n                            pad: '',\n                            h12: 6,\n                            h24: 18,\n                            m: '00',\n                        }\n                    )\n                }\n            </div>\n        </div>\n        <div className=\"hour\" style={{ backgroundColor: props.hours[18] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[19] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[20] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[21] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[22] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[23] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div>\n            <div className=\"large-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n            <div className=\"division-label\">\n                {\n                    t(\n                        settings.useTwelveHourTime\n                            ? 'core:time.twelve_hour.am_short'\n                            : 'core:time.twenty_four_hour',\n                        {\n                            pad: '0',\n                            h12: 12,\n                            h24: 0,\n                            m: '00',\n                        }\n                    )\n                }\n            </div>\n        </div>\n    </div>\n}","import { Card, CardActionArea, CardContent, Checkbox, createStyles, Dialog, DialogActions, DialogContent, DialogTitle, Divider, FormControlLabel, IconButton, makeStyles, Toolbar, useTheme } from \"@material-ui/core\";\nimport { ChevronLeft, ChevronRight, Cloud, Help, Warning, WbSunny } from \"@material-ui/icons\";\nimport React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useNDContext } from \"../../../context\";\nimport '../../../prototype_mods';\nimport { getCritterLocation, getCritterName, getCritterQuote } from '../data';\nimport { bugs, fish } from '../data.json';\nimport SearchParameters from \"../search_parameters\";\nimport './CritterPanel.scss';\nimport MonthPanels from \"./MonthPanels\";\nimport TimeTracker from \"./TimeTracker\";\n\nconst useStyles = makeStyles((theme) => createStyles({\n    modelled: {\n        color: theme.palette.modelled.main,\n        '&.Mui-disabled': {\n            color: theme.palette.modelled.transparent,\n        },\n    },\n}))\n\ninterface CritterPanelProps {\n    data: (typeof bugs[0]) | (typeof fish[0]);\n    type: 'bug' | 'fish';\n    obtained: boolean;\n    modelled: boolean;\n    setObtained: (value: boolean) => void;\n    setModelled: (value: boolean) => void;\n    month: number;\n    hour: number;\n    searchParameters: SearchParameters;\n    openDialogue: number | null;\n    setOpenDialogue: (value: number | null) => void;\n}\nfunction CritterPanel(props: CritterPanelProps) {\n    const { t } = useTranslation('critterpedia');\n    const { time, settings } = useNDContext();\n    const hours = (\n        settings.hemisphere == 'north' ?\n            props.data.hours :\n            [...props.data.hours.slice(6), ...props.data.hours.slice(0, 6)]\n    );\n    const theme = useTheme();\n    const activeNow = hours[props.month][props.hour];\n    const activeMonth = hours[props.month].reduce((a, b) => a || b);\n    const leavingSoon = activeMonth && !hours[(props.month + 1) % 12].reduce((a, b) => a || b);\n    const { palette } = useTheme();\n    const {\n        activeRequired,\n        location,\n        name,\n        price,\n        priceComparison,\n        size,\n        stateRequired,\n    } = props.searchParameters;\n    let shadow = '';\n    if (props.type == 'fish') {\n        shadow = t(`critterpedia:fish.size.${(props.data as typeof fish[0]).shadow}`);\n    }\n    let match = true;\n    if (activeRequired === 'now' && !activeNow) {\n        match = false;\n    } else if (activeRequired === 'month' && !activeMonth) {\n        match = false;\n    } else if (activeRequired === 'until_next' && !leavingSoon) {\n        match = false;\n    } else if (!getCritterLocation(props.data, props.type, t).includes(location.toLowerCase())) {\n        match = false;\n    } else if (!getCritterName(props.data, props.type, t).includes(name.toLowerCase())) {\n        match = false;\n    } else if (props.type == 'fish' && !shadow.includes(size.toLowerCase())) {\n        match = false;\n    } else if (stateRequired === 'unobtained' && props.obtained) {\n        match = false;\n    } else if (stateRequired === 'unmodelled' && props.modelled) {\n        match = false;\n    } else {\n        switch (priceComparison) {\n            case '>=':\n                if (props.data.price < price) {\n                    match = false;\n                }\n                break;\n            case '=':\n                if (props.data.price != price) {\n                    match = false;\n                }\n                break;\n            case '<=':\n                if (props.data.price > price) {\n                    match = false;\n                }\n                break;\n        }\n    }\n\n    const title = [\n        t(`critterpedia:panel.type.${props.type}`, { name: getCritterName(props.data, props.type, t).capitalise(), index: props.data.index + 1 }),\n        (activeMonth ? '' : t('critterpedia:panel.status.unavailable')),\n        (activeNow ? t('critterpedia:panel.status.now') : ''),\n        (props.modelled ? t('critterpedia:panel.status.modelled') : ''),\n        t('critterpedia:panel.status.details'),\n    ].filter((elem) => !!elem).join('\\n');\n\n    return <>\n        <Card\n            className=\"critter-panel\"\n            title={title}\n            style={\n                {\n                    backgroundColor: props.modelled\n                        ? palette.modelled.transparent\n                        : (\n                            props.obtained\n                                ? palette.primary.transparent\n                                : (\n                                    activeMonth\n                                        ? undefined\n                                        : palette.error.transparent\n                                )\n                        ),\n                    borderColor: props.modelled\n                        ? palette.modelled.main\n                        : (\n                            activeMonth\n                                ? (\n                                    props.obtained\n                                        ? palette.primary.main\n                                        : undefined\n                                )\n                                : palette.error.main\n                        ),\n                    opacity: match ? 1 : theme.palette.opacity,\n                }\n            }\n        >\n            <CardActionArea onClick={() => props.setOpenDialogue(props.data.index)}>\n                {\n                    leavingSoon\n                        ? <Warning style={{\n                            color: props.modelled\n                                ? palette.modelled.main\n                                : palette.error.main,\n                        }} />\n                        : <Help style={{\n                            color: props.modelled\n                                ? palette.modelled.main\n                                : (\n                                    activeMonth\n                                        ? (\n                                            props.obtained\n                                                ? palette.primary.main\n                                                : undefined\n                                        )\n                                        : palette.error.main\n                                ),\n                        }} />\n                }\n                <img src={\n                    `assets/${props.type}/${props.data.index.toString().padStart(2, '0')\n                    }.png`\n                } />\n            </CardActionArea>\n        </Card>\n        <Dialog\n            open={props.openDialogue == props.data.index}\n            onClose={() => props.setOpenDialogue(null)}\n            scroll=\"body\"\n            PaperProps={{\n                style: {\n                    borderColor: props.modelled\n                        ? palette.modelled.main\n                        : (\n                            props.obtained\n                                ? palette.primary.main\n                                : 'transparent'\n                        ),\n                    borderWidth: 1,\n                    borderStyle: 'solid',\n                    width: \"75%\",\n                    transition: 'color 0.5s ease-in-out, border-color 0.5s ease-in-out',\n                }\n            }}\n        >\n            <DialogTitle style={{\n                paddingBottom: 0,\n            }}\n            >\n                <Toolbar>\n                    {\n                        props.data.index > 0\n                            ? <IconButton edge=\"start\" onClick={() => props.setOpenDialogue(props.data.index - 1)}>\n                                {theme.direction == 'ltr' ? <ChevronLeft /> : <ChevronRight />}\n                            </IconButton>\n                            : <IconButton disabled />\n                    }\n                    <div style={{\n                        textAlign: 'center',\n                        color: props.modelled\n                            ? palette.modelled.main\n                            : (\n                                props.obtained\n                                    ? palette.primary.main\n                                    : undefined\n                            ),\n                        flexGrow: 1,\n                        transition: 'color 0.5s ease-in-out',\n                    }}>\n                        {getCritterName(props.data, props.type, t).capitalise()}\n                    </div>\n                    {\n                        props.data.index < 79\n                            ? <IconButton edge=\"end\" onClick={() => props.setOpenDialogue(props.data.index + 1)}>\n                                {theme.direction == 'ltr' ? <ChevronRight /> : <ChevronLeft />}\n                            </IconButton>\n                            : <IconButton disabled />\n                    }\n                </Toolbar>\n            </DialogTitle>\n            <DialogContent\n                style={{\n                    textAlign: 'center'\n                }}\n            >\n                {t(`critterpedia:dialogue.type.${props.type}`, { index: props.data.index + 1 })}\n                <br />\n                <Divider style={{ marginTop: 8, marginBottom: 8 }} />\n                <div\n                    style={{ paddingBottom: 8 }}\n                    dangerouslySetInnerHTML={{\n                        __html: getCritterQuote(\n                            props.data,\n                            props.type,\n                            settings.playerName,\n                            t\n                        )\n                    }}\n                />\n                <MonthPanels\n                    months={hours.map(\n                        (month) => month.reduce((a, b) => a || b)\n                    )}\n                    activeMonth={props.month}\n                />\n                <TimeTracker\n                    hours={hours[time.getMonth()]}\n                />\n                <Card variant=\"outlined\">\n                    <CardContent>\n                        <div className=\"critter-overview\">\n                            <img\n                                src={\n                                    `assets/${props.type}/${props.data.index.toString().padStart(2, '0')\n                                    }.png`\n                                }\n                                className=\"critter-icon\"\n                            />\n                            {props.data.dry && <div\n                                title={t('critterpedia:dialogue.details.dry')}\n                            >\n                                <WbSunny\n                                    className=\"critter-dry\"\n                                    style={{\n                                        color: theme.palette.summer.main\n                                    }}\n                                />\n                            </div>}\n                            {props.data.rain && <div\n                                title={t('critterpedia:dialogue.details.wet')}\n                            >\n                                <Cloud\n                                    className=\"critter-wet\"\n                                    style={{\n                                        color: theme.palette.winter.main\n                                    }}\n                                />\n                            </div>}\n                            <div className=\"location-label\">{t('critterpedia:dialogue.details.found')}</div>\n                            <div className=\"price-label\">{t('critterpedia:dialogue.details.price')}</div>\n                            <div className=\"location\">{getCritterLocation(props.data, props.type, t)}</div>\n                            <div className=\"price\">{props.data.price}</div>\n                        </div>\n                    </CardContent>\n                </Card>\n            </DialogContent>\n            <DialogActions>\n                <FormControlLabel\n                    control={\n                        <Checkbox\n                            checked={props.obtained}\n                            onChange={(event) => props.setObtained(event.target.checked)}\n                            color=\"primary\"\n                        />\n                    }\n                    label={t('critterpedia:dialogue.obtained')}\n                />\n                <FormControlLabel\n                    control={\n                        <Checkbox\n                            className={useStyles(theme).modelled}\n                            checked={props.modelled}\n                            disabled={!props.obtained}\n                            onChange={(event) => props.setModelled(event.target.checked)}\n                            color=\"default\"\n                        />\n                    }\n                    label={t('critterpedia:dialogue.modelled')}\n                />\n            </DialogActions>\n        </Dialog>\n    </>;\n}\nexport default CritterPanel;","import { Card, CardContent, CardHeader, FormControl, Grid, InputLabel, MenuItem, Select, TextField, useTheme } from '@material-ui/core';\nimport React from 'react';\nimport { Trans, useTranslation } from 'react-i18next';\nimport CritterPanel from './components/CritterPanel';\nimport { getCritterName } from './data';\nimport { bugs, fish } from './data.json';\nimport SearchParameters from './search_parameters';\n\nfunction range(stop: number) {\n    return Array.from(Array(stop).keys());\n}\n\ninterface UserCritterData {\n    obtained: boolean;\n    modelled: boolean;\n}\n\ninterface UserCritterpediaData {\n    bugs: UserCritterData[];\n    fish: UserCritterData[];\n}\n\ninterface CritterpediaProps {\n    params: URLSearchParams;\n    setParams: (route: URLSearchParams) => void;\n}\n\nexport default function Critterpedia(props: CritterpediaProps) {\n    const { t } = useTranslation('critterpedia');\n    const { params, setParams } = props;\n    const theme = useTheme();\n    if (!window.localStorage.critterpedia) {\n        let data: UserCritterpediaData = {\n            bugs: [],\n            fish: [],\n        };\n        for (let i = 0; i < 80; i++) {\n            data.bugs.push({ obtained: false, modelled: false });\n            data.fish.push({ obtained: false, modelled: false });\n        }\n        window.localStorage.critterpedia = JSON.stringify(data);\n    }\n    const data: UserCritterpediaData = JSON.parse(window.localStorage.critterpedia);\n    const [activeRequired, setActiveRequired] = React.useState<'now' | 'month' | 'until_next' | 'any'>('any');\n    const [location, setLocation] = React.useState('');\n    const [name, setName] = React.useState('');\n    const [price, setPrice] = React.useState(0);\n    const [priceComparison, setPriceComparison] = React.useState<'>=' | '=' | '<='>('>=');\n    const [size, setSize] = React.useState('');\n    const [stateRequired, setStateRequired] = React.useState<'unobtained' | 'unmodelled' | 'any'>('any');\n    const searchParameters: SearchParameters = {\n        activeRequired,\n        location,\n        name,\n        price,\n        priceComparison,\n        size,\n        stateRequired,\n    };\n    const [bugsData, setBugsDataImpl] = React.useState(data.bugs);\n    const [fishData, setFishDataImpl] = React.useState(data.fish);\n    const [openDialogue, setOpenDialogueImpl] = React.useState<number | null>(null);\n    const [openDialogueType, setOpenDialogueTypeImpl] = React.useState<'bug' | 'fish'>('bug');\n    function openCritterDialogue(type: 'bug' | 'fish', index: number | null) {\n        if (index !== null) {\n            console.log(`Loading ${type} #${index}`);\n            if (type !== openDialogueType) {\n                setOpenDialogueTypeImpl(type);\n            }\n            let title = getCritterName(\n                (\n                    type === 'bug'\n                        ? bugs\n                        : fish\n                )[index],\n                type,\n                t\n            ).capitalise();\n            document.title = t('critterpedia:title.info', { name: title });\n            window.history.pushState(null, t('critterpedia:title.info', { name: title }));\n            setParams(new URLSearchParams({ 'type': type, 'index': index.toString() }));\n            if (index !== openDialogue) {\n                setOpenDialogueImpl(index);\n            }\n        } else {\n            console.log('Unloading critter dialogue');\n            document.title = t('critterpedia:title.default');\n            window.history.pushState(null, t('critterpedia:title.default'));\n            setParams(new URLSearchParams());\n            setOpenDialogueImpl(null);\n        }\n    }\n    // function setOpenDialogueType(value: 'bug' | 'fish') {\n    //     console.log('Loading:', value);\n    //     setOpenDialogueTypeImpl(value);\n    // }\n    // function setOpenDialogue(value: number | null) {\n    //     console.log(openDialogueType);\n    //     if (value !== null) {\n    //         let title = getCritterName(\n    //             (\n    //                 openDialogueType === 'bug'\n    //                     ? bugs\n    //                     : fish\n    //             )[value],\n    //             openDialogueType,\n    //             t\n    //         ).capitalise();\n    //         document.title = t('critterpedia:title.info', { name: title });\n    //         window.history.pushState(null, t('critterpedia:title.info', { name: title }));\n    //         setParams(new URLSearchParams({ 'type': openDialogueType, 'index': value.toString() }));\n    //     } else {\n    //         document.title = t('critterpedia:title.default');\n    //         window.history.pushState(null, t('critterpedia:title.default'));\n    //         setParams(new URLSearchParams());\n    //     }\n    //     setOpenDialogueImpl(value);\n    // }\n    try {\n        if (!params.has('type')) {\n            throw new Error();\n        }\n        if (!params.has('index')) {\n            throw new Error();\n        }\n        const type: 'bug' | 'fish' = params.get('type') as 'bug' | 'fish';\n        const index: number = +params.get('index')!;\n        if (type === 'bug' || type == 'fish') {\n            if (0 <= index && index < 80) {\n                openCritterDialogue(type, index);\n            }\n        }\n    } catch {\n        props.setParams(new URLSearchParams({}));\n    }\n\n    function setBugsData(bug: number, state: UserCritterData) {\n        data.bugs[bug] = state;\n        window.localStorage.critterpedia = JSON.stringify(data);\n        setBugsDataImpl(data.bugs);\n    }\n    function setFishData(fish: number, state: UserCritterData) {\n        data.fish[fish] = state;\n        window.localStorage.critterpedia = JSON.stringify(data);\n        setFishDataImpl(data.fish);\n    }\n    const now = new Date();\n    return <div style={{ maxWidth: 1316, margin: 'auto' }}>\n        <Card style={{ margin: 16 }}>\n            <CardHeader title={t('critterpedia:search.title')} />\n            <CardContent>\n                <Grid container spacing={1}>\n                    <Grid item xs={12} sm={6} md={4} >\n                        <TextField fullWidth value={name} onChange={(event) => setName(event.target.value)} label={t('critterpedia:search.name')} />\n                    </Grid>\n                    <Grid item xs={12} sm={6} md={4} >\n                        <TextField fullWidth value={location} onChange={(event) => setLocation(event.target.value)} label={t('critterpedia:search.location')} />\n                    </Grid>\n                    <Grid item xs={12} sm={6} md={4} >\n                        <TextField fullWidth value={size} onChange={(event) => setSize(event.target.value)} label={t('critterpedia:search.shadow')} />\n                    </Grid>\n                    <Grid item xs={4} sm={2} md={2} >\n                        {/* display:flex;justify-content:center;align-items:center; */}\n                        <div style={{\n                            display: 'flex',\n                            justifyContent: 'center',\n                            alignItems: 'center',\n                            height: '100%',\n                        }}>\n                            {t('critterpedia:search.price.label')}\n                        </div>\n                    </Grid>\n                    <Grid item xs={4} sm={2} md={1} >\n                        <FormControl fullWidth>\n                            <InputLabel id=\"comp-label\">{t('critterpedia:search.price.comp')}</InputLabel>\n                            <Select\n                                value={priceComparison}\n                                onChange={(event) => setPriceComparison(\n                                    event.target.value as ('>=' | '=' | '<=')\n                                )}\n                                labelId='comp-label'\n                                fullWidth\n                            >\n                                <MenuItem value=\">=\">≥</MenuItem>\n                                <MenuItem value=\"=\">=</MenuItem>\n                                <MenuItem value=\"<=\">≤</MenuItem>\n                            </Select>\n                        </FormControl>\n                    </Grid>\n                    <Grid item xs={4} sm={2} md={1} >\n                        <TextField fullWidth value={price} onChange={(event) => setPrice(+event.target.value)} label={t('critterpedia:search.price.value')} />\n                    </Grid>\n                    <Grid item xs={12} sm={6} md={4} >\n                        <FormControl fullWidth>\n                            <InputLabel id=\"active-label\">{t('critterpedia:search.active.title')}</InputLabel>\n                            <Select\n                                value={activeRequired}\n                                onChange={(event) => setActiveRequired(\n                                    event.target.value as ('now' | 'month' | 'until_next' | 'any')\n                                )}\n                                labelId='active-label'\n                                fullWidth\n                            >\n                                <MenuItem value=\"any\">{t('critterpedia:search.active.any')}</MenuItem>\n                                <MenuItem value=\"month\">{t('critterpedia:search.active.month')}</MenuItem>\n                                <MenuItem value=\"now\">{t('critterpedia:search.active.now')}</MenuItem>\n                                <MenuItem value=\"until_next\">{t('critterpedia:search.active.until_next')}</MenuItem>\n                            </Select>\n                        </FormControl>\n                    </Grid>\n                    <Grid item xs={12} sm={6} md={4} >\n                        <FormControl fullWidth>\n                            <InputLabel id=\"state-label\">{t('critterpedia:search.state.title')}</InputLabel>\n                            <Select\n                                value={stateRequired}\n                                onChange={(event) => setStateRequired(\n                                    event.target.value as ('any' | 'unobtained' | 'unmodelled')\n                                )}\n                                labelId='state-label'\n                                fullWidth\n                            >\n                                <MenuItem value=\"any\">{t('critterpedia:search.state.any')}</MenuItem>\n                                <MenuItem value=\"unobtained\">{t('critterpedia:search.state.unobtained')}</MenuItem>\n                                <MenuItem value=\"unmodelled\">{t('critterpedia:search.state.unmodelled')}</MenuItem>\n                            </Select>\n                        </FormControl>\n                    </Grid>\n                </Grid>\n            </CardContent>\n        </Card>\n        <Card style={{ margin: 16 }}>\n            <CardHeader title={\n                <Trans i18nKey=\"critterpedia:cards.bugs\" t={t}>\n                    Bugs <span style={{ color: theme.palette.primary.main }}>\n                        ({\n                            {\n                                obtained: bugsData.reduce(\n                                    (total, bug) => total + (+bug.obtained), 0),\n                            }\n                        } / 80)\n                    </span> <span style={{ color: theme.palette.modelled.main }}>\n                        ({\n                            {\n                                modelled: bugsData.reduce(\n                                    (total, bug) => total + (+bug.modelled), 0),\n                            }\n                        } / 80)\n                    </span>\n                </Trans>\n            } />\n            <CardContent style={{ overflowX: 'auto' }}>\n                <table style={{ paddingRight: 16 }}>\n                    <tbody>\n                        {\n                            range(5).map(\n                                (y) =>\n                                    <tr>\n                                        {\n                                            range(16).map(\n                                                (x) => {\n                                                    const critterData = bugsData[x * 5 + y];\n                                                    return <td key={x}>\n                                                        <CritterPanel\n                                                            data={bugs[x * 5 + y]}\n                                                            obtained={critterData.obtained}\n                                                            modelled={critterData.modelled}\n                                                            type=\"bug\"\n                                                            setObtained={(value: boolean) => setBugsData(x * 5 + y, { obtained: value, modelled: false })}\n                                                            setModelled={(value: boolean) => setBugsData(x * 5 + y, { obtained: true, modelled: value })}\n                                                            month={now.getMonth()}\n                                                            hour={now.getHours()}\n                                                            openDialogue={openDialogueType === 'bug' ? openDialogue : null}\n                                                            setOpenDialogue={(value: number | null) => {\n                                                                // setOpenDialogueType('bug');\n                                                                // setOpenDialogue(value);\n                                                                openCritterDialogue('bug', value);\n                                                            }}\n                                                            searchParameters={searchParameters}\n                                                        />\n                                                    </td>;\n                                                }\n                                            )\n                                        }\n                                    </tr>\n                            )\n                        }\n                    </tbody>\n                </table>\n            </CardContent>\n        </Card>\n        <Card style={{ margin: 16 }}>\n            <CardHeader title={\n                <Trans i18nKey=\"critterpedia:cards.fish\" t={t}>\n                    Fish <span style={{ color: theme.palette.primary.main }}>\n                        ({\n                            {\n                                obtained: fishData.reduce(\n                                    (total, fish) => total + (+fish.obtained), 0),\n                            }\n                        } / 80)\n                        </span> <span style={{ color: theme.palette.modelled.main }}>\n                        ({\n                            {\n                                modelled: fishData.reduce(\n                                    (total, fish) => total + (+fish.modelled), 0),\n                            }\n                        } / 80)\n                        </span>\n                </Trans>\n            } />\n            <CardContent style={{ overflowX: 'auto' }}>\n                <table style={{ paddingRight: 16 }}>\n                    <tbody>\n                        {\n                            range(5).map(\n                                (y) =>\n                                    <tr>\n                                        {\n                                            range(16).map(\n                                                (x) => {\n                                                    const critterData = fishData[x * 5 + y];\n                                                    return <td key={x}>\n                                                        <CritterPanel\n                                                            data={fish[x * 5 + y]}\n                                                            obtained={critterData.obtained}\n                                                            modelled={critterData.modelled}\n                                                            type=\"fish\"\n                                                            setObtained={(value: boolean) => setFishData(x * 5 + y, { obtained: value, modelled: false })}\n                                                            setModelled={(value: boolean) => setFishData(x * 5 + y, { obtained: true, modelled: value })}\n                                                            month={now.getMonth()}\n                                                            hour={now.getHours()}\n                                                            openDialogue={openDialogueType === 'fish' ? openDialogue : null}\n                                                            setOpenDialogue={(value: number | null) => {\n                                                                // setOpenDialogueType('fish');\n                                                                // setOpenDialogue(value);\n                                                                openCritterDialogue('fish', value);\n                                                            }}\n                                                            searchParameters={searchParameters}\n                                                        />\n                                                    </td>;\n                                                }\n                                            )\n                                        }\n                                    </tr>\n                            )\n                        }\n                    </tbody>\n                </table>\n            </CardContent>\n        </Card>\n    </div>\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://cra.link/PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://cra.link/PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' },\n    })\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then((registration) => {\n                registration.unregister();\n            })\n            .catch((error) => {\n                console.error(error.message);\n            });\n    }\n}","import { ComponentsProps } from \"@material-ui/core/styles/props\";\n\nconst commonProps: ComponentsProps = {\n    MuiTextField: {\n        variant: 'filled',\n    },\n    MuiSelect: {\n        variant: 'filled',\n    },\n    MuiFormControl: {\n        variant: 'filled',\n    },\n    MuiDialogTitle: {\n        style: { textAlign: 'center' },\n    }\n};\nexport { commonProps };\n","import { createMuiTheme } from '@material-ui/core/styles';\nimport { commonProps } from './common_theme_data';\nimport './prototype_mods';\n\n\n// Dark theme\nconst theme = createMuiTheme({\n    palette: {\n        type: 'dark',\n        opacity: 0.3,\n        elevations: {\n            0: { main: '#1e1e1e' },\n            1: { main: '#292929' },\n            2: { main: '#2e2e2e' },\n            3: { main: '#303030' },\n            4: { main: '#323232' },\n            6: { main: '#373737' },\n            8: { main: '#393939' },\n            12: { main: '#3e3e3e' },\n            16: { main: '#404040' },\n            24: { main: '#424242' },\n        },\n        modelled: {\n            main: 'gold',\n            transparent: 'rgba(255, 215, 0, 0.3)',\n        },\n        winter: {\n            main: '#3c84c6',\n            transparent: 'rgba(60, 132, 198, 0.3)',\n            contrastText: 'rgba(0,0,0,87%)'\n        },\n        spring: {\n            main: '#38761c',\n            transparent: 'rgba(56, 118, 28, 0.3)',\n            contrastText: 'rgba(0,0,0,87%)'\n        },\n        summer: {\n            main: '#e69038',\n            transparent: 'rgba(230, 144, 56, 0.3)',\n            contrastText: 'rgba(0,0,0,87%)'\n        },\n        autumn: {\n            main: '#b45f04',\n            transparent: 'rgba(180, 95, 4, 0.3)',\n            contrastText: 'rgba(0,0,0,87%)'\n        },\n        primary: {\n            main: '#bb86fc',\n            dark: '#3700b3',\n            contrastText: 'rgba(0,0,0,87%)',\n            transparent: 'rgba(187, 134, 252, 0.3)',\n        },\n        secondary: {\n            main: '#03dac6',\n            dark: '#03dac6',\n            contrastText: 'rgba(0,0,0,87%)',\n        },\n        error: {\n            main: '#cf6679',\n            transparent: 'rgba(207, 102, 121, 0.3)',\n        },\n        background: {\n            paper: '#1e1e1e',\n            default: '#121212'\n        },\n        text: {\n            primary: 'rgba(255,255,255,87%)',\n            secondary: 'rgba(255,255,255,60%)',\n            hint: 'rgba(255,255,255,60%)',\n            disabled: 'rgba(255,255,255,38%)',\n        }\n    },\n    zIndex: {\n        appBar: 1250\n    },\n    props: commonProps,\n});\n\ntheme.overrides = {\n    MuiAppBar: {\n        colorPrimary: {\n            backgroundColor: theme.palette.background.paper,\n            color: theme.palette.primary.main,\n        },\n        colorSecondary: {\n            backgroundColor: theme.palette.background.paper,\n            color: theme.palette.secondary.main,\n        },\n        colorDefault: {\n            backgroundColor: theme.palette.background.paper,\n            color: theme.palette.text.primary,\n        }\n    },\n    MuiDrawer: {\n        paper: {\n            width: 240\n        }\n    },\n    MuiCard: {\n        root: {\n            borderWidth: 1,\n            borderColor: 'rgba(255, 255, 255, 8%)',\n            borderStyle: 'solid',\n        },\n    },\n    MuiCardHeader: {\n        root: {\n            paddingBottom: 0,\n            textAlign: 'center',\n        },\n    },\n    MuiListItemIcon: {\n        root: {\n            color: theme.palette.text.secondary,\n        }\n    }\n};\n\nexport default theme;","import { createMuiTheme } from '@material-ui/core/styles';\nimport { commonProps } from './common_theme_data';\nimport './prototype_mods';\n\n// Normal or default theme\nconst theme = createMuiTheme({\n    palette: {\n        type: 'light',\n        opacity: 0.6,\n        elevations: {\n            0: { main: '#ffffff' },\n            1: { main: '#ffffff' },\n            2: { main: '#ffffff' },\n            3: { main: '#ffffff' },\n            4: { main: '#ffffff' },\n            6: { main: '#ffffff' },\n            8: { main: '#ffffff' },\n            12: { main: '#ffffff' },\n            16: { main: '#ffffff' },\n            24: { main: '#ffffff' },\n        },\n        modelled: {\n            main: '#fbc02d',\n            transparent: 'rgba(251, 192, 45, 0.5)',\n        },\n        winter: {\n            main: '#3c84c6',\n            transparent: 'rgba(60, 132, 198, 0.6)',\n            contrastText: 'rgba(0,0,0,87%)',\n        },\n        spring: {\n            main: '#38761c',\n            transparent: 'rgba(56, 118, 28, 0.6)',\n            contrastText: 'rgba(0,0,0,87%)',\n        },\n        summer: {\n            main: '#e69038',\n            transparent: 'rgba(230, 144, 56, 0.6)',\n            contrastText: 'rgba(0,0,0,87%)',\n        },\n        autumn: {\n            main: '#b45f04',\n            transparent: 'rgba(180, 95, 4, 0.6)',\n            contrastText: 'rgba(0,0,0,87%)',\n        },\n        primary: {\n            main: '#6200ee',\n            dark: '#3700b3',\n            contrastText: 'rgba(255,255,255,87%)',\n            transparent: 'rgba(98, 0, 238, 0.5)',\n        },\n        secondary: {\n            main: '#03dac6',\n            dark: '#018786',\n            contrastText: 'rgba(0,0,0,87%)',\n        },\n        error: {\n            main: '#b00020',\n            transparent: 'rgba(176, 0, 32, 0.5)',\n        },\n        background: {\n            paper: '#ffffff',\n            default: '#eeeeee'\n        },\n        text: {\n            primary: 'rgba(0,0,0,87%)',\n            secondary: 'rgba(0,0,0,60%)',\n            hint: 'rgba(0,0,0,60%)',\n            disabled: 'rgba(0,0,0,38%)',\n        }\n    },\n    zIndex: {\n        appBar: 1250\n    },\n    props: commonProps,\n});\n\ntheme.overrides = {\n    MuiDrawer: {\n        paper: {\n            width: 240\n        }\n    },\n    MuiCard: {\n        root: {\n            borderWidth: 1,\n            borderColor: 'transparent',\n            borderStyle: 'solid',\n        },\n    },\n    MuiCardHeader: {\n        root: {\n            paddingBottom: 0,\n            textAlign: 'center',\n        },\n    },\n};\n\nexport default theme;","import dark from './dark';\nimport light from './light';\n\nconst themes = {\n    light,\n    dark,\n}\n\nexport default function getTheme(theme: \"light\" | \"dark\") {\n    return themes[theme];\n}","import { CssBaseline, List, ListItem, ListItemIcon, ListItemText, ThemeProvider, Typography, useMediaQuery, useTheme } from '@material-ui/core';\nimport { EmojiNature } from '@material-ui/icons';\nimport React, { Suspense } from 'react';\nimport ReactDOM from 'react-dom';\nimport { useTranslation } from 'react-i18next';\nimport { homepage } from '../package.json';\nimport AppBar from './components/AppBar';\nimport NavigationDrawer from './components/NavigationDrawer';\nimport UpdateReadyDialogue from './components/UpdateReadyDialogue';\nimport WorksOfflineDialogue from './components/WorksOfflineDialogue';\nimport { NDContextProvider } from './context';\nimport './i18n';\nimport './index.scss';\nimport { Dict } from './misc';\nimport Critterpedia from './pages/critterpedia';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport getTheme from './themes';\nimport UserSettings from './user_settings';\n\nconst baseUrl = process.env.NODE_ENV === 'production' ? homepage : 'http://localhost:3000/nookdata_v2';\nconst root = '/nookdata_v2';\n\ninterface PageData {\n    title: string;\n    icon: React.ReactNode;\n}\nconst pageData: Dict<PageData> = {\n    '/critterpedia': {\n        title: 'core:pages.critterpedia',\n        icon: <EmojiNature />,\n    },\n    // '/': {\n    //     title: 'Home',\n    //     icon: <EmojiNature />,\n    // },\n}\n\n\ninterface DrawerAdjustProps {\n    active: boolean,\n    children: React.ReactNode;\n}\nfunction DrawerAdjust(props: DrawerAdjustProps) {\n    const theme = useTheme();\n    const matches = useMediaQuery(theme.breakpoints.up('sm'));\n    return (\n        <div style={{ paddingLeft: 240 * (+props.active) * (+matches), transition: 'padding-left 195ms cubic-bezier(0.4, 0, 0.6, 1) 0ms' }}>\n            {props.children}\n        </div>\n    )\n}\ninterface AppFrameProps {\n    setTheme: (value: \"dark\" | \"light\") => void;\n    theme: \"dark\" | \"light\";\n    setPage: (value: string) => void;\n    page: string;\n    children: React.ReactNode;\n}\nfunction AppFrame(props: AppFrameProps) {\n    const theme = useTheme();\n    const startOpen = useMediaQuery(theme.breakpoints.up('lg'));\n    const [initialRender, setInitialRender] = React.useState(true);\n    const [drawerOpen, setDrawerOpen] = React.useState(false);\n    if (startOpen && initialRender) {\n        setDrawerOpen(true);\n        setInitialRender(false);\n    }\n    const { t } = useTranslation('core');\n    return (\n        <>\n            <AppBar setTheme={props.setTheme} setDrawerOpen={setDrawerOpen} theme={props.theme} drawerOpen={drawerOpen} title={\n                <Typography variant=\"h6\">\n                    <div\n                        style={{\n                            color: theme.palette.winter.main,\n                            display: 'inline'\n                        }}>{t('title.a')}</div>\n                    <div\n                        style={{\n                            color: theme.palette.summer.main,\n                            display: 'inline'\n                        }}>{t('title.b')}</div>\n                </Typography>\n            } />\n            <NavigationDrawer open={drawerOpen} setOpen={setDrawerOpen}>\n                <List>\n                    {Object.entries(pageData).map(([route, data]) => (\n                        <ListItem selected={props.page === route} button onClick={() => props.setPage(route)}>\n                            <ListItemIcon>{data.icon}</ListItemIcon>\n                            <ListItemText primary={t(data.title)} />\n                        </ListItem>\n                    ))}\n                </List>\n            </NavigationDrawer>\n            <DrawerAdjust active={drawerOpen}>\n                {props.children}\n            </DrawerAdjust>\n        </>\n    )\n}\n\ninterface RouteProps {\n    page: string;\n    route: string;\n    children: React.ReactNode;\n}\nfunction Route(props: RouteProps) {\n    const { t } = useTranslation('core');\n    if (props.page.split('?')[0] !== props.route) {\n        return null;\n    }\n    document.title = t('core:title.browser.page', { pageTitle: t(pageData[props.route].title) });\n    return <>\n        {props.children}\n    </>;\n}\n\nlet timeUpdateId: number | undefined = undefined;\nconst sentinelDate = new Date();\n\nfunction Loading() {\n    // return <img\n    //     src=\"assets/shared/loading.gif\"\n    //     style={{ width: '20%', height: '20%', margin: '15% 40%', borderRadius: '50%' }}\n    // />;\n    return <div className=\"loader\"></div>\n}\n\nfunction App() {\n    const { t } = useTranslation('core');\n    const themeSetting: \"dark\" | \"light\" = window.localStorage.theme || 'dark';\n    const [chosenTheme, setChosenThemeImpl] = React.useState<'dark' | 'light'>(themeSetting);\n    function setChosenTheme(value: 'dark' | 'light') {\n        document.body.classList.add(\"no-transition\");\n        setTimeout(() => setChosenThemeImpl(value), 10);\n        setTimeout(() => document.body.classList.remove(\"no-transition\"), 20);\n    }\n    const hemisphereSetting: \"north\" | \"south\" = window.localStorage.hemisphere || 'north';\n    const [chosenHemisphere, setChosenHemisphere] = React.useState<'north' | 'south'>(hemisphereSetting);\n    const settings: UserSettings = {\n        theme: chosenTheme,\n        hemisphere: chosenHemisphere,\n        islandName: 'Gloverboia',\n        playerName: 'Starwort',\n        timeOffset: 0,\n        useSystemTime: true,\n        useTwelveHourTime: true,\n    }\n    const [time, setTime] = React.useState(sentinelDate);\n    if (timeUpdateId) {\n        window.clearInterval(timeUpdateId);\n    }\n    timeUpdateId = window.setInterval(() => setTime(new Date()), 500);\n    const [page, setPageImpl] = React.useState('/');\n    function setPage(route: string) {\n        window.history.pushState(null, t('core:title.browser.page', { pageTitle: t(pageData[route].title) }), baseUrl + route);\n        setPageImpl(route);\n    }\n    let url = new URL(window.location.href);\n    url.pathname = url.pathname.slice(root.length) || '/';\n    let route = url.pathname;\n    if (route !== page) {\n        setPageImpl(route);\n    }\n    const params = url.searchParams;\n    function setParams(newParams: URLSearchParams) {\n        params.delete('index');\n        for (let key of params.keys()) {\n            params.delete(key);\n        }\n        for (let [key, value] of newParams.entries()) {\n            params.append(key, value);\n        }\n        let urlTmp = new URL(url.href);\n        urlTmp.pathname = root + urlTmp.pathname;\n        window.history.replaceState(null, document.title, urlTmp.href);\n        // setParamsImpl(params);\n    }\n    const theme = React.useMemo(\n        () => getTheme(chosenTheme),\n        [chosenTheme]\n    );\n    const [updateReady, setUpdateReady] = React.useState(false);\n    const [worksOffline, setWorksOffline] = React.useState(false);\n    serviceWorkerRegistration.register({ onUpdate: _ => setUpdateReady(true), onSuccess: _ => setWorksOffline(true) });\n    return <ThemeProvider theme={theme}>\n        <NDContextProvider time={time} settings={settings}>\n            <CssBaseline />\n            <AppFrame page={page} theme={chosenTheme} setTheme={setChosenTheme} setPage={setPage}>\n                <Suspense fallback={<Loading />}>\n                    <Route page={page} route=\"/critterpedia\">\n                        <Critterpedia params={params} setParams={setParams} />\n                    </Route>\n                    {/* <Route page={page} route=\"/\">\n                    <Loading />\n                </Route> */}\n                </Suspense>\n            </AppFrame>\n            <WorksOfflineDialogue open={worksOffline} setOpen={setWorksOffline} />\n            <UpdateReadyDialogue open={updateReady} setOpen={setUpdateReady} />\n        </NDContextProvider>\n    </ThemeProvider>\n}\n\nReactDOM.render(\n    <Suspense fallback={<Loading />}>\n        <App />\n    </Suspense>,\n    document.getElementById('root')\n);\nexport { };\n"],"sourceRoot":""}