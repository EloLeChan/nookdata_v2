{"version":3,"sources":["components/InfoDialogue.tsx","components/LanguageDialogue.tsx","components/AppBar.tsx","components/NavigationDrawer.tsx","components/UpdateReadyDialogue.tsx","components/WorksOfflineDialogue.tsx","context.ts","i18n.ts","pages/critterpedia/data.ts","prototype_mods.ts","pages/critterpedia/components/MonthPanels.tsx","misc.ts","pages/critterpedia/components/TimeTracker.tsx","pages/critterpedia/components/CritterPanel.tsx","pages/critterpedia/index.tsx","serviceWorkerRegistration.ts","common_theme_data.ts","dark.tsx","light.tsx","themes.tsx","index.tsx"],"names":["gitInfo","InfoDialogue","props","t","useTranslation","Dialog","open","onClose","setOpen","DialogTitle","DialogContent","gitRevision","commit","shortHash","DialogActions","Button","onClick","LanguageDialogue","aria-labelledby","PaperProps","style","width","textAlign","id","List","ListItem","button","setLang","ListItemText","primary","AppBar","i18n","React","useState","langOpen","setLangOpen","infoOpen","setInfoOpen","position","Toolbar","IconButton","edge","color","aria-label","marginRight","setDrawerOpen","drawerOpen","flexGrow","title","Info","Language","theme","window","localStorage","setTheme","value","changeLanguage","NavigationDrawer","useTheme","container","undefined","document","body","Hidden","smUp","Drawer","variant","anchor","direction","children","xsDown","UpdateReadyDialogue","WorksOfflineDialogue","defaultSettings","time","Date","settings","hemisphere","islandName","playerName","timeOffset","useSystemTime","useTwelveHourTime","NDContext","createContext","NDContextProvider","createElement","Provider","useNDContext","useContext","use","Backend","LanguageDetector","initReactI18next","init","backend","loadPath","fallbackLng","debug","process","interpolation","escapeValue","getCritterName","critter","type","normal_name","getCritterQuote","playername","getCritterLocation","location","String","prototype","capitalise","this","charAt","toUpperCase","slice","months","winter","palette","summer","spring","autumn","_getTextWidthDiv","seasons","MonthPanel","Card","backgroundColor","month","main","opacity","contrastText","borderColor","active","error","borderWidth","borderStyle","margin","CardContent","paddingBottom","MonthPanels","activeMonth","getTextWidth","text","div","top","left","appendChild","innerText","clientWidth","TimeTracker","now","progress","getMilliseconds","getSeconds","getMinutes","getHours","className","marginBottom","Math","max","pad","h12","h24","m","hours","modelled","useStyles","makeStyles","createStyles","transparent","CritterPanel","data","activeNow","hour","reduce","a","b","leavingSoon","searchParameters","activeRequired","name","price","priceComparison","size","stateRequired","shadow","match","includes","toLowerCase","obtained","index","filter","elem","join","CardActionArea","setOpenDialogue","Warning","Help","src","toString","padStart","scroll","transition","ChevronLeft","ChevronRight","disabled","Divider","marginTop","dangerouslySetInnerHTML","__html","map","getMonth","dry","WbSunny","rain","Cloud","FormControlLabel","control","Checkbox","checked","onChange","event","setObtained","target","label","setModelled","range","stop","Array","from","keys","Critterpedia","critterpedia","bugs","fish","i","push","JSON","stringify","parse","setActiveRequired","setLocation","setName","setPrice","setPriceComparison","setSize","setStateRequired","load","bugsData","setBugsDataImpl","fishData","setFishDataImpl","history","useHistory","setBugsData","bug","state","setFishData","Helmet","maxWidth","CardHeader","Grid","spacing","item","xs","sm","md","TextField","fullWidth","FormControl","InputLabel","Select","labelId","MenuItem","Trans","i18nKey","total","overflowX","paddingRight","y","x","myIndex","critterData","isLocalhost","Boolean","hostname","register","config","navigator","URL","href","origin","addEventListener","swUrl","fetch","headers","then","response","contentType","get","status","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","catch","console","log","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","commonProps","MuiTextField","MuiSelect","MuiFormControl","MuiDialogTitle","createMuiTheme","elevations","0","1","2","3","4","6","8","12","16","24","dark","secondary","background","paper","default","hint","zIndex","appBar","overrides","MuiAppBar","colorPrimary","colorSecondary","colorDefault","MuiDrawer","MuiCard","root","MuiCardHeader","MuiListItemIcon","themes","light","homepage","pageData","icon","EmojiNature","DrawerAdjust","matches","useMediaQuery","breakpoints","up","paddingLeft","ListItemLink","to","exact","renderLink","useMemo","forwardRef","itemProps","ref","activeClassName","component","ListItemIcon","AppFrame","startOpen","initialRender","setInitialRender","Typography","display","Object","entries","route","timeUpdateId","sentinelDate","Loading","valueOr","defaultValue","rv","isNaN","booleanOr","App","themeSetting","chosenTheme","setChosenThemeImpl","nameSetting","chosenName","islandNameSetting","chosenIslandName","hemisphereSetting","chosenHemisphere","offsetSetting","chosenOffset","systemTimeSetting","chosenSystemTime","twelveHourTimeSetting","chosenTwelveHourTime","setTime","clearInterval","setInterval","getTheme","updateReady","setUpdateReady","worksOffline","setWorksOffline","serviceWorkerRegistration","_","ThemeProvider","CssBaseline","classList","add","setTimeout","remove","fallback","path","render","params","ReactDOM","basename","getElementById"],"mappings":"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","file":"static/js/main.a778e772.chunk.js","sourcesContent":["import { Button, Dialog, DialogActions, DialogContent, DialogTitle } from '@material-ui/core';\nimport React from 'react';\nimport GitInfo from 'react-git-info/macro';\nimport { useTranslation } from 'react-i18next';\n\nconst gitInfo = GitInfo();\n\ninterface InfoDialogueProps {\n    open: boolean;\n    setOpen: (value: boolean) => void;\n}\n\nexport default function InfoDialogue(props: InfoDialogueProps) {\n    const { t } = useTranslation('core');\n    return <Dialog open={props.open} onClose={() => props.setOpen(false)}>\n        <DialogTitle>\n            {t('core:info.title')}\n        </DialogTitle>\n        <DialogContent>\n            {t('core:info.description', { gitRevision: gitInfo.commit.shortHash })}\n        </DialogContent>\n        <DialogActions>\n            <Button onClick={() => props.setOpen(false)}>\n                {t('core:button.dismiss')}\n            </Button>\n        </DialogActions>\n    </Dialog>\n}","import { Dialog, DialogTitle, List, ListItem, ListItemText } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\ninterface LanguageDialogueProps {\n    open: boolean;\n    setLang: (lang: string) => void;\n}\n\nexport default function LanguageDialogue(props: LanguageDialogueProps) {\n    const { t } = useTranslation('core');\n    return <Dialog aria-labelledby=\"lang-dialogue-title\" open={props.open} PaperProps={{ style: { width: 250 } }}>\n        <DialogTitle style={{ textAlign: 'center' }} id=\"lang-dialogue-title\">{t('core:lang.choose')}</DialogTitle>\n        <List>\n            <ListItem style={{ textAlign: 'center' }} button onClick={() => props.setLang('en')}>\n                <ListItemText primary={t('core:lang.en')} />\n            </ListItem>\n            <ListItem style={{ textAlign: 'center' }} button onClick={() => props.setLang('fr')}>\n                <ListItemText primary={t('core:lang.fr')} />\n            </ListItem>\n        </List>\n    </Dialog>;\n}","import { AppBar as TopAppBar, IconButton, Toolbar } from '@material-ui/core';\nimport { Info, Language } from '@material-ui/icons';\nimport DarkModeIcon from '@material-ui/icons/Brightness4';\nimport LightModeIcon from '@material-ui/icons/Brightness7';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport InfoDialogue from './InfoDialogue';\nimport LanguageDialogue from './LanguageDialogue';\n\n\ninterface AppBarProps {\n    setTheme: (value: \"dark\" | \"light\") => void,\n    theme: 'dark' | 'light',\n    setDrawerOpen: (value: boolean) => void,\n    drawerOpen: boolean,\n    title: React.ReactNode,\n}\n\nfunction AppBar(props: AppBarProps) {\n    const { t, i18n } = useTranslation('core');\n    const [langOpen, setLangOpen] = React.useState(false);\n    const [infoOpen, setInfoOpen] = React.useState(false);\n    return (\n        <>\n            <TopAppBar position=\"fixed\">\n                <Toolbar>\n                    <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\"\n                        style={{ marginRight: 16 }}\n                        onClick={() => props.setDrawerOpen(!props.drawerOpen)}>\n                        <MenuIcon />\n                    </IconButton>\n                    <div style={{ flexGrow: 1 }}>\n                        {props.title}\n                    </div>\n                    <IconButton color=\"inherit\" onClick={() => setInfoOpen(true)}>\n                        <Info />\n                    </IconButton>\n                    <IconButton color=\"inherit\" onClick={() => setLangOpen(true)}>\n                        <Language />\n                    </IconButton>\n                    {props.theme == 'light'\n                        ? <IconButton\n                            color=\"inherit\"\n                            onClick={\n                                () => {\n                                    window.localStorage.theme = 'dark';\n                                    props.setTheme('dark')\n                                }\n                            }><DarkModeIcon /></IconButton>\n                        : <IconButton\n                            color=\"inherit\"\n                            onClick={\n                                () => {\n                                    window.localStorage.theme = 'light';\n                                    props.setTheme('light')\n                                }\n                            }><LightModeIcon /></IconButton>}\n                </Toolbar>\n            </TopAppBar>\n            <Toolbar />\n            <LanguageDialogue open={langOpen} setLang={(value: string) => {\n                i18n.changeLanguage(value);\n                setLangOpen(false);\n            }} />\n            <InfoDialogue open={infoOpen} setOpen={setInfoOpen} />\n        </>\n    )\n}\nexport default AppBar;\n","import { Drawer, Hidden, Toolbar, useTheme } from '@material-ui/core';\nimport React from 'react';\ninterface NavigationDrawerProps {\n    open: boolean;\n    setOpen: (value: boolean) => void;\n    children: React.ReactNode;\n}\n\n\nfunction NavigationDrawer(props: NavigationDrawerProps) {\n    const theme = useTheme();\n    const container = window !== undefined ? () => window.document.body : undefined;\n    return <>\n        <Hidden smUp>\n            <Drawer\n                variant=\"temporary\"\n                container={container}\n                anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n                open={props.open}\n                onClose={() => props.setOpen(false)}\n            >\n                {props.children}\n            </Drawer>\n        </Hidden>\n        <Hidden xsDown>\n            <Drawer\n                variant=\"persistent\"\n                anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n                open={props.open}\n            >\n                <Toolbar />\n                {props.children}\n            </Drawer>\n        </Hidden>\n    </>;\n}\nexport default NavigationDrawer;\n","import { Button, Dialog, DialogActions, DialogContent, DialogTitle } from '@material-ui/core';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\ninterface UpdateReadyDialogueProps {\n    open: boolean;\n    setOpen: (value: boolean) => void;\n}\n\nexport default function UpdateReadyDialogue(props: UpdateReadyDialogueProps) {\n    const { t } = useTranslation(['service', 'core']);\n    return <Dialog open={props.open} onClose={() => props.setOpen(false)}>\n        <DialogTitle>{t('service:available_update.title')}</DialogTitle>\n        <DialogContent>\n            {t('service:available_update.content')}\n        </DialogContent>\n        <DialogActions>\n            <Button variant=\"text\" onClick={() => props.setOpen(false)}>{t('core:button.dismiss')}</Button>\n        </DialogActions>\n    </Dialog>\n}","import { Button, Dialog, DialogActions, DialogContent, DialogTitle } from '@material-ui/core';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\ninterface WorksOfflineDialogueProps {\n    open: boolean;\n    setOpen: (value: boolean) => void;\n}\n\nexport default function WorksOfflineDialogue(props: WorksOfflineDialogueProps) {\n    const { t } = useTranslation(['service', 'core']);\n    return <Dialog open={props.open} onClose={() => props.setOpen(false)}>\n        <DialogTitle>{t('service:available_offline.title')}</DialogTitle>\n        <DialogContent>\n            {t('service:available_offline.content')}\n        </DialogContent>\n        <DialogActions>\n            <Button variant=\"text\" onClick={() => props.setOpen(false)}>{t('core:button.dismiss')}</Button>\n        </DialogActions>\n    </Dialog>\n}","import React, { useContext } from \"react\";\nimport UserSettings from \"./user_settings\";\n\ninterface INDContext {\n    time: Date;\n    settings: UserSettings;\n};\nlet defaultSettings: INDContext = {\n    time: new Date(),\n    settings: {\n        theme: 'dark',\n        hemisphere: 'north',\n        islandName: 'Gloverboia',\n        playerName: 'Starwort',\n        timeOffset: 0,\n        useSystemTime: true,\n        useTwelveHourTime: true,\n    }\n}\nexport const NDContext = React.createContext<INDContext>(defaultSettings);\nexport function NDContextProvider({ time, settings, children }: INDContext & { children: React.ReactElement[] }) {\n    const value = { time, settings };\n    return React.createElement(\n        NDContext.Provider,\n        { value },\n        children,\n    )\n}\nexport function useTime() {\n    const { time } = useContext(NDContext);\n    return time;\n}\nexport function useSettings() {\n    const { settings } = useContext(NDContext);\n    return settings;\n}\nexport function useNDContext() {\n    return useContext(NDContext);\n}\n","\nimport i18n from 'i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport Backend from 'i18next-http-backend';\nimport { initReactI18next } from 'react-i18next';\n\ni18n.use(Backend)\n    .use(LanguageDetector)\n    .use(initReactI18next)\n    .init({\n        backend: { loadPath: '/nookdata_v2/assets/i18n/{{lng}}/{{ns}}.json' },\n        fallbackLng: 'en',\n        debug: process.env.NODE_ENV == 'development',\n\n        interpolation: {\n            escapeValue: false, // not needed for react as it escapes by default\n        }\n    });","import { bugs, fish } from './data.json';\n\ntype Critter = typeof bugs[0] | typeof fish[0];\nexport type { Critter };\nexport {\n    getCritterName,\n    getCritterQuote,\n    getCritterLocation\n};\n\n\nfunction getCritterName(critter: Critter, type: 'bug' | 'fish', t: (key: string, props?: Object) => string) {\n    return t(`critterpedia:${type}.name.${critter.normal_name}`);\n}\n\nfunction getCritterQuote(critter: Critter, type: 'bug' | 'fish', playername: string, t: (key: string, props?: Object) => string) {\n    return t(`critterpedia:${type}.quote.${critter.normal_name}`, { playername });\n}\n\nfunction getCritterLocation(critter: Critter, type: 'bug' | 'fish', t: (key: string, props?: Object) => string) {\n    return t(`critterpedia:${type}.location.${critter.location}`);\n}\n\n\n","declare global {\n    interface String {\n        capitalise: () => String;\n    }\n}\nString.prototype.capitalise = function () {\n    return this.charAt(0).toUpperCase() + this.slice(1);\n}\n\ndeclare module \"react\" {\n    interface CSSProperties {\n        '--progress'?: string | number;\n    }\n}\n\ndeclare module \"@material-ui/core/styles/createPalette\" {\n    interface ElevationColour {\n        0: { main: string };\n        1: { main: string };\n        2: { main: string };\n        3: { main: string };\n        4: { main: string };\n        6: { main: string };\n        8: { main: string };\n        12: { main: string };\n        16: { main: string };\n        24: { main: string };\n    }\n    interface PaletteColor {\n        transparent?: string;\n    }\n    interface SimplePaletteColorOptions {\n        transparent?: string;\n    }\n    interface Palette {\n        elevations: ElevationColour;\n        opacity: number;\n        modelled: Palette['primary'];\n        spring: Palette['primary'];\n        summer: Palette['primary'];\n        autumn: Palette['primary'];\n        winter: Palette['primary'];\n    }\n    interface PaletteOptions {\n        elevations: ElevationColour;\n        opacity: number;\n        modelled: PaletteOptions['primary'];\n        spring: PaletteOptions['primary'];\n        summer: PaletteOptions['primary'];\n        autumn: PaletteOptions['primary'];\n        winter: PaletteOptions['primary'];\n    }\n}\nexport { };\n","import { Card, CardContent, Theme, useTheme } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useNDContext } from \"../../../context\";\nimport '../../../prototype_mods';\nimport UserSettings from '../../../user_settings';\nimport './CritterPanel.scss';\nconst months = [\n    \"critterpedia:dialogue.months.jan\",\n    \"critterpedia:dialogue.months.feb\",\n    \"critterpedia:dialogue.months.mar\",\n    \"critterpedia:dialogue.months.apr\",\n    \"critterpedia:dialogue.months.may\",\n    \"critterpedia:dialogue.months.jun\",\n    \"critterpedia:dialogue.months.jul\",\n    \"critterpedia:dialogue.months.aug\",\n    \"critterpedia:dialogue.months.sep\",\n    \"critterpedia:dialogue.months.oct\",\n    \"critterpedia:dialogue.months.nov\",\n    \"critterpedia:dialogue.months.dec\",\n];\nfunction winter(theme: Theme, settings: UserSettings) {\n    return (\n        settings.hemisphere === \"north\"\n            ? theme.palette.winter\n            : theme.palette.summer\n    );\n}\nfunction spring(theme: Theme, settings: UserSettings) {\n    return (\n        settings.hemisphere === \"north\"\n            ? theme.palette.spring\n            : theme.palette.autumn\n    );\n}\nfunction summer(theme: Theme, settings: UserSettings) {\n    return (\n        settings.hemisphere === \"north\"\n            ? theme.palette.summer\n            : theme.palette.winter\n    );\n}\nfunction autumn(theme: Theme, settings: UserSettings) {\n    return (\n        settings.hemisphere === \"north\"\n            ? theme.palette.autumn\n            : theme.palette.spring\n    );\n}\nconst seasons = [\n    winter,\n    winter,\n    spring,\n    spring,\n    spring,\n    summer,\n    summer,\n    summer,\n    autumn,\n    autumn,\n    autumn,\n    winter,\n];\n\ninterface MonthPanelProps {\n    months: boolean[];\n    month: number;\n    active: boolean;\n}\nfunction MonthPanel(props: MonthPanelProps) {\n    const theme = useTheme();\n    const { t } = useTranslation('critterpedia');\n    const { settings } = useNDContext();\n    return <td width=\"33%\">\n        <Card\n            variant=\"outlined\"\n            style={{\n                // backgroundColor: ((colour) => (\n                //     props.months[props.month]\n                //         ? colour.main\n                //         : colour.transparent\n                // ))(\n                //     seasons[props.month](theme, settings)\n                // ),\n                backgroundColor: seasons[props.month](theme, settings).main,\n                opacity: props.months[props.month] ? undefined : theme.palette.opacity,\n                color: seasons[props.month](theme, settings).contrastText,\n                borderColor: props.active ? theme.palette.error.main : 'transparent',\n                borderWidth: 2,\n                borderStyle: 'solid',\n                margin: -1,\n            }}\n        >\n            <CardContent style={{ paddingBottom: 16 }}>\n                {t(months[props.month])}\n            </CardContent>\n        </Card>\n    </td>\n}\ninterface MonthPanelsProps {\n    months: boolean[];\n    activeMonth: number;\n}\nexport default function MonthPanels(props: MonthPanelsProps) {\n    return <table style={{ width: '100%' }}>\n        <tbody>\n            <tr>\n                <MonthPanel\n                    months={props.months}\n                    month={0}\n                    active={props.activeMonth == 0}\n                />\n                <MonthPanel\n                    months={props.months}\n                    month={1}\n                    active={props.activeMonth == 1}\n                />\n                <MonthPanel\n                    months={props.months}\n                    month={2}\n                    active={props.activeMonth == 2}\n                />\n            </tr>\n            <tr>\n                <MonthPanel\n                    months={props.months}\n                    month={3}\n                    active={props.activeMonth == 3}\n                />\n                <MonthPanel\n                    months={props.months}\n                    month={4}\n                    active={props.activeMonth == 4}\n                />\n                <MonthPanel\n                    months={props.months}\n                    month={5}\n                    active={props.activeMonth == 5}\n                />\n            </tr>\n            <tr>\n                <MonthPanel\n                    months={props.months}\n                    month={6}\n                    active={props.activeMonth == 6}\n                />\n                <MonthPanel\n                    months={props.months}\n                    month={7}\n                    active={props.activeMonth == 7}\n                />\n                <MonthPanel\n                    months={props.months}\n                    month={8}\n                    active={props.activeMonth == 8}\n                />\n            </tr>\n            <tr>\n                <MonthPanel\n                    months={props.months}\n                    month={9}\n                    active={props.activeMonth == 9}\n                />\n                <MonthPanel\n                    months={props.months}\n                    month={10}\n                    active={props.activeMonth == 10}\n                />\n                <MonthPanel\n                    months={props.months}\n                    month={11}\n                    active={props.activeMonth == 11}\n                />\n            </tr>\n        </tbody>\n    </table >;\n}","type Dict<V> = {\n    [key: string]: V;\n}\nvar _getTextWidthDiv: HTMLDivElement;\nfunction setUpDiv() {\n    _getTextWidthDiv = document.createElement(\"div\");\n    _getTextWidthDiv.style.position = 'absolute';\n    _getTextWidthDiv.style.top = '-9999px';\n    _getTextWidthDiv.style.left = '-9999px';\n    // _getTextWidthDiv.ariaHidden = true;\n    document.body.appendChild(_getTextWidthDiv);\n    return _getTextWidthDiv;\n}\nfunction getTextWidth(text: string) {\n    var div = _getTextWidthDiv ?? (setUpDiv());\n    div.innerText = text\n    return div.clientWidth;\n}\n\nexport type { Dict };\nexport { getTextWidth };\n\n","import { useTheme } from '@material-ui/core';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useNDContext } from '../../../context';\nimport { getTextWidth } from '../../../misc';\nimport './TimeTracker.scss';\n\ninterface TimeTrackerProps {\n    hours: boolean[];\n}\n\nexport default function TimeTracker(props: TimeTrackerProps) {\n    const theme = useTheme();\n    const { t } = useTranslation('core');\n    const { time: now, settings } = useNDContext();\n    let progress = (\n        (\n            (\n                now.getMilliseconds() / 1000\n                + now.getSeconds()\n            ) / 60\n            + now.getMinutes()\n        ) / 60\n        + now.getHours()\n    ) * 100 / 24;\n    return <div\n        className=\"time-tracker\"\n        style={{\n            marginBottom: Math.max(\n                getTextWidth(\n                    t(\n                        settings.useTwelveHourTime\n                            ? 'core:time.twelve_hour.am_short'\n                            : 'core:time.twenty_four_hour',\n                        {\n                            pad: '0',\n                            h12: 12,\n                            h24: 0,\n                            m: '00',\n                        }\n                    )\n                ),\n                getTextWidth(\n                    t(\n                        settings.useTwelveHourTime\n                            ? 'core:time.twelve_hour.pm_short'\n                            : 'core:time.twenty_four_hour',\n                        {\n                            pad: '0',\n                            h12: 12,\n                            h24: 0,\n                            m: '00',\n                        }\n                    )\n                ),\n            ) - 8,\n        }}\n    >\n        <div\n            className=\"now\"\n            style={{\n                backgroundColor: theme.palette.error.main,\n                '--progress': `${progress}%`,\n            }}\n        />\n        <div>\n            <div className=\"large-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n            <div className=\"division-label\">\n                {\n                    t(\n                        settings.useTwelveHourTime\n                            ? 'core:time.twelve_hour.am_short'\n                            : 'core:time.twenty_four_hour',\n                        {\n                            pad: '0',\n                            h12: 12,\n                            h24: 0,\n                            m: '00',\n                        }\n                    )\n                }\n            </div>\n        </div>\n        <div className=\"hour\" style={{ backgroundColor: props.hours[0] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[1] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[2] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[3] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[4] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[5] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div>\n            <div className=\"medium-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n            <div className=\"division-label\">\n                {\n                    t(\n                        settings.useTwelveHourTime\n                            ? 'core:time.twelve_hour.am_short'\n                            : 'core:time.twenty_four_hour',\n                        {\n                            pad: '0',\n                            h12: 6,\n                            h24: 6,\n                            m: '00',\n                        }\n                    )\n                }\n            </div>\n        </div>\n        <div className=\"hour\" style={{ backgroundColor: props.hours[6] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[7] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[8] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[9] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[10] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[11] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div>\n            <div className=\"large-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n            <div className=\"division-label\">\n                {\n                    t(\n                        settings.useTwelveHourTime\n                            ? 'core:time.twelve_hour.pm_short'\n                            : 'core:time.twenty_four_hour',\n                        {\n                            pad: '',\n                            h12: 12,\n                            h24: 12,\n                            m: '00',\n                        }\n                    )\n                }\n            </div>\n        </div>\n        <div className=\"hour\" style={{ backgroundColor: props.hours[12] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[13] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[14] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[15] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[16] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[17] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div>\n            <div className=\"medium-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n            <div className=\"division-label\">\n                {\n                    t(\n                        settings.useTwelveHourTime\n                            ? 'core:time.twelve_hour.pm_short'\n                            : 'core:time.twenty_four_hour',\n                        {\n                            pad: '',\n                            h12: 6,\n                            h24: 18,\n                            m: '00',\n                        }\n                    )\n                }\n            </div>\n        </div>\n        <div className=\"hour\" style={{ backgroundColor: props.hours[18] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[19] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[20] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[21] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[22] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[23] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div>\n            <div className=\"large-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n            <div className=\"division-label\">\n                {\n                    t(\n                        settings.useTwelveHourTime\n                            ? 'core:time.twelve_hour.am_short'\n                            : 'core:time.twenty_four_hour',\n                        {\n                            pad: '0',\n                            h12: 12,\n                            h24: 0,\n                            m: '00',\n                        }\n                    )\n                }\n            </div>\n        </div>\n    </div>\n}","import { Card, CardActionArea, CardContent, Checkbox, createStyles, Dialog, DialogActions, DialogContent, DialogTitle, Divider, FormControlLabel, IconButton, makeStyles, Toolbar, useTheme } from \"@material-ui/core\";\nimport { ChevronLeft, ChevronRight, Cloud, Help, Warning, WbSunny } from \"@material-ui/icons\";\nimport React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useNDContext } from \"../../../context\";\nimport '../../../prototype_mods';\nimport { getCritterLocation, getCritterName, getCritterQuote } from '../data';\nimport { bugs, fish } from '../data.json';\nimport SearchParameters from \"../search_parameters\";\nimport './CritterPanel.scss';\nimport MonthPanels from \"./MonthPanels\";\nimport TimeTracker from \"./TimeTracker\";\n\nconst useStyles = makeStyles((theme) => createStyles({\n    modelled: {\n        color: theme.palette.modelled.main,\n        '&.Mui-disabled': {\n            color: theme.palette.modelled.transparent,\n        },\n    },\n}))\n\ninterface CritterPanelProps {\n    data: (typeof bugs[0]) | (typeof fish[0]);\n    type: 'bug' | 'fish';\n    obtained: boolean;\n    modelled: boolean;\n    setObtained: (value: boolean) => void;\n    setModelled: (value: boolean) => void;\n    month: number;\n    hour: number;\n    searchParameters: SearchParameters;\n    open: boolean;\n    setOpenDialogue: (value: number | null) => void;\n}\nfunction CritterPanel(props: CritterPanelProps) {\n    const { t } = useTranslation('critterpedia');\n    const { time, settings } = useNDContext();\n    const hours = (\n        settings.hemisphere == 'north' ?\n            props.data.hours :\n            [...props.data.hours.slice(6), ...props.data.hours.slice(0, 6)]\n    );\n    const theme = useTheme();\n    const activeNow = hours[props.month][props.hour];\n    const activeMonth = hours[props.month].reduce((a, b) => a || b);\n    const leavingSoon = activeMonth && !hours[(props.month + 1) % 12].reduce((a, b) => a || b);\n    const { palette } = useTheme();\n    const {\n        activeRequired,\n        location,\n        name,\n        price,\n        priceComparison,\n        size,\n        stateRequired,\n    } = props.searchParameters;\n    let shadow = '';\n    if (props.type == 'fish') {\n        shadow = t(`critterpedia:fish.size.${(props.data as typeof fish[0]).shadow}`);\n    }\n    let match = true;\n    if (activeRequired === 'now' && !activeNow) {\n        match = false;\n    } else if (activeRequired === 'month' && !activeMonth) {\n        match = false;\n    } else if (activeRequired === 'until_next' && !leavingSoon) {\n        match = false;\n    } else if (!getCritterLocation(props.data, props.type, t).includes(location.toLowerCase())) {\n        match = false;\n    } else if (!getCritterName(props.data, props.type, t).includes(name.toLowerCase())) {\n        match = false;\n    } else if (props.type == 'fish' && !shadow.includes(size.toLowerCase())) {\n        match = false;\n    } else if (stateRequired === 'unobtained' && props.obtained) {\n        match = false;\n    } else if (stateRequired === 'unmodelled' && props.modelled) {\n        match = false;\n    } else {\n        switch (priceComparison) {\n            case '>=':\n                if (props.data.price < price) {\n                    match = false;\n                }\n                break;\n            case '=':\n                if (props.data.price != price) {\n                    match = false;\n                }\n                break;\n            case '<=':\n                if (props.data.price > price) {\n                    match = false;\n                }\n                break;\n        }\n    }\n\n    const title = [\n        t(`critterpedia:panel.type.${props.type}`, { name: getCritterName(props.data, props.type, t).capitalise(), index: props.data.index + 1 }),\n        (activeMonth ? '' : t('critterpedia:panel.status.unavailable')),\n        (activeNow ? t('critterpedia:panel.status.now') : ''),\n        (props.modelled ? t('critterpedia:panel.status.modelled') : ''),\n        t('critterpedia:panel.status.details'),\n    ].filter((elem) => !!elem).join('\\n');\n\n    return <>\n        <Card\n            className=\"critter-panel\"\n            title={title}\n            style={\n                {\n                    backgroundColor: props.modelled\n                        ? palette.modelled.transparent\n                        : (\n                            props.obtained\n                                ? palette.primary.transparent\n                                : (\n                                    activeMonth\n                                        ? undefined\n                                        : palette.error.transparent\n                                )\n                        ),\n                    borderColor: props.modelled\n                        ? palette.modelled.main\n                        : (\n                            activeMonth\n                                ? (\n                                    props.obtained\n                                        ? palette.primary.main\n                                        : undefined\n                                )\n                                : palette.error.main\n                        ),\n                    opacity: match ? 1 : theme.palette.opacity,\n                }\n            }\n        >\n            <CardActionArea onClick={() => props.setOpenDialogue(props.data.index)}>\n                {\n                    leavingSoon\n                        ? <Warning style={{\n                            color: props.modelled\n                                ? palette.modelled.main\n                                : palette.error.main,\n                        }} />\n                        : <Help style={{\n                            color: props.modelled\n                                ? palette.modelled.main\n                                : (\n                                    activeMonth\n                                        ? (\n                                            props.obtained\n                                                ? palette.primary.main\n                                                : undefined\n                                        )\n                                        : palette.error.main\n                                ),\n                        }} />\n                }\n                <img src={\n                    `assets/${props.type}/${props.data.index.toString().padStart(2, '0')\n                    }.png`\n                } />\n            </CardActionArea>\n        </Card>\n        <Dialog\n            open={props.open}\n            onClose={() => props.setOpenDialogue(null)}\n            scroll=\"body\"\n            PaperProps={{\n                style: {\n                    borderColor: props.modelled\n                        ? palette.modelled.main\n                        : (\n                            props.obtained\n                                ? palette.primary.main\n                                : 'transparent'\n                        ),\n                    borderWidth: 1,\n                    borderStyle: 'solid',\n                    width: \"75%\",\n                    transition: 'color 0.5s ease-in-out, border-color 0.5s ease-in-out',\n                }\n            }}\n        >\n            <DialogTitle style={{\n                paddingBottom: 0,\n            }}\n            >\n                <Toolbar>\n                    {\n                        props.data.index > 0\n                            ? <IconButton edge=\"start\" onClick={() => props.setOpenDialogue(props.data.index - 1)}>\n                                {theme.direction == 'ltr' ? <ChevronLeft /> : <ChevronRight />}\n                            </IconButton>\n                            : <IconButton disabled />\n                    }\n                    <div style={{\n                        textAlign: 'center',\n                        color: props.modelled\n                            ? palette.modelled.main\n                            : (\n                                props.obtained\n                                    ? palette.primary.main\n                                    : undefined\n                            ),\n                        flexGrow: 1,\n                        transition: 'color 0.5s ease-in-out',\n                    }}>\n                        {getCritterName(props.data, props.type, t).capitalise()}\n                    </div>\n                    {\n                        props.data.index < 79\n                            ? <IconButton edge=\"end\" onClick={() => props.setOpenDialogue(props.data.index + 1)}>\n                                {theme.direction == 'ltr' ? <ChevronRight /> : <ChevronLeft />}\n                            </IconButton>\n                            : <IconButton disabled />\n                    }\n                </Toolbar>\n            </DialogTitle>\n            <DialogContent\n                style={{\n                    textAlign: 'center'\n                }}\n            >\n                {t(`critterpedia:dialogue.type.${props.type}`, { index: props.data.index + 1 })}\n                <br />\n                <Divider style={{ marginTop: 8, marginBottom: 8 }} />\n                <div\n                    style={{ paddingBottom: 8 }}\n                    dangerouslySetInnerHTML={{\n                        __html: getCritterQuote(\n                            props.data,\n                            props.type,\n                            settings.playerName,\n                            t\n                        )\n                    }}\n                />\n                <MonthPanels\n                    months={hours.map(\n                        (month) => month.reduce((a, b) => a || b)\n                    )}\n                    activeMonth={props.month}\n                />\n                <TimeTracker\n                    hours={hours[time.getMonth()]}\n                />\n                <Card variant=\"outlined\">\n                    <CardContent>\n                        <div className=\"critter-overview\">\n                            <img\n                                src={\n                                    `assets/${props.type}/${props.data.index.toString().padStart(2, '0')\n                                    }.png`\n                                }\n                                className=\"critter-icon\"\n                            />\n                            {props.data.dry && <div\n                                title={t('critterpedia:dialogue.details.dry')}\n                            >\n                                <WbSunny\n                                    className=\"critter-dry\"\n                                    style={{\n                                        color: theme.palette.summer.main\n                                    }}\n                                />\n                            </div>}\n                            {props.data.rain && <div\n                                title={t('critterpedia:dialogue.details.wet')}\n                            >\n                                <Cloud\n                                    className=\"critter-wet\"\n                                    style={{\n                                        color: theme.palette.winter.main\n                                    }}\n                                />\n                            </div>}\n                            <div className=\"location-label\">{t('critterpedia:dialogue.details.found')}</div>\n                            <div className=\"price-label\">{t('critterpedia:dialogue.details.price')}</div>\n                            <div className=\"location\">{getCritterLocation(props.data, props.type, t)}</div>\n                            <div className=\"price\">{props.data.price}</div>\n                        </div>\n                    </CardContent>\n                </Card>\n            </DialogContent>\n            <DialogActions>\n                <FormControlLabel\n                    control={\n                        <Checkbox\n                            checked={props.obtained}\n                            onChange={(event) => props.setObtained(event.target.checked)}\n                            color=\"primary\"\n                        />\n                    }\n                    label={t('critterpedia:dialogue.obtained')}\n                />\n                <FormControlLabel\n                    control={\n                        <Checkbox\n                            className={useStyles(theme).modelled}\n                            checked={props.modelled}\n                            disabled={!props.obtained}\n                            onChange={(event) => props.setModelled(event.target.checked)}\n                            color=\"default\"\n                        />\n                    }\n                    label={t('critterpedia:dialogue.modelled')}\n                />\n            </DialogActions>\n        </Dialog>\n    </>;\n}\nexport default CritterPanel;","import { Card, CardContent, CardHeader, FormControl, Grid, InputLabel, MenuItem, Select, TextField, useTheme } from '@material-ui/core';\nimport React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { useHistory } from 'react-router';\nimport CritterPanel from './components/CritterPanel';\nimport { bugs, fish } from './data.json';\nimport SearchParameters from './search_parameters';\n\nfunction range(stop: number) {\n    return Array.from(Array(stop).keys());\n}\n\ninterface UserCritterData {\n    obtained: boolean;\n    modelled: boolean;\n}\n\ninterface UserCritterpediaData {\n    bugs: UserCritterData[];\n    fish: UserCritterData[];\n}\n\ninterface CritterpediaProps {\n    load?: { type: 'bug' | 'fish', index: number }\n}\n\nexport default function Critterpedia(props: CritterpediaProps) {\n    const { t } = useTranslation('critterpedia');\n    const theme = useTheme();\n    if (!window.localStorage.critterpedia) {\n        let data: UserCritterpediaData = {\n            bugs: [],\n            fish: [],\n        };\n        for (let i = 0; i < 80; i++) {\n            data.bugs.push({ obtained: false, modelled: false });\n            data.fish.push({ obtained: false, modelled: false });\n        }\n        window.localStorage.critterpedia = JSON.stringify(data);\n    }\n    const data: UserCritterpediaData = JSON.parse(window.localStorage.critterpedia);\n    const [activeRequired, setActiveRequired] = React.useState<'now' | 'month' | 'until_next' | 'any'>('any');\n    const [location, setLocation] = React.useState('');\n    const [name, setName] = React.useState('');\n    const [price, setPrice] = React.useState(0);\n    const [priceComparison, setPriceComparison] = React.useState<'>=' | '=' | '<='>('>=');\n    const [size, setSize] = React.useState('');\n    const [stateRequired, setStateRequired] = React.useState<'unobtained' | 'unmodelled' | 'any'>('any');\n    const searchParameters: SearchParameters = {\n        activeRequired,\n        location,\n        name,\n        price,\n        priceComparison,\n        size,\n        stateRequired,\n    };\n    const { type, index } = props.load ?? { type: 'bug', index: null };\n    const [bugsData, setBugsDataImpl] = React.useState(data.bugs);\n    const [fishData, setFishDataImpl] = React.useState(data.fish);\n\n    const history = useHistory();\n\n    function setOpenDialogue(type: 'bug' | 'fish', index: number | null) {\n        if (index === null) {\n            history.push('/critterpedia');\n        } else {\n            history.push(`/critterpedia/${type}/${index}`);\n        }\n    }\n\n    function setBugsData(bug: number, state: UserCritterData) {\n        data.bugs[bug] = state;\n        window.localStorage.critterpedia = JSON.stringify(data);\n        setBugsDataImpl(data.bugs);\n    }\n    function setFishData(fish: number, state: UserCritterData) {\n        data.fish[fish] = state;\n        window.localStorage.critterpedia = JSON.stringify(data);\n        setFishDataImpl(data.fish);\n    }\n    const now = new Date();\n    const title = index !== null ? t('critterpedia:title.info', { name: t(`critterpedia:${type}.name.${(type === 'bug' ? bugs : fish)[index].normal_name}`).capitalise() }) : t('critterpedia:title.default');\n    return <>\n        <Helmet>\n            <title>{title}</title>\n        </Helmet>\n        <div style={{ maxWidth: 1316, margin: 'auto' }}>\n            <Card style={{ margin: 16 }}>\n                <CardHeader title={t('critterpedia:search.title')} />\n                <CardContent>\n                    <Grid container spacing={1}>\n                        <Grid item xs={12} sm={6} md={4} >\n                            <TextField fullWidth value={name} onChange={(event) => setName(event.target.value)} label={t('critterpedia:search.name')} />\n                        </Grid>\n                        <Grid item xs={12} sm={6} md={4} >\n                            <TextField fullWidth value={location} onChange={(event) => setLocation(event.target.value)} label={t('critterpedia:search.location')} />\n                        </Grid>\n                        <Grid item xs={12} sm={6} md={4} >\n                            <TextField fullWidth value={size} onChange={(event) => setSize(event.target.value)} label={t('critterpedia:search.shadow')} />\n                        </Grid>\n                        <Grid item xs={6} sm={3} md={2} >\n                            <FormControl fullWidth>\n                                <InputLabel id=\"comp-label\">{t('critterpedia:search.price.label')}</InputLabel>\n                                <Select\n                                    value={priceComparison}\n                                    onChange={(event) => setPriceComparison(\n                                        event.target.value as ('>=' | '=' | '<=')\n                                    )}\n                                    labelId='comp-label'\n                                    fullWidth\n                                >\n                                    <MenuItem value=\">=\">{t('critterpedia:search.price.comp_values.ge')}</MenuItem>\n                                    <MenuItem value=\"=\">{t('critterpedia:search.price.comp_values.eq')}</MenuItem>\n                                    <MenuItem value=\"<=\">{t('critterpedia:search.price.comp_values.le')}</MenuItem>\n                                </Select>\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={6} sm={3} md={2} >\n                            <TextField fullWidth value={price} onChange={(event) => setPrice(+event.target.value)} label={t('critterpedia:search.price.value')} />\n                        </Grid>\n                        <Grid item xs={12} sm={6} md={4} >\n                            <FormControl fullWidth>\n                                <InputLabel id=\"active-label\">{t('critterpedia:search.active.title')}</InputLabel>\n                                <Select\n                                    value={activeRequired}\n                                    onChange={(event) => setActiveRequired(\n                                        event.target.value as ('now' | 'month' | 'until_next' | 'any')\n                                    )}\n                                    labelId='active-label'\n                                    fullWidth\n                                >\n                                    <MenuItem value=\"any\">{t('critterpedia:search.active.any')}</MenuItem>\n                                    <MenuItem value=\"month\">{t('critterpedia:search.active.month')}</MenuItem>\n                                    <MenuItem value=\"now\">{t('critterpedia:search.active.now')}</MenuItem>\n                                    <MenuItem value=\"until_next\">{t('critterpedia:search.active.until_next')}</MenuItem>\n                                </Select>\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={12} sm={6} md={4} >\n                            <FormControl fullWidth>\n                                <InputLabel id=\"state-label\">{t('critterpedia:search.state.title')}</InputLabel>\n                                <Select\n                                    value={stateRequired}\n                                    onChange={(event) => setStateRequired(\n                                        event.target.value as ('any' | 'unobtained' | 'unmodelled')\n                                    )}\n                                    labelId='state-label'\n                                    fullWidth\n                                >\n                                    <MenuItem value=\"any\">{t('critterpedia:search.state.any')}</MenuItem>\n                                    <MenuItem value=\"unobtained\">{t('critterpedia:search.state.unobtained')}</MenuItem>\n                                    <MenuItem value=\"unmodelled\">{t('critterpedia:search.state.unmodelled')}</MenuItem>\n                                </Select>\n                            </FormControl>\n                        </Grid>\n                    </Grid>\n                </CardContent>\n            </Card>\n            <Card style={{ margin: 16 }}>\n                <CardHeader title={\n                    <Trans i18nKey=\"critterpedia:cards.bugs\" t={t}>\n                        Bugs <span style={{ color: theme.palette.primary.main }}>\n                            ({\n                                {\n                                    obtained: bugsData.reduce(\n                                        (total, bug) => total + (+bug.obtained), 0),\n                                }\n                            } / 80)\n                    </span> <span style={{ color: theme.palette.modelled.main }}>\n                            ({\n                                {\n                                    modelled: bugsData.reduce(\n                                        (total, bug) => total + (+bug.modelled), 0),\n                                }\n                            } / 80)\n                    </span>\n                    </Trans>\n                } />\n                <CardContent style={{ overflowX: 'auto' }}>\n                    <table style={{ paddingRight: 16 }}>\n                        <tbody>\n                            {\n                                range(5).map(\n                                    (y) =>\n                                        <tr>\n                                            {\n                                                range(16).map(\n                                                    (x) => {\n                                                        const myIndex = x * 5 + y;\n                                                        const critterData = bugsData[myIndex];\n                                                        return <td key={x}>\n                                                            <CritterPanel\n                                                                data={bugs[myIndex]}\n                                                                obtained={critterData.obtained}\n                                                                modelled={critterData.modelled}\n                                                                type=\"bug\"\n                                                                setObtained={(value: boolean) => setBugsData(myIndex, { obtained: value, modelled: false })}\n                                                                setModelled={(value: boolean) => setBugsData(myIndex, { obtained: true, modelled: value })}\n                                                                month={now.getMonth()}\n                                                                hour={now.getHours()}\n                                                                open={type === 'bug' && index === myIndex}\n                                                                setOpenDialogue={(value) => setOpenDialogue('bug', value)}\n                                                                searchParameters={searchParameters}\n                                                            />\n                                                        </td>;\n                                                    }\n                                                )\n                                            }\n                                        </tr>\n                                )\n                            }\n                        </tbody>\n                    </table>\n                </CardContent>\n            </Card>\n            <Card style={{ margin: 16 }}>\n                <CardHeader title={\n                    <Trans i18nKey=\"critterpedia:cards.fish\" t={t}>\n                        Fish <span style={{ color: theme.palette.primary.main }}>\n                            ({\n                                {\n                                    obtained: fishData.reduce(\n                                        (total, fish) => total + (+fish.obtained), 0),\n                                }\n                            } / 80)\n                        </span> <span style={{ color: theme.palette.modelled.main }}>\n                            ({\n                                {\n                                    modelled: fishData.reduce(\n                                        (total, fish) => total + (+fish.modelled), 0),\n                                }\n                            } / 80)\n                        </span>\n                    </Trans>\n                } />\n                <CardContent style={{ overflowX: 'auto' }}>\n                    <table style={{ paddingRight: 16 }}>\n                        <tbody>\n                            {\n                                range(5).map(\n                                    (y) =>\n                                        <tr>\n                                            {\n                                                range(16).map(\n                                                    (x) => {\n                                                        const myIndex = x * 5 + y;\n                                                        const critterData = fishData[myIndex];\n                                                        return <td key={x}>\n                                                            <CritterPanel\n                                                                data={fish[myIndex]}\n                                                                obtained={critterData.obtained}\n                                                                modelled={critterData.modelled}\n                                                                type=\"fish\"\n                                                                setObtained={(value: boolean) => setFishData(myIndex, { obtained: value, modelled: false })}\n                                                                setModelled={(value: boolean) => setFishData(myIndex, { obtained: true, modelled: value })}\n                                                                month={now.getMonth()}\n                                                                hour={now.getHours()}\n                                                                open={type === 'fish' && index == myIndex}\n                                                                setOpenDialogue={(value) => setOpenDialogue('fish', value)}\n                                                                searchParameters={searchParameters}\n                                                            />\n                                                        </td>;\n                                                    }\n                                                )\n                                            }\n                                        </tr>\n                                )\n                            }\n                        </tbody>\n                    </table>\n                </CardContent>\n            </Card>\n        </div>\n    </>\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://cra.link/PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://cra.link/PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' },\n    })\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then((registration) => {\n                registration.unregister();\n            })\n            .catch((error) => {\n                console.error(error.message);\n            });\n    }\n}","import { ComponentsProps } from \"@material-ui/core/styles/props\";\n\nconst commonProps: ComponentsProps = {\n    MuiTextField: {\n        variant: 'filled',\n    },\n    MuiSelect: {\n        variant: 'filled',\n    },\n    MuiFormControl: {\n        variant: 'filled',\n    },\n    MuiDialogTitle: {\n        style: { textAlign: 'center' },\n    }\n};\nexport { commonProps };\n","import { createMuiTheme } from '@material-ui/core/styles';\nimport { commonProps } from './common_theme_data';\nimport './prototype_mods';\n\n\n// Dark theme\nconst theme = createMuiTheme({\n    palette: {\n        type: 'dark',\n        opacity: 0.3,\n        elevations: {\n            0: { main: '#1e1e1e' },\n            1: { main: '#292929' },\n            2: { main: '#2e2e2e' },\n            3: { main: '#303030' },\n            4: { main: '#323232' },\n            6: { main: '#373737' },\n            8: { main: '#393939' },\n            12: { main: '#3e3e3e' },\n            16: { main: '#404040' },\n            24: { main: '#424242' },\n        },\n        modelled: {\n            main: 'gold',\n            transparent: 'rgba(255, 215, 0, 0.3)',\n        },\n        winter: {\n            main: '#3c84c6',\n            transparent: 'rgba(60, 132, 198, 0.3)',\n            contrastText: 'rgba(0,0,0,87%)'\n        },\n        spring: {\n            main: '#38761c',\n            transparent: 'rgba(56, 118, 28, 0.3)',\n            contrastText: 'rgba(0,0,0,87%)'\n        },\n        summer: {\n            main: '#e69038',\n            transparent: 'rgba(230, 144, 56, 0.3)',\n            contrastText: 'rgba(0,0,0,87%)'\n        },\n        autumn: {\n            main: '#b45f04',\n            transparent: 'rgba(180, 95, 4, 0.3)',\n            contrastText: 'rgba(0,0,0,87%)'\n        },\n        primary: {\n            main: '#bb86fc',\n            dark: '#3700b3',\n            contrastText: 'rgba(0,0,0,87%)',\n            transparent: 'rgba(187, 134, 252, 0.3)',\n        },\n        secondary: {\n            main: '#03dac6',\n            dark: '#03dac6',\n            contrastText: 'rgba(0,0,0,87%)',\n        },\n        error: {\n            main: '#cf6679',\n            transparent: 'rgba(207, 102, 121, 0.3)',\n        },\n        background: {\n            paper: '#1e1e1e',\n            default: '#121212'\n        },\n        text: {\n            primary: 'rgba(255,255,255,87%)',\n            secondary: 'rgba(255,255,255,60%)',\n            hint: 'rgba(255,255,255,60%)',\n            disabled: 'rgba(255,255,255,38%)',\n        }\n    },\n    zIndex: {\n        appBar: 1250\n    },\n    props: commonProps,\n});\n\ntheme.overrides = {\n    MuiAppBar: {\n        colorPrimary: {\n            backgroundColor: theme.palette.background.paper,\n            color: theme.palette.primary.main,\n        },\n        colorSecondary: {\n            backgroundColor: theme.palette.background.paper,\n            color: theme.palette.secondary.main,\n        },\n        colorDefault: {\n            backgroundColor: theme.palette.background.paper,\n            color: theme.palette.text.primary,\n        }\n    },\n    MuiDrawer: {\n        paper: {\n            width: 240\n        }\n    },\n    MuiCard: {\n        root: {\n            borderWidth: 1,\n            borderColor: 'rgba(255, 255, 255, 8%)',\n            borderStyle: 'solid',\n        },\n    },\n    MuiCardHeader: {\n        root: {\n            paddingBottom: 0,\n            textAlign: 'center',\n        },\n    },\n    MuiListItemIcon: {\n        root: {\n            color: theme.palette.text.secondary,\n        }\n    }\n};\n\nexport default theme;","import { createMuiTheme } from '@material-ui/core/styles';\nimport { commonProps } from './common_theme_data';\nimport './prototype_mods';\n\n// Normal or default theme\nconst theme = createMuiTheme({\n    palette: {\n        type: 'light',\n        opacity: 0.6,\n        elevations: {\n            0: { main: '#ffffff' },\n            1: { main: '#ffffff' },\n            2: { main: '#ffffff' },\n            3: { main: '#ffffff' },\n            4: { main: '#ffffff' },\n            6: { main: '#ffffff' },\n            8: { main: '#ffffff' },\n            12: { main: '#ffffff' },\n            16: { main: '#ffffff' },\n            24: { main: '#ffffff' },\n        },\n        modelled: {\n            main: '#fbc02d',\n            transparent: 'rgba(251, 192, 45, 0.5)',\n        },\n        winter: {\n            main: '#3c84c6',\n            transparent: 'rgba(60, 132, 198, 0.6)',\n            contrastText: 'rgba(0,0,0,87%)',\n        },\n        spring: {\n            main: '#38761c',\n            transparent: 'rgba(56, 118, 28, 0.6)',\n            contrastText: 'rgba(0,0,0,87%)',\n        },\n        summer: {\n            main: '#e69038',\n            transparent: 'rgba(230, 144, 56, 0.6)',\n            contrastText: 'rgba(0,0,0,87%)',\n        },\n        autumn: {\n            main: '#b45f04',\n            transparent: 'rgba(180, 95, 4, 0.6)',\n            contrastText: 'rgba(0,0,0,87%)',\n        },\n        primary: {\n            main: '#6200ee',\n            dark: '#3700b3',\n            contrastText: 'rgba(255,255,255,87%)',\n            transparent: 'rgba(98, 0, 238, 0.5)',\n        },\n        secondary: {\n            main: '#03dac6',\n            dark: '#018786',\n            contrastText: 'rgba(0,0,0,87%)',\n        },\n        error: {\n            main: '#b00020',\n            transparent: 'rgba(176, 0, 32, 0.5)',\n        },\n        background: {\n            paper: '#ffffff',\n            default: '#eeeeee'\n        },\n        text: {\n            primary: 'rgba(0,0,0,87%)',\n            secondary: 'rgba(0,0,0,60%)',\n            hint: 'rgba(0,0,0,60%)',\n            disabled: 'rgba(0,0,0,38%)',\n        }\n    },\n    zIndex: {\n        appBar: 1250\n    },\n    props: commonProps,\n});\n\ntheme.overrides = {\n    MuiDrawer: {\n        paper: {\n            width: 240\n        }\n    },\n    MuiCard: {\n        root: {\n            borderWidth: 1,\n            borderColor: 'transparent',\n            borderStyle: 'solid',\n        },\n    },\n    MuiCardHeader: {\n        root: {\n            paddingBottom: 0,\n            textAlign: 'center',\n        },\n    },\n};\n\nexport default theme;","import dark from './dark';\nimport light from './light';\n\nconst themes = {\n    light,\n    dark,\n}\n\nexport default function getTheme(theme: \"light\" | \"dark\") {\n    return themes[theme];\n}","import { CssBaseline, List, ListItem, ListItemIcon, ListItemText, ThemeProvider, Typography, useMediaQuery, useTheme } from '@material-ui/core';\nimport { EmojiNature } from '@material-ui/icons';\nimport React, { Suspense } from 'react';\nimport ReactDOM from 'react-dom';\nimport { useTranslation } from 'react-i18next';\nimport { Route, Switch } from 'react-router';\nimport { BrowserRouter, NavLink, NavLinkProps, Redirect } from 'react-router-dom';\nimport { homepage } from '../package.json';\nimport AppBar from './components/AppBar';\nimport NavigationDrawer from './components/NavigationDrawer';\nimport UpdateReadyDialogue from './components/UpdateReadyDialogue';\nimport WorksOfflineDialogue from './components/WorksOfflineDialogue';\nimport { NDContextProvider } from './context';\nimport './i18n';\nimport './index.scss';\nimport { Dict } from './misc';\nimport Critterpedia from './pages/critterpedia';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport getTheme from './themes';\nimport UserSettings from './user_settings';\n\nconst baseUrl = process.env.NODE_ENV === 'production' ? homepage : 'http://localhost:3000/nookdata_v2';\nconst root = '/nookdata_v2';\n\ninterface PageData {\n    title: string;\n    icon: React.ReactNode;\n}\nconst pageData: Dict<PageData> = {\n    '/critterpedia': {\n        title: 'core:pages.critterpedia',\n        icon: <EmojiNature />,\n    },\n    // '/': {\n    //     title: 'Home',\n    //     icon: <EmojiNature />,\n    // },\n}\n\n\ninterface DrawerAdjustProps {\n    active: boolean,\n    children: React.ReactNode;\n}\nfunction DrawerAdjust(props: DrawerAdjustProps) {\n    const theme = useTheme();\n    const matches = useMediaQuery(theme.breakpoints.up('sm'));\n    return (\n        <div style={{ paddingLeft: 240 * (+props.active) * (+matches), transition: 'padding-left 195ms cubic-bezier(0.4, 0, 0.6, 1) 0ms' }}>\n            {props.children}\n        </div>\n    )\n}\n\ninterface ListItemLinkProps {\n    icon?: React.ReactNode;\n    primary: string;\n    to: string;\n    exact?: boolean;\n}\nfunction ListItemLink(props: ListItemLinkProps) {\n    const { icon, primary, to, exact } = props;\n    const renderLink = React.useMemo(\n        () =>\n            React.forwardRef<any, Omit<NavLinkProps, 'to'>>((itemProps, ref) => (\n                <NavLink to={to} ref={ref} {...itemProps} activeClassName=\"Mui-selected\" exact={exact} />\n            )),\n        [to],\n    );\n    return <ListItem button component={renderLink}>\n        {icon ? <ListItemIcon>{icon}</ListItemIcon> : null}\n        <ListItemText primary={primary} />\n    </ListItem>;\n}\n\ninterface AppFrameProps {\n    setTheme: (value: \"dark\" | \"light\") => void;\n    theme: \"dark\" | \"light\";\n    children: React.ReactNode;\n}\nfunction AppFrame(props: AppFrameProps) {\n    const theme = useTheme();\n    const startOpen = useMediaQuery(theme.breakpoints.up('lg'));\n    const [initialRender, setInitialRender] = React.useState(true);\n    const [drawerOpen, setDrawerOpen] = React.useState(false);\n    if (startOpen && initialRender) {\n        setDrawerOpen(true);\n        setInitialRender(false);\n    }\n    const { t } = useTranslation('core');\n    return (\n        <>\n            <AppBar setTheme={props.setTheme} setDrawerOpen={setDrawerOpen} theme={props.theme} drawerOpen={drawerOpen} title={\n                <Typography variant=\"h6\">\n                    <div\n                        style={{\n                            color: theme.palette.winter.main,\n                            display: 'inline'\n                        }}>{t('title.a')}</div>\n                    <div\n                        style={{\n                            color: theme.palette.summer.main,\n                            display: 'inline'\n                        }}>{t('title.b')}</div>\n                </Typography>\n            } />\n            <NavigationDrawer open={drawerOpen} setOpen={setDrawerOpen}>\n                <List>\n                    {Object.entries(pageData).map(([route, data]) => (\n                        <ListItemLink to={route} icon={data.icon} primary={t(data.title)} />\n                    ))}\n                </List>\n            </NavigationDrawer>\n            <DrawerAdjust active={drawerOpen}>\n                {props.children}\n            </DrawerAdjust>\n        </>\n    )\n}\n\n// interface RouteProps {\n//     page: string;\n//     route: string;\n//     children: React.ReactNode;\n// }\n// function Route(props: RouteProps) {\n//     const { t } = useTranslation('core');\n//     if (props.page.split('?')[0] !== props.route) {\n//         return null;\n//     }\n//     document.title = t('core:title.browser.page', { pageTitle: t(pageData[props.route].title) });\n//     return <>\n//         {props.children}\n//     </>;\n// }\n\nlet timeUpdateId: number | undefined = undefined;\nconst sentinelDate = new Date();\n\nfunction Loading() {\n    // return <img\n    //     src=\"assets/shared/loading.gif\"\n    //     style={{ width: '20%', height: '20%', margin: '15% 40%', borderRadius: '50%' }}\n    // />;\n    return <div className=\"loader\"></div>\n}\n\nfunction valueOr(data: String | undefined, defaultValue: number) {\n    let rv = data ? +data : defaultValue;\n    if (!isNaN(rv)) {\n        return rv;\n    } else {\n        return defaultValue;\n    }\n}\nfunction booleanOr(data: String | undefined, defaultValue: boolean) {\n    switch (data) {\n        case 'true':\n            return true;\n        case 'false':\n            return false;\n        default:\n            return defaultValue;\n    }\n}\n\nfunction App() {\n    const { t } = useTranslation('core');\n    const themeSetting: \"dark\" | \"light\" = window.localStorage.theme || 'dark';\n    const [chosenTheme, setChosenThemeImpl] = React.useState<'dark' | 'light'>(themeSetting);\n    function setChosenTheme(value: 'dark' | 'light') {\n        document.body.classList.add(\"no-transition\");\n        setTimeout(() => setChosenThemeImpl(value), 10);\n        setTimeout(() => document.body.classList.remove(\"no-transition\"), 20);\n    }\n    const nameSetting: string = window.localStorage.playerName || 'PLAYER';\n    const [chosenName, setChosenNameImpl] = React.useState(nameSetting);\n    function setChosenName(value: string) {\n        window.localStorage.playerName = value;\n        setChosenNameImpl(value);\n    }\n    const islandNameSetting: string = window.localStorage.islandName || 'ISLAND';\n    const [chosenIslandName, setChosenIslandNameImpl] = React.useState(islandNameSetting);\n    function setChosenIslandName(value: string) {\n        window.localStorage.islandName = value;\n        setChosenIslandNameImpl(value);\n    }\n    const hemisphereSetting: \"north\" | \"south\" = window.localStorage.hemisphere || 'north';\n    const [chosenHemisphere, setChosenHemisphereImpl] = React.useState<'north' | 'south'>(hemisphereSetting);\n    function setChosenHemisphere(value: 'north' | 'south') {\n        window.localStorage.hemisphere = value;\n        setChosenHemisphereImpl(value);\n    }\n    const offsetSetting: number = valueOr(window.localStorage.timeOffset, 0);\n    const [chosenOffset, setChosenOffsetImpl] = React.useState(offsetSetting);\n    function setChosenOffset(value: number) {\n        window.localStorage.timeOffset = value;\n        setChosenOffsetImpl(value);\n    }\n    const systemTimeSetting: boolean = booleanOr(window.localStorage.useSystemTime, true);\n    const [chosenSystemTime, setChosenSystemTimeImpl] = React.useState(systemTimeSetting);\n    function setChosenSystemTime(value: boolean) {\n        window.localStorage.useSystemTime = value;\n        setChosenSystemTimeImpl(value);\n    }\n    const twelveHourTimeSetting: boolean = booleanOr(window.localStorage.useTwelveHourTime, false);\n    const [chosenTwelveHourTime, setChosenTwelveHourTimeImpl] = React.useState(twelveHourTimeSetting);\n    function setChosenTwelveHourTime(value: boolean) {\n        window.localStorage.useTwelveHourTime = value;\n        setChosenTwelveHourTimeImpl(value);\n    }\n    const settings: UserSettings = {\n        theme: chosenTheme,\n        hemisphere: chosenHemisphere,\n        islandName: chosenIslandName,\n        playerName: chosenName,\n        timeOffset: chosenOffset,\n        useSystemTime: chosenSystemTime,\n        useTwelveHourTime: chosenTwelveHourTime,\n    }\n    const [time, setTime] = React.useState(sentinelDate);\n    if (timeUpdateId) {\n        window.clearInterval(timeUpdateId);\n    }\n    timeUpdateId = window.setInterval(() => setTime(new Date()), 500);\n    const theme = React.useMemo(\n        () => getTheme(chosenTheme),\n        [chosenTheme]\n    );\n    const [updateReady, setUpdateReady] = React.useState(false);\n    const [worksOffline, setWorksOffline] = React.useState(false);\n    serviceWorkerRegistration.register({ onUpdate: _ => setUpdateReady(true), onSuccess: _ => setWorksOffline(true) });\n    return <ThemeProvider theme={theme}>\n        <NDContextProvider time={time} settings={settings}>\n            <CssBaseline />\n            <AppFrame theme={chosenTheme} setTheme={setChosenTheme}>\n                <Suspense fallback={<Loading />}>\n                    <Switch>\n                        {/* <Route exact path=\"/\">\n                            Hello world!\n                        </Route> */}\n                        <Route path=\"/critterpedia/:type/:index\" render={({ match }) => {\n                            let type = match.params.type;\n                            let index = valueOr(match.params.index, -1);\n                            if (!(type === 'bug' || type === 'fish') || index < 0 || index > 79) {\n                                return <Redirect to=\"/critterpedia\" />\n                            }\n                            return <Critterpedia load={{ type, index }} />\n                        }}>\n                        </Route>\n                        <Route path=\"/critterpedia\" exact>\n                            <Critterpedia />\n                        </Route>\n                        <Route path=\"/critterpedia\">\n                            <Redirect to=\"/critterpedia\" />\n                        </Route>\n                    </Switch>\n                    {/* <Route page={page} route=\"/\">\n                    <Loading />\n                </Route> */}\n                </Suspense>\n            </AppFrame>\n            <WorksOfflineDialogue open={worksOffline} setOpen={setWorksOffline} />\n            <UpdateReadyDialogue open={updateReady} setOpen={setUpdateReady} />\n        </NDContextProvider>\n    </ThemeProvider>\n}\n\nReactDOM.render(\n    <Suspense fallback={<Loading />}>\n        <BrowserRouter basename={root}>\n            <App />\n        </BrowserRouter>\n    </Suspense>,\n    document.getElementById('root')\n);\nexport { };\n"],"sourceRoot":""}