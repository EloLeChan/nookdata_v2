{"version":3,"sources":["../node_modules/@material-ui/core/esm/CardActionArea/CardActionArea.js","../node_modules/@material-ui/icons/esm/Help.js","pages/critterpedia/data.ts","../node_modules/@material-ui/core/esm/styles/makeStyles.js","../node_modules/@material-ui/core/esm/Divider/Divider.js","../node_modules/@material-ui/icons/esm/ChevronLeft.js","../node_modules/@material-ui/icons/esm/ChevronRight.js","../node_modules/@material-ui/icons/esm/WbSunny.js","../node_modules/@material-ui/icons/esm/Cloud.js","pages/critterpedia/components/MonthPanels.tsx","pages/critterpedia/components/TimeTracker.tsx","pages/critterpedia/components/CritterDialogue.tsx","pages/critterpedia/components/CritterPanel.tsx","pages/critterpedia/page.tsx"],"names":["CardActionArea","React","props","ref","children","classes","className","focusVisibleClassName","other","_objectWithoutProperties","ButtonBase","_extends","clsx","root","focusVisible","focusHighlight","withStyles","theme","display","textAlign","width","opacity","palette","action","hoverOpacity","overflow","pointerEvents","position","top","right","bottom","left","borderRadius","backgroundColor","transition","transitions","create","duration","short","name","createSvgIcon","d","getCritterName","critter","type","t","normal_name","getCritterQuote","playername","getCritterLocation","location","makeStyles","stylesOrCreator","options","arguments","length","undefined","makeStylesWithoutDefault","defaultTheme","Divider","_props$absolute","absolute","_props$component","component","Component","_props$flexItem","flexItem","_props$light","light","_props$orientation","orientation","_props$role","role","_props$variant","variant","vertical","height","margin","border","flexShrink","divider","inset","marginLeft","fade","middle","spacing","marginRight","alignSelf","months","winter","settings","hemisphere","summer","spring","autumn","seasons","MonthPanel","useTheme","useTranslation","useNDContext","tooSmall","useMediaQuery","breakpoints","down","Grid","item","xs","Card","style","month","main","color","contrastText","borderColor","active","error","CardContent","paddingBottom","MonthPanels","container","range","map","i","key","activeMonth","TimeTracker","now","time","progress","getMilliseconds","getSeconds","getMinutes","getHours","marginBottom","Math","max","getTextWidth","useTwelveHourTime","pad","h12","h24","m","text","primary","hours","modelled","useStyles","transparent","CritterDialogue","shadow","numberFormatter","numberFormatters","data","rotated","index","toString","padStart","capitalise","Dialog","open","onClose","setOpenDialogue","scroll","PaperProps","obtained","borderWidth","borderStyle","Helmet","pageTitle","pageData","DialogTitle","Toolbar","IconButton","edge","onClick","direction","ChevronLeft","ChevronRight","disabled","flexGrow","DialogContent","marginTop","dangerouslySetInnerHTML","__html","playerName","reduce","a","b","getMonth","sm","src","dry","Tooltip","title","WbSunny","rain","Cloud","value","price","TextField","stored","onChange","event","setStored","target","label","FormControlLabel","control","Checkbox","checked","setObtained","setModelled","DialogActions","Button","CritterPanel","activeNow","leavingSoon","searchParameters","activeRequired","priceComparison","size","stateRequired","match","includes","toLowerCase","filter","elem","join","Warning","Help","Critterpedia","JSON","parse","window","localStorage","critterpedia","useState","setActiveRequired","setLocation","setName","setPrice","setPriceComparison","setSize","setStateRequired","load","bugs","bugsData","setBugsDataImpl","fish","fishData","setFishDataImpl","history","useHistory","push","setBugsData","bug","state","stringify","setFishData","maxWidth","CardHeader","md","fullWidth","FormControl","InputLabel","id","Select","labelId","MenuItem","Trans","i18nKey","total","overflowX","paddingRight","y","x","myIndex","critterData"],"mappings":"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","file":"static/js/5.2248c650.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'block',\n      textAlign: 'inherit',\n      width: '100%',\n      '&:hover $focusHighlight': {\n        opacity: theme.palette.action.hoverOpacity\n      },\n      '&$focusVisible $focusHighlight': {\n        opacity: 0.12\n      }\n    },\n\n    /* Pseudo-class applied to the ButtonBase root element if the action area is keyboard focused. */\n    focusVisible: {},\n\n    /* Styles applied to the overlay that covers the action area when it is keyboard focused. */\n    focusHighlight: {\n      overflow: 'hidden',\n      pointerEvents: 'none',\n      position: 'absolute',\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0,\n      borderRadius: 'inherit',\n      opacity: 0,\n      backgroundColor: 'currentcolor',\n      transition: theme.transitions.create('opacity', {\n        duration: theme.transitions.duration.short\n      })\n    }\n  };\n};\nvar CardActionArea = /*#__PURE__*/React.forwardRef(function CardActionArea(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      focusVisibleClassName = props.focusVisibleClassName,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"focusVisibleClassName\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, className),\n    focusVisibleClassName: clsx(focusVisibleClassName, classes.focusVisible),\n    ref: ref\n  }, other), children, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.focusHighlight\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActionArea.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActionArea'\n})(CardActionArea);","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 17h-2v-2h2v2zm2.07-7.75l-.9.92C13.45 12.9 13 13.5 13 15h-2v-.5c0-1.1.45-2.1 1.17-2.83l1.24-1.26c.37-.36.59-.86.59-1.41 0-1.1-.9-2-2-2s-2 .9-2 2H8c0-2.21 1.79-4 4-4s4 1.79 4 4c0 .88-.36 1.68-.93 2.25z\"\n}), 'Help');","import {bugs, fish} from './data.json';\n\ntype Critter = typeof bugs[0] | typeof fish[0];\nexport type {Critter};\nexport {\n    getCritterName,\n    getCritterQuote,\n    getCritterLocation\n};\n\n\nfunction getCritterName(critter: Critter, type: 'bug' | 'fish', t: (key: string, props?: Object) => string) {\n    return t(`critterpedia:${type}.name.${critter.normal_name}`);\n}\n\nfunction getCritterQuote(critter: Critter, type: 'bug' | 'fish', playername: string, t: (key: string, props?: Object) => string) {\n    return t(`critterpedia:${type}.quote.${critter.normal_name}`, {playername});\n}\n\nfunction getCritterLocation(critter: Critter, type: 'bug' | 'fish', t: (key: string, props?: Object) => string) {\n    return t(`critterpedia:${type}.location.${critter.location}`);\n}\n\n\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { makeStyles as makeStylesWithoutDefault } from '@material-ui/styles';\nimport defaultTheme from './defaultTheme';\n\nfunction makeStyles(stylesOrCreator) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return makeStylesWithoutDefault(stylesOrCreator, _extends({\n    defaultTheme: defaultTheme\n  }, options));\n}\n\nexport default makeStyles;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      height: 1,\n      margin: 0,\n      // Reset browser default style.\n      border: 'none',\n      flexShrink: 0,\n      backgroundColor: theme.palette.divider\n    },\n\n    /* Styles applied to the root element if `absolute={true}`. */\n    absolute: {\n      position: 'absolute',\n      bottom: 0,\n      left: 0,\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `variant=\"inset\"`. */\n    inset: {\n      marginLeft: 72\n    },\n\n    /* Styles applied to the root element if `light={true}`. */\n    light: {\n      backgroundColor: fade(theme.palette.divider, 0.08)\n    },\n\n    /* Styles applied to the root element if `variant=\"middle\"`. */\n    middle: {\n      marginLeft: theme.spacing(2),\n      marginRight: theme.spacing(2)\n    },\n\n    /* Styles applied to the root element if `orientation=\"vertical\"`. */\n    vertical: {\n      height: '100%',\n      width: 1\n    },\n\n    /* Styles applied to the root element if `flexItem={true}`. */\n    flexItem: {\n      alignSelf: 'stretch',\n      height: 'auto'\n    }\n  };\n};\nvar Divider = /*#__PURE__*/React.forwardRef(function Divider(props, ref) {\n  var _props$absolute = props.absolute,\n      absolute = _props$absolute === void 0 ? false : _props$absolute,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'hr' : _props$component,\n      _props$flexItem = props.flexItem,\n      flexItem = _props$flexItem === void 0 ? false : _props$flexItem,\n      _props$light = props.light,\n      light = _props$light === void 0 ? false : _props$light,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      _props$role = props.role,\n      role = _props$role === void 0 ? Component !== 'hr' ? 'separator' : undefined : _props$role,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'fullWidth' : _props$variant,\n      other = _objectWithoutProperties(props, [\"absolute\", \"classes\", \"className\", \"component\", \"flexItem\", \"light\", \"orientation\", \"role\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'fullWidth' && classes[variant], absolute && classes.absolute, flexItem && classes.flexItem, light && classes.light, orientation === 'vertical' && classes.vertical),\n    role: role,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Divider.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Absolutely position the element.\n   */\n  absolute: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, a vertical divider will have the correct height when used in flex container.\n   * (By default, a vertical divider will have a calculated height of `0px` if it is the child of a flex container.)\n   */\n  flexItem: PropTypes.bool,\n\n  /**\n   * If `true`, the divider will have a lighter color.\n   */\n  light: PropTypes.bool,\n\n  /**\n   * The divider orientation.\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * @ignore\n   */\n  role: PropTypes.string,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['fullWidth', 'inset', 'middle'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDivider'\n})(Divider);","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"\n}), 'ChevronLeft');","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"\n}), 'ChevronRight');","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6.76 4.84l-1.8-1.79-1.41 1.41 1.79 1.79 1.42-1.41zM4 10.5H1v2h3v-2zm9-9.95h-2V3.5h2V.55zm7.45 3.91l-1.41-1.41-1.79 1.79 1.41 1.41 1.79-1.79zm-3.21 13.7l1.79 1.8 1.41-1.41-1.8-1.79-1.4 1.4zM20 10.5v2h3v-2h-3zm-8-5c-3.31 0-6 2.69-6 6s2.69 6 6 6 6-2.69 6-6-2.69-6-6-6zm-1 16.95h2V19.5h-2v2.95zm-7.45-3.91l1.41 1.41 1.79-1.8-1.41-1.41-1.79 1.8z\"\n}), 'WbSunny');","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96z\"\n}), 'Cloud');","import {Card, CardContent, Grid, Theme, useMediaQuery, useTheme} from \"@material-ui/core\";\nimport {useTranslation} from \"react-i18next\";\nimport {useNDContext} from \"../../../context\";\nimport {range} from \"../../../misc\";\nimport '../../../prototype_mods';\nimport UserSettings from '../../../user_settings';\nimport './MonthPanels.scss';\nconst months = [\n    \"core:time.month.jan\",\n    \"core:time.month.feb\",\n    \"core:time.month.mar\",\n    \"core:time.month.apr\",\n    \"core:time.month.may\",\n    \"core:time.month.jun\",\n    \"core:time.month.jul\",\n    \"core:time.month.aug\",\n    \"core:time.month.sep\",\n    \"core:time.month.oct\",\n    \"core:time.month.nov\",\n    \"core:time.month.dec\",\n];\nfunction winter(theme: Theme, settings: UserSettings) {\n    return (\n        settings.hemisphere === \"north\"\n            ? theme.palette.winter\n            : theme.palette.summer\n    );\n}\nfunction spring(theme: Theme, settings: UserSettings) {\n    return (\n        settings.hemisphere === \"north\"\n            ? theme.palette.spring\n            : theme.palette.autumn\n    );\n}\nfunction summer(theme: Theme, settings: UserSettings) {\n    return (\n        settings.hemisphere === \"north\"\n            ? theme.palette.summer\n            : theme.palette.winter\n    );\n}\nfunction autumn(theme: Theme, settings: UserSettings) {\n    return (\n        settings.hemisphere === \"north\"\n            ? theme.palette.autumn\n            : theme.palette.spring\n    );\n}\nconst seasons = [\n    winter,\n    winter,\n    spring,\n    spring,\n    spring,\n    summer,\n    summer,\n    summer,\n    autumn,\n    autumn,\n    autumn,\n    winter,\n];\n\ninterface MonthPanelProps {\n    months: boolean[];\n    month: number;\n    active: boolean;\n}\nfunction MonthPanel(props: MonthPanelProps) {\n    const theme = useTheme();\n    const {t} = useTranslation('critterpedia');\n    const {settings} = useNDContext();\n    const tooSmall = useMediaQuery(theme.breakpoints.down('xs'));\n    return <Grid item xs={4}>\n        <Card\n            variant=\"outlined\"\n            style={{\n                backgroundColor: seasons[props.month](theme, settings).main,\n                opacity: props.months[props.month] ? undefined : theme.palette.opacity,\n                color: seasons[props.month](theme, settings).contrastText,\n                borderColor: props.active ? theme.palette.error.main : 'transparent',\n            }}\n            className=\"month-panel\"\n        >\n            <CardContent style={{paddingBottom: 16}}>\n                {t(months[props.month] + (tooSmall ? '.short' : '.long'))}\n            </CardContent>\n        </Card>\n    </Grid>;\n}\ninterface MonthPanelsProps {\n    months: boolean[];\n    activeMonth: number;\n}\nexport default function MonthPanels(props: MonthPanelsProps) {\n    return <Grid container>\n        {range(12).map(i =>\n            <MonthPanel\n                key={i}\n                months={props.months}\n                month={i}\n                active={props.activeMonth == i}\n            />\n        )}\n    </Grid>;\n}","import {useTheme} from '@material-ui/core';\nimport {useTranslation} from 'react-i18next';\nimport {useNDContext} from '../../../context';\nimport {getTextWidth} from '../../../misc';\nimport './TimeTracker.scss';\n\ninterface TimeTrackerProps {\n    hours: boolean[];\n}\n\nexport default function TimeTracker(props: TimeTrackerProps) {\n    const theme = useTheme();\n    const {t} = useTranslation('core');\n    const {time: now, settings} = useNDContext();\n    let progress = (\n        (\n            (\n                now.getMilliseconds() / 1000\n                + now.getSeconds()\n            ) / 60\n            + now.getMinutes()\n        ) / 60\n        + now.getHours()\n    ) * 100 / 24;\n    return <div\n        className=\"time-tracker\"\n        style={{\n            marginBottom: Math.max(\n                getTextWidth(\n                    t(\n                        settings.useTwelveHourTime\n                            ? 'core:time.twelve_hour.am_short'\n                            : 'core:time.twenty_four_hour',\n                        {\n                            pad: '0',\n                            h12: 12,\n                            h24: 0,\n                            m: '00',\n                        }\n                    )\n                ),\n                getTextWidth(\n                    t(\n                        settings.useTwelveHourTime\n                            ? 'core:time.twelve_hour.pm_short'\n                            : 'core:time.twenty_four_hour',\n                        {\n                            pad: '0',\n                            h12: 12,\n                            h24: 0,\n                            m: '00',\n                        }\n                    )\n                ),\n            ) - 8,\n        }}\n    >\n        <div\n            className=\"now\"\n            style={{\n                backgroundColor: theme.palette.error.main,\n                '--progress': `${progress}%`,\n            }}\n        />\n        <div>\n            <div className=\"large-division\" style={{backgroundColor: theme.palette.text.primary}} />\n            <div className=\"division-label\">\n                {\n                    t(\n                        settings.useTwelveHourTime\n                            ? 'core:time.twelve_hour.am_short'\n                            : 'core:time.twenty_four_hour',\n                        {\n                            pad: '0',\n                            h12: 12,\n                            h24: 0,\n                            m: '00',\n                        }\n                    )\n                }\n            </div>\n        </div>\n        <div className=\"hour\" style={{backgroundColor: props.hours[0] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity}} />\n        <div className=\"small-division\" style={{backgroundColor: theme.palette.text.primary}} />\n        <div className=\"hour\" style={{backgroundColor: props.hours[1] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity}} />\n        <div className=\"small-division\" style={{backgroundColor: theme.palette.text.primary}} />\n        <div className=\"hour\" style={{backgroundColor: props.hours[2] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity}} />\n        <div className=\"small-division\" style={{backgroundColor: theme.palette.text.primary}} />\n        <div className=\"hour\" style={{backgroundColor: props.hours[3] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity}} />\n        <div className=\"small-division\" style={{backgroundColor: theme.palette.text.primary}} />\n        <div className=\"hour\" style={{backgroundColor: props.hours[4] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity}} />\n        <div className=\"small-division\" style={{backgroundColor: theme.palette.text.primary}} />\n        <div className=\"hour\" style={{backgroundColor: props.hours[5] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity}} />\n        <div>\n            <div className=\"medium-division\" style={{backgroundColor: theme.palette.text.primary}} />\n            <div className=\"division-label\">\n                {\n                    t(\n                        settings.useTwelveHourTime\n                            ? 'core:time.twelve_hour.am_short'\n                            : 'core:time.twenty_four_hour',\n                        {\n                            pad: '0',\n                            h12: 6,\n                            h24: 6,\n                            m: '00',\n                        }\n                    )\n                }\n            </div>\n        </div>\n        <div className=\"hour\" style={{backgroundColor: props.hours[6] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity}} />\n        <div className=\"small-division\" style={{backgroundColor: theme.palette.text.primary}} />\n        <div className=\"hour\" style={{backgroundColor: props.hours[7] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity}} />\n        <div className=\"small-division\" style={{backgroundColor: theme.palette.text.primary}} />\n        <div className=\"hour\" style={{backgroundColor: props.hours[8] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity}} />\n        <div className=\"small-division\" style={{backgroundColor: theme.palette.text.primary}} />\n        <div className=\"hour\" style={{backgroundColor: props.hours[9] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity}} />\n        <div className=\"small-division\" style={{backgroundColor: theme.palette.text.primary}} />\n        <div className=\"hour\" style={{backgroundColor: props.hours[10] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity}} />\n        <div className=\"small-division\" style={{backgroundColor: theme.palette.text.primary}} />\n        <div className=\"hour\" style={{backgroundColor: props.hours[11] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity}} />\n        <div>\n            <div className=\"large-division\" style={{backgroundColor: theme.palette.text.primary}} />\n            <div className=\"division-label\">\n                {\n                    t(\n                        settings.useTwelveHourTime\n                            ? 'core:time.twelve_hour.pm_short'\n                            : 'core:time.twenty_four_hour',\n                        {\n                            pad: '',\n                            h12: 12,\n                            h24: 12,\n                            m: '00',\n                        }\n                    )\n                }\n            </div>\n        </div>\n        <div className=\"hour\" style={{backgroundColor: props.hours[12] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity}} />\n        <div className=\"small-division\" style={{backgroundColor: theme.palette.text.primary}} />\n        <div className=\"hour\" style={{backgroundColor: props.hours[13] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity}} />\n        <div className=\"small-division\" style={{backgroundColor: theme.palette.text.primary}} />\n        <div className=\"hour\" style={{backgroundColor: props.hours[14] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity}} />\n        <div className=\"small-division\" style={{backgroundColor: theme.palette.text.primary}} />\n        <div className=\"hour\" style={{backgroundColor: props.hours[15] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity}} />\n        <div className=\"small-division\" style={{backgroundColor: theme.palette.text.primary}} />\n        <div className=\"hour\" style={{backgroundColor: props.hours[16] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity}} />\n        <div className=\"small-division\" style={{backgroundColor: theme.palette.text.primary}} />\n        <div className=\"hour\" style={{backgroundColor: props.hours[17] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity}} />\n        <div>\n            <div className=\"medium-division\" style={{backgroundColor: theme.palette.text.primary}} />\n            <div className=\"division-label\">\n                {\n                    t(\n                        settings.useTwelveHourTime\n                            ? 'core:time.twelve_hour.pm_short'\n                            : 'core:time.twenty_four_hour',\n                        {\n                            pad: '',\n                            h12: 6,\n                            h24: 18,\n                            m: '00',\n                        }\n                    )\n                }\n            </div>\n        </div>\n        <div className=\"hour\" style={{backgroundColor: props.hours[18] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity}} />\n        <div className=\"small-division\" style={{backgroundColor: theme.palette.text.primary}} />\n        <div className=\"hour\" style={{backgroundColor: props.hours[19] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity}} />\n        <div className=\"small-division\" style={{backgroundColor: theme.palette.text.primary}} />\n        <div className=\"hour\" style={{backgroundColor: props.hours[20] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity}} />\n        <div className=\"small-division\" style={{backgroundColor: theme.palette.text.primary}} />\n        <div className=\"hour\" style={{backgroundColor: props.hours[21] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity}} />\n        <div className=\"small-division\" style={{backgroundColor: theme.palette.text.primary}} />\n        <div className=\"hour\" style={{backgroundColor: props.hours[22] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity}} />\n        <div className=\"small-division\" style={{backgroundColor: theme.palette.text.primary}} />\n        <div className=\"hour\" style={{backgroundColor: props.hours[23] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity}} />\n        <div>\n            <div className=\"large-division\" style={{backgroundColor: theme.palette.text.primary}} />\n            <div className=\"division-label\">\n                {\n                    t(\n                        settings.useTwelveHourTime\n                            ? 'core:time.twelve_hour.am_short'\n                            : 'core:time.twenty_four_hour',\n                        {\n                            pad: '0',\n                            h12: 12,\n                            h24: 0,\n                            m: '00',\n                        }\n                    )\n                }\n            </div>\n        </div>\n    </div>;\n}","import {Button, Card, Checkbox, createStyles, Dialog, DialogActions, DialogContent, DialogTitle, Divider, FormControlLabel, Grid, IconButton, makeStyles, TextField, Toolbar, Tooltip, useTheme} from \"@material-ui/core\";\nimport {ChevronLeft, ChevronRight, Cloud, WbSunny} from \"@material-ui/icons\";\nimport {Helmet} from \"react-helmet\";\nimport {useTranslation} from \"react-i18next\";\nimport {Centred} from \"../../../components\";\nimport {useNDContext} from \"../../../context\";\nimport {numberFormatters} from \"../../../i18n\";\nimport {getCritterLocation, getCritterName, getCritterQuote} from \"../data\";\nimport {bugs, fish} from '../data.json';\nimport './CritterDialogue.scss';\nimport MonthPanels from \"./MonthPanels\";\nimport TimeTracker from \"./TimeTracker\";\n\nconst useStyles = makeStyles((theme) => createStyles({\n    modelled: {\n        color: theme.palette.modelled.main,\n        '&.Mui-disabled': {\n            color: theme.palette.modelled.transparent,\n        },\n    },\n}));\n\nconst shadows = [\n    \"one\",\n    \"two\",\n    \"three\",\n    \"four\",\n    \"five\",\n    \"six\",\n    \"six_fin\",\n    \"six_narrow\",\n];\n\ninterface CritterDialogueProps {\n    data: (typeof bugs[0]) | (typeof fish[0]);\n    type: 'bug' | 'fish';\n    obtained: boolean;\n    modelled: boolean;\n    stored: number;\n    setObtained: (value: boolean) => void;\n    setModelled: (value: boolean) => void;\n    setStored: (value: number) => void;\n    open: boolean;\n    setOpenDialogue: (value: number | null) => void;\n}\nexport default function CritterDialogue(props: CritterDialogueProps) {\n    const {t} = useTranslation('critterpedia');\n    const numberFormatter = numberFormatters[t('core:misc.code')];\n    const {time, settings} = useNDContext();\n    const hours = (\n        settings.hemisphere == 'north' ?\n            props.data.hours :\n            props.data.hours.rotated(6)\n    );\n    const theme = useTheme();\n    const {palette} = useTheme();\n    let shadow;\n    if (props.type == 'fish') {\n        shadow = t(`critterpedia:fish.size.${(props.data as typeof fish[0]).shadow}`);\n    }\n    const index = props.data.index.toString().padStart(2, '0');\n    const name = getCritterName(props.data, props.type, t).capitalise();\n    return <>\n        <Dialog\n            open={props.open}\n            onClose={() => props.setOpenDialogue(null)}\n            scroll=\"body\"\n            PaperProps={{\n                style: {\n                    borderColor: props.modelled\n                        ? palette.modelled.main\n                        : (\n                            props.obtained\n                                ? palette.primary.main\n                                : 'transparent'\n                        ),\n                    borderWidth: 1,\n                    borderStyle: 'solid',\n                    width: \"75%\",\n                    transition: 'color 0.5s ease-in-out, border-color 0.5s ease-in-out',\n                }\n            }}\n        >\n            <Helmet>\n                <title>{t('core:title.browser.page_data', {pageTitle: t('core:pages.critterpedia'), pageData: name})}</title>\n            </Helmet>\n            <DialogTitle style={{\n                paddingBottom: 0,\n            }}\n            >\n                <Toolbar>\n                    {\n                        props.data.index > 0\n                            ? <IconButton edge=\"start\" onClick={() => props.setOpenDialogue(props.data.index - 1)}>\n                                {theme.direction == 'ltr' ? <ChevronLeft /> : <ChevronRight />}\n                            </IconButton>\n                            : <IconButton disabled />\n                    }\n                    <div style={{\n                        textAlign: 'center',\n                        color: props.modelled\n                            ? palette.modelled.main\n                            : (\n                                props.obtained\n                                    ? palette.primary.main\n                                    : undefined\n                            ),\n                        flexGrow: 1,\n                        transition: 'color 0.5s ease-in-out',\n                    }}>\n                        {name}\n                    </div>\n                    {\n                        props.data.index < 79\n                            ? <IconButton edge=\"end\" onClick={() => props.setOpenDialogue(props.data.index + 1)}>\n                                {theme.direction == 'ltr' ? <ChevronRight /> : <ChevronLeft />}\n                            </IconButton>\n                            : <IconButton disabled />\n                    }\n                </Toolbar>\n            </DialogTitle>\n            <DialogContent\n                style={{\n                    textAlign: 'center'\n                }}\n            >\n                {t(`critterpedia:dialogue.type.${props.type}`, {index: numberFormatter(props.data.index + 1)})}\n                <br />\n                <Divider style={{marginTop: 8, marginBottom: 8}} />\n                <div\n                    style={{paddingBottom: 8}}\n                    dangerouslySetInnerHTML={{\n                        __html: getCritterQuote(\n                            props.data,\n                            props.type,\n                            settings.playerName,\n                            t\n                        )\n                    }}\n                />\n                <MonthPanels\n                    months={hours.map(\n                        (month) => month.reduce((a, b) => a || b)\n                    )}\n                    activeMonth={time.getMonth()}\n                />\n                <TimeTracker\n                    hours={hours[time.getMonth()]}\n                />\n                <Card variant=\"outlined\" style={{marginBottom: 8}}>\n                    <Grid container>\n                        <Grid item xs={12} sm={6}>\n                            <img src={\n                                `assets/${props.type}/${index}.png`\n                            } />\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <div className=\"info\">\n                                {props.data.dry &&\n                                    <Tooltip\n                                        title={t('critterpedia:dialogue.details.dry') as string}\n                                    >\n                                        <div\n                                            className=\"dry\"\n                                        >\n                                            <WbSunny\n                                                style={{\n                                                    color: theme.palette.summer.main\n                                                }}\n                                            />\n                                        </div>\n                                    </Tooltip>\n                                }\n                                <div className=\"lfound\">{t('critterpedia:dialogue.details.found')}</div>\n                                <div className=\"lsell\">{t('critterpedia:dialogue.details.price')}</div>\n                                {shadow && <div className=\"lshadow\">{t('critterpedia:dialogue.details.shadow')}</div>}\n                                {props.data.rain &&\n                                    <Tooltip\n                                        title={t('critterpedia:dialogue.details.rain') as string}\n                                    >\n                                        <div\n                                            className=\"rain\"\n                                        >\n                                            <Cloud\n                                                style={{\n                                                    color: theme.palette.winter.main\n                                                }}\n                                            />\n                                        </div>\n                                    </Tooltip>\n                                }\n                                <div className=\"found\">{getCritterLocation(props.data, props.type, t)}</div>\n                                <div className=\"sell\">{t('core:money.value', {value: numberFormatter(props.data.price)})}</div>\n                                {shadow && <div className=\"shadow\">{shadow}</div>}\n                            </div>\n                        </Grid>\n                    </Grid>\n                </Card>\n                <Grid container>\n                    <Grid item xs={12} sm={4}>\n                        <TextField\n                            value={props.stored.toString()}\n                            onChange={(event) => props.setStored(+event.target.value)}\n                            type=\"number\"\n                            label={t('critterpedia:dialogue.stored')}\n                        />\n                    </Grid>\n                    <Grid item xs={12} sm={4}>\n                        <Centred>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        checked={props.obtained}\n                                        onChange={(event) => props.setObtained(event.target.checked)}\n                                        color=\"primary\"\n                                    />\n                                }\n                                label={t('critterpedia:dialogue.obtained')}\n                            />\n                        </Centred>\n                    </Grid>\n                    <Grid item xs={12} sm={4}>\n                        <Centred>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        className={useStyles(theme).modelled}\n                                        checked={props.modelled}\n                                        disabled={!props.obtained}\n                                        onChange={(event) => props.setModelled(event.target.checked)}\n                                        color=\"default\"\n                                    />\n                                }\n                                label={t('critterpedia:dialogue.modelled')}\n                            />\n                        </Centred>\n                    </Grid>\n                </Grid>\n            </DialogContent>\n            <DialogActions>\n                <Button\n                    variant=\"text\"\n                    onClick={() => props.setOpenDialogue(null)}\n                >{t('core:ui.dismiss')}</Button>\n            </DialogActions>\n        </Dialog>\n    </>;\n}","import {Card, CardActionArea, Tooltip, useTheme} from \"@material-ui/core\";\nimport {Help, Warning} from \"@material-ui/icons\";\nimport {useTranslation} from \"react-i18next\";\nimport {useNDContext} from \"../../../context\";\nimport '../../../prototype_mods';\nimport {getCritterLocation, getCritterName} from '../data';\nimport {bugs, fish} from '../data.json';\nimport SearchParameters from \"../search_parameters\";\nimport CritterDialogue from \"./CritterDialogue\";\nimport './CritterPanel.scss';\n\ninterface CritterPanelProps {\n    data: (typeof bugs[0]) | (typeof fish[0]);\n    type: 'bug' | 'fish';\n    obtained: boolean;\n    modelled: boolean;\n    stored: number;\n    setObtained: (value: boolean) => void;\n    setModelled: (value: boolean) => void;\n    setStored: (value: number) => void;\n    searchParameters: SearchParameters;\n    open: boolean;\n    setOpenDialogue: (value: number | null) => void;\n}\nfunction CritterPanel(props: CritterPanelProps) {\n    const {t} = useTranslation('critterpedia');\n    const {time, settings} = useNDContext();\n    const hours = (\n        settings.hemisphere == 'north' ?\n            props.data.hours :\n            props.data.hours.rotated(6)\n    );\n    const theme = useTheme();\n    const activeNow = hours[time.getMonth()][time.getHours()];\n    const activeMonth = hours[time.getMonth()].reduce((a, b) => a || b);\n    const leavingSoon = activeMonth && !hours[(time.getMonth() + 1) % 12].reduce((a, b) => a || b);\n    const {palette} = useTheme();\n    const {\n        activeRequired,\n        location,\n        name,\n        price,\n        priceComparison,\n        size,\n        stateRequired,\n    } = props.searchParameters;\n    let shadow = '';\n    if (props.type == 'fish') {\n        shadow = t(`critterpedia:fish.size.${(props.data as typeof fish[0]).shadow}`);\n    }\n    let match = true;\n    if (activeRequired === 'now' && !activeNow) {\n        match = false;\n    } else if (activeRequired === 'month' && !activeMonth) {\n        match = false;\n    } else if (activeRequired === 'until_next' && !leavingSoon) {\n        match = false;\n    } else if (!getCritterLocation(props.data, props.type, t).includes(location.toLowerCase())) {\n        match = false;\n    } else if (!getCritterName(props.data, props.type, t).includes(name.toLowerCase())) {\n        match = false;\n    } else if (props.type == 'fish' && !shadow.includes(size.toLowerCase())) {\n        match = false;\n    } else if (stateRequired === 'unobtained' && props.obtained) {\n        match = false;\n    } else if (stateRequired === 'unmodelled' && props.modelled) {\n        match = false;\n    } else {\n        switch (priceComparison) {\n            case '>=':\n                if (props.data.price < price) {\n                    match = false;\n                }\n                break;\n            case '=':\n                if (props.data.price != price) {\n                    match = false;\n                }\n                break;\n            case '<=':\n                if (props.data.price > price) {\n                    match = false;\n                }\n                break;\n        }\n    }\n\n    const title = [\n        t(`critterpedia:panel.type.${props.type}`, {name: getCritterName(props.data, props.type, t).capitalise(), index: props.data.index + 1}),\n        (activeMonth ? (leavingSoon ? t('critterpedia:panel.status.leaving_soon') : '') : t('critterpedia:panel.status.unavailable')),\n        (activeNow ? t('critterpedia:panel.status.now') : ''),\n        (props.modelled ? t('critterpedia:panel.status.modelled') : ''),\n        t('critterpedia:panel.status.details'),\n    ].filter((elem) => !!elem).join('\\n');\n\n    return <>\n        <Tooltip title={title}>\n            <Card\n                className=\"critter-panel\"\n                style={\n                    {\n                        backgroundColor: props.modelled\n                            ? palette.modelled.transparent\n                            : (\n                                props.obtained\n                                    ? palette.primary.transparent\n                                    : (\n                                        activeMonth\n                                            ? undefined\n                                            : palette.error.transparent\n                                    )\n                            ),\n                        borderColor: props.modelled\n                            ? palette.modelled.main\n                            : (\n                                activeMonth\n                                    ? (\n                                        props.obtained\n                                            ? palette.primary.main\n                                            : undefined\n                                    )\n                                    : palette.error.main\n                            ),\n                        opacity: match ? 1 : theme.palette.opacity,\n                    }\n                }\n            >\n                <CardActionArea onClick={() => props.setOpenDialogue(props.data.index)}>\n                    {\n                        leavingSoon\n                            ? <Warning style={{\n                                color: props.modelled\n                                    ? palette.modelled.main\n                                    : palette.error.main,\n                            }} />\n                            : <Help style={{\n                                color: props.modelled\n                                    ? palette.modelled.main\n                                    : (\n                                        activeMonth\n                                            ? (\n                                                props.obtained\n                                                    ? palette.primary.main\n                                                    : undefined\n                                            )\n                                            : palette.error.main\n                                    ),\n                            }} />\n                    }\n                    <img src={\n                        `assets/${props.type}/${props.data.index.toString().padStart(2, '0')\n                        }.png`\n                    } />\n                </CardActionArea>\n            </Card>\n        </Tooltip>\n        <CritterDialogue {...props} />\n    </>;\n}\nexport default CritterPanel;","import {Card, CardContent, CardHeader, FormControl, Grid, InputLabel, MenuItem, Select, TextField, useTheme} from '@material-ui/core';\nimport React from 'react';\nimport {Helmet} from 'react-helmet';\nimport {Trans, useTranslation} from 'react-i18next';\nimport {useHistory} from 'react-router';\nimport {UserCritterData, UserCritterpediaData} from '../../data';\nimport {numberFormatters} from '../../i18n';\nimport {range} from '../../misc';\nimport CritterPanel from './components/CritterPanel';\nimport {bugs, fish} from './data.json';\nimport SearchParameters from './search_parameters';\n\ninterface CritterpediaProps {\n    load?: {type: 'bug' | 'fish', index: number;};\n}\n\nexport default function Critterpedia(props: CritterpediaProps) {\n    const {t} = useTranslation(['core', 'critterpedia']);\n    const numberFormatter = numberFormatters[t('core:misc.code')];\n    const theme = useTheme();\n    const data: UserCritterpediaData = JSON.parse(window.localStorage.critterpedia);\n    const [activeRequired, setActiveRequired] = React.useState<'now' | 'month' | 'until_next' | 'any'>('any');\n    const [location, setLocation] = React.useState('');\n    const [name, setName] = React.useState('');\n    const [price, setPrice] = React.useState(0);\n    const [priceComparison, setPriceComparison] = React.useState<'>=' | '=' | '<='>('>=');\n    const [size, setSize] = React.useState('');\n    const [stateRequired, setStateRequired] = React.useState<'unobtained' | 'unmodelled' | 'any'>('any');\n    const searchParameters: SearchParameters = {\n        activeRequired,\n        location,\n        name,\n        price,\n        priceComparison,\n        size,\n        stateRequired,\n    };\n    const {type, index} = props.load ?? {type: 'bug', index: null};\n    const [bugsData, setBugsDataImpl] = React.useState(data.bugs);\n    const [fishData, setFishDataImpl] = React.useState(data.fish);\n\n    const history = useHistory();\n\n    function setOpenDialogue(type: 'bug' | 'fish', index: number | null) {\n        if (index === null) {\n            history.push('/critterpedia');\n        } else {\n            history.push(`/critterpedia/${type}/${index}`);\n        }\n    }\n\n    function setBugsData(bug: number, state: UserCritterData) {\n        data.bugs[bug] = state;\n        window.localStorage.critterpedia = JSON.stringify(data);\n        setBugsDataImpl(data.bugs);\n    }\n    function setFishData(fish: number, state: UserCritterData) {\n        data.fish[fish] = state;\n        window.localStorage.critterpedia = JSON.stringify(data);\n        setFishDataImpl(data.fish);\n    }\n    return <>\n        <Helmet>\n            <title>{t('core:title.browser.page', {pageTitle: t('core:pages.critterpedia')})}</title>\n        </Helmet>\n        <div style={{maxWidth: 1316, margin: 'auto'}}>\n            <Card style={{margin: 16}}>\n                <CardHeader title={t('critterpedia:search.title')} />\n                <CardContent>\n                    <Grid container spacing={1}>\n                        <Grid item xs={12} sm={6} md={4} >\n                            <TextField fullWidth value={name} onChange={(event) => setName(event.target.value)} label={t('critterpedia:search.name')} />\n                        </Grid>\n                        <Grid item xs={12} sm={6} md={4} >\n                            <TextField fullWidth value={location} onChange={(event) => setLocation(event.target.value)} label={t('critterpedia:search.location')} />\n                        </Grid>\n                        <Grid item xs={12} sm={6} md={4} >\n                            <TextField fullWidth value={size} onChange={(event) => setSize(event.target.value)} label={t('critterpedia:search.shadow')} />\n                        </Grid>\n                        <Grid item xs={6} sm={3} md={2} >\n                            <FormControl fullWidth>\n                                <InputLabel id=\"comp-label\">{t('critterpedia:search.price.label')}</InputLabel>\n                                <Select\n                                    value={priceComparison}\n                                    onChange={(event) => setPriceComparison(\n                                        event.target.value as ('>=' | '=' | '<=')\n                                    )}\n                                    labelId='comp-label'\n                                    fullWidth\n                                >\n                                    <MenuItem value=\">=\">{t('critterpedia:search.price.comp_values.ge')}</MenuItem>\n                                    <MenuItem value=\"=\">{t('critterpedia:search.price.comp_values.eq')}</MenuItem>\n                                    <MenuItem value=\"<=\">{t('critterpedia:search.price.comp_values.le')}</MenuItem>\n                                </Select>\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={6} sm={3} md={2} >\n                            <TextField fullWidth value={price} onChange={(event) => setPrice(+event.target.value)} label={t('critterpedia:search.price.value')} />\n                        </Grid>\n                        <Grid item xs={12} sm={6} md={4} >\n                            <FormControl fullWidth>\n                                <InputLabel id=\"active-label\">{t('critterpedia:search.active.title')}</InputLabel>\n                                <Select\n                                    value={activeRequired}\n                                    onChange={(event) => setActiveRequired(\n                                        event.target.value as ('now' | 'month' | 'until_next' | 'any')\n                                    )}\n                                    labelId='active-label'\n                                    fullWidth\n                                >\n                                    <MenuItem value=\"any\">{t('critterpedia:search.active.any')}</MenuItem>\n                                    <MenuItem value=\"month\">{t('critterpedia:search.active.month')}</MenuItem>\n                                    <MenuItem value=\"now\">{t('critterpedia:search.active.now')}</MenuItem>\n                                    <MenuItem value=\"until_next\">{t('critterpedia:search.active.until_next')}</MenuItem>\n                                </Select>\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={12} sm={6} md={4} >\n                            <FormControl fullWidth>\n                                <InputLabel id=\"state-label\">{t('critterpedia:search.state.title')}</InputLabel>\n                                <Select\n                                    value={stateRequired}\n                                    onChange={(event) => setStateRequired(\n                                        event.target.value as ('any' | 'unobtained' | 'unmodelled')\n                                    )}\n                                    labelId='state-label'\n                                    fullWidth\n                                >\n                                    <MenuItem value=\"any\">{t('critterpedia:search.state.any')}</MenuItem>\n                                    <MenuItem value=\"unobtained\">{t('critterpedia:search.state.unobtained')}</MenuItem>\n                                    <MenuItem value=\"unmodelled\">{t('critterpedia:search.state.unmodelled')}</MenuItem>\n                                </Select>\n                            </FormControl>\n                        </Grid>\n                    </Grid>\n                </CardContent>\n            </Card>\n            <Card style={{margin: 16}}>\n                <CardHeader title={\n                    <Trans i18nKey=\"critterpedia:cards.bugs\" t={t}>\n                        Bugs <span style={{color: theme.palette.primary.main}}>\n                            ({\n                                {\n                                    obtained: numberFormatter(bugsData.reduce(\n                                        (total, bug) => total + (+bug.obtained), 0\n                                    )),\n                                }\n                            } / 80)\n                        </span> <span style={{color: theme.palette.modelled.main}}>\n                            ({\n                                {\n                                    modelled: numberFormatter(bugsData.reduce(\n                                        (total, bug) => total + (+bug.modelled), 0\n                                    )),\n                                }\n                            } / 80)\n                        </span>\n                    </Trans>\n                } />\n                <CardContent style={{overflowX: 'auto'}}>\n                    <table style={{paddingRight: 16}}>\n                        <tbody>\n                            {\n                                range(5).map(\n                                    (y) =>\n                                        <tr key={y}>\n                                            {\n                                                range(16).map(\n                                                    (x) => {\n                                                        const myIndex = x * 5 + y;\n                                                        const critterData = bugsData[myIndex];\n                                                        return <td key={x}>\n                                                            <CritterPanel\n                                                                data={bugs[myIndex]}\n                                                                obtained={critterData.obtained}\n                                                                modelled={critterData.modelled}\n                                                                stored={critterData.stored}\n                                                                type=\"bug\"\n                                                                setObtained={(value: boolean) => setBugsData(myIndex, {obtained: value, modelled: false, stored: +value})}\n                                                                setModelled={(value: boolean) => setBugsData(myIndex, {obtained: true, modelled: value, stored: Math.max(0, critterData.stored + (value ? -3 : 3))})}\n                                                                setStored={(value: number) => setBugsData(myIndex, {...critterData, stored: Math.max(0, value)})}\n                                                                open={type === 'bug' && index === myIndex}\n                                                                setOpenDialogue={(value) => setOpenDialogue('bug', value)}\n                                                                searchParameters={searchParameters}\n                                                            />\n                                                        </td>;\n                                                    }\n                                                )\n                                            }\n                                        </tr>\n                                )\n                            }\n                        </tbody>\n                    </table>\n                </CardContent>\n            </Card>\n            <Card style={{margin: 16}}>\n                <CardHeader title={\n                    <Trans i18nKey=\"critterpedia:cards.fish\" t={t}>\n                        Fish <span style={{color: theme.palette.primary.main}}>\n                            ({\n                                {\n                                    obtained: numberFormatter(fishData.reduce(\n                                        (total, fish) => total + (+fish.obtained), 0\n                                    )),\n                                }\n                            } / 80)\n                        </span> <span style={{color: theme.palette.modelled.main}}>\n                            ({\n                                {\n                                    modelled: numberFormatter(fishData.reduce(\n                                        (total, fish) => total + (+fish.modelled), 0\n                                    )),\n                                }\n                            } / 80)\n                        </span>\n                    </Trans>\n                } />\n                <CardContent style={{overflowX: 'auto'}}>\n                    <table style={{paddingRight: 16}}>\n                        <tbody>\n                            {\n                                range(5).map(\n                                    (y) =>\n                                        <tr key={y}>\n                                            {\n                                                range(16).map(\n                                                    (x) => {\n                                                        const myIndex = x * 5 + y;\n                                                        const critterData = fishData[myIndex];\n                                                        return <td key={x}>\n                                                            <CritterPanel\n                                                                data={fish[myIndex]}\n                                                                obtained={critterData.obtained}\n                                                                modelled={critterData.modelled}\n                                                                stored={critterData.stored}\n                                                                type=\"fish\"\n                                                                setObtained={(value: boolean) => setFishData(myIndex, {obtained: value, modelled: false, stored: +value})}\n                                                                setModelled={(value: boolean) => setFishData(myIndex, {obtained: true, modelled: value, stored: critterData.stored + (value ? -3 : 3)})}\n                                                                setStored={(value: number) => setFishData(myIndex, {...critterData, stored: Math.max(0, value)})}\n                                                                open={type === 'fish' && index == myIndex}\n                                                                setOpenDialogue={(value) => setOpenDialogue('fish', value)}\n                                                                searchParameters={searchParameters}\n                                                            />\n                                                        </td>;\n                                                    }\n                                                )\n                                            }\n                                        </tr>\n                                )\n                            }\n                        </tbody>\n                    </table>\n                </CardContent>\n            </Card>\n        </div>\n    </>;\n}"],"sourceRoot":""}