{"version":3,"sources":["components/AppBar.tsx","components/NavigationDrawer.tsx","prototype_mods.ts","pages/critterpedia/components/MonthPanels.tsx","pages/critterpedia/components/TimeTracker.tsx","pages/critterpedia/components/CritterPanel.tsx","pages/critterpedia/index.tsx","common_theme_data.ts","dark.tsx","light.tsx","themes.tsx","index.tsx"],"names":["AppBar","props","position","Toolbar","IconButton","edge","color","aria-label","style","marginRight","onClick","setDrawerOpen","drawerOpen","flexGrow","title","theme","window","localStorage","setTheme","NavigationDrawer","useTheme","container","undefined","document","body","Hidden","smUp","Drawer","variant","anchor","direction","open","onClose","setOpen","children","xsDown","String","prototype","capitalize","this","charAt","toUpperCase","slice","months","winter","settings","hemisphere","palette","summer","spring","autumn","seasons","MonthPanel","width","Card","backgroundColor","month","main","opacity","contrastText","borderColor","active","error","borderWidth","borderStyle","margin","CardContent","paddingBottom","MonthPanels","activeMonth","TimeTracker","now","time","progress","getMilliseconds","getSeconds","getMinutes","getHours","className","marginBottom","useTwelveHourTime","text","primary","hours","modelled","CritterPanel","data","activeNow","reduce","a","b","leavingSoon","searchParameters","activeRequired","leavingRequired","location","name","price","priceComparison","size","unmodelledRequired","unobtainedRequired","shadow","type","match","includes","toLowerCase","obtained","index","transparent","CardActionArea","setOpenDialogue","Warning","Help","src","toString","padStart","Dialog","openDialogue","scroll","PaperProps","transition","DialogTitle","ChevronLeft","ChevronRight","disabled","textAlign","DialogContent","Divider","marginTop","dangerouslySetInnerHTML","__html","quote","replace","playerName","map","getMonth","dry","WbSunny","rain","Cloud","DialogActions","FormControlLabel","control","Checkbox","checked","onChange","event","setObtained","target","label","setModelled","bugs","fish","range","stop","Array","from","keys","Critterpedia","critterpedia","i","push","JSON","stringify","parse","React","useState","setActiveRequired","setLeavingRequired","setLocation","setName","setPrice","setPriceComparison","setSize","setUnmodelledRequired","setUnobtainedRequired","bugsData","setBugsDataImpl","fishData","setFishDataImpl","openDialogueType","setOpenDialogueType","setBugsData","bug","state","setFishData","Date","maxWidth","CardHeader","Grid","spacing","item","xs","sm","md","TextField","fullWidth","value","FormControl","InputLabel","id","Select","labelId","MenuItem","total","overflowX","paddingRight","y","x","bugData","hour","commonProps","MuiTextField","MuiSelect","MuiFormControl","createMuiTheme","elevations","0","1","2","3","4","6","8","12","16","24","dark","secondary","background","paper","default","hint","zIndex","appBar","overrides","MuiAppBar","colorPrimary","colorSecondary","colorDefault","MuiDrawer","MuiCard","root","MuiCardHeader","MuiListItemIcon","themes","light","DrawerAdjust","matches","useMediaQuery","breakpoints","up","paddingLeft","AppFrame","Typography","display","List","ListItem","selected","page","button","setPage","ListItemIcon","EmojiNature","ListItemText","Route","route","timeUpdateId","sentinelDate","App","themeSetting","chosenTheme","setChosenTheme","hemisphereSetting","chosenHemisphere","islandName","timeOffset","useSystemTime","setTime","clearInterval","setInterval","useMemo","getTheme","ThemeProvider","CssBaseline","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.c3e0bc9d.chunk.js","sourcesContent":["import { AppBar as TopAppBar, IconButton, Toolbar } from '@material-ui/core';\nimport DarkModeIcon from '@material-ui/icons/Brightness4';\nimport LightModeIcon from '@material-ui/icons/Brightness7';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport React from 'react';\n\n\ninterface AppBarProps {\n    setTheme: (value: \"dark\" | \"light\") => void,\n    theme: 'dark' | 'light',\n    setDrawerOpen: (value: boolean) => void,\n    drawerOpen: boolean,\n    title: React.ReactNode,\n}\n\nfunction AppBar(props: AppBarProps) {\n    return (\n        <>\n            <TopAppBar position=\"fixed\">\n                <Toolbar>\n                    <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\"\n                        style={{ marginRight: 16 }}\n                        onClick={() => props.setDrawerOpen(!props.drawerOpen)}>\n                        <MenuIcon />\n                    </IconButton>\n                    <div style={{ flexGrow: 1 }}>\n                        {props.title}\n                    </div>\n                    {props.theme == 'light'\n                        ? <IconButton color=\"inherit\" onClick={\n                            () => {\n                                window.localStorage.theme = 'dark';\n                                props.setTheme('dark')\n                            }}><DarkModeIcon /></IconButton>\n                        : <IconButton color=\"inherit\" onClick={\n                            () => {\n                                window.localStorage.theme = 'light';\n                                props.setTheme('light')\n                            }}><LightModeIcon /></IconButton>}\n                </Toolbar>\n            </TopAppBar>\n            <Toolbar />\n        </>\n    )\n}\nexport default AppBar;\n","import { Drawer, Hidden, Toolbar, useTheme } from '@material-ui/core';\nimport React from 'react';\ninterface NavigationDrawerProps {\n    open: boolean;\n    setOpen: (value: boolean) => void;\n    children: React.ReactNode;\n}\n\n\nfunction NavigationDrawer(props: NavigationDrawerProps) {\n    const theme = useTheme();\n    const container = window !== undefined ? () => window.document.body : undefined;\n    return <>\n        <Hidden smUp>\n            <Drawer\n                variant=\"temporary\"\n                container={container}\n                anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n                open={props.open}\n                onClose={() => props.setOpen(false)}\n            >\n                {props.children}\n            </Drawer>\n        </Hidden>\n        <Hidden xsDown>\n            <Drawer\n                variant=\"persistent\"\n                anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n                open={props.open}\n            >\n                <Toolbar />\n                {props.children}\n            </Drawer>\n        </Hidden>\n    </>;\n}\nexport default NavigationDrawer;\n","declare global {\n    interface String {\n        capitalize: () => String;\n    }\n}\nString.prototype.capitalize = function () {\n    return this.charAt(0).toUpperCase() + this.slice(1);\n}\n\ndeclare module \"react\" {\n    interface CSSProperties {\n        '--progress'?: string | number;\n    }\n}\n\ndeclare module \"@material-ui/core/styles/createPalette\" {\n    interface ElevationColour {\n        0: { main: string };\n        1: { main: string };\n        2: { main: string };\n        3: { main: string };\n        4: { main: string };\n        6: { main: string };\n        8: { main: string };\n        12: { main: string };\n        16: { main: string };\n        24: { main: string };\n    }\n    interface PaletteColor {\n        transparent?: string;\n    }\n    interface SimplePaletteColorOptions {\n        transparent?: string;\n    }\n    interface Palette {\n        elevations: ElevationColour;\n        opacity: number;\n        modelled: Palette['primary'];\n        spring: Palette['primary'];\n        summer: Palette['primary'];\n        autumn: Palette['primary'];\n        winter: Palette['primary'];\n    }\n    interface PaletteOptions {\n        elevations: ElevationColour;\n        opacity: number;\n        modelled: PaletteOptions['primary'];\n        spring: PaletteOptions['primary'];\n        summer: PaletteOptions['primary'];\n        autumn: PaletteOptions['primary'];\n        winter: PaletteOptions['primary'];\n    }\n}\nexport { };\n","import { Card, CardContent, Theme, useTheme } from \"@material-ui/core\";\nimport React from \"react\";\nimport '../../../prototype_mods';\nimport UserSettings from '../../../user_settings';\nimport './CritterPanel.scss';\nconst months = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n];\nfunction winter(theme: Theme, settings: UserSettings) {\n    return (\n        settings.hemisphere === \"north\"\n            ? theme.palette.winter\n            : theme.palette.summer\n    );\n}\nfunction spring(theme: Theme, settings: UserSettings) {\n    return (\n        settings.hemisphere === \"north\"\n            ? theme.palette.spring\n            : theme.palette.autumn\n    );\n}\nfunction summer(theme: Theme, settings: UserSettings) {\n    return (\n        settings.hemisphere === \"north\"\n            ? theme.palette.summer\n            : theme.palette.winter\n    );\n}\nfunction autumn(theme: Theme, settings: UserSettings) {\n    return (\n        settings.hemisphere === \"north\"\n            ? theme.palette.autumn\n            : theme.palette.spring\n    );\n}\nconst seasons = [\n    winter,\n    winter,\n    spring,\n    spring,\n    spring,\n    summer,\n    summer,\n    summer,\n    autumn,\n    autumn,\n    autumn,\n    winter,\n];\n\ninterface MonthPanelProps {\n    months: boolean[];\n    month: number;\n    active: boolean;\n    settings: UserSettings;\n}\nfunction MonthPanel(props: MonthPanelProps) {\n    const theme = useTheme();\n    return <td width=\"33%\">\n        <Card\n            variant=\"outlined\"\n            style={{\n                // backgroundColor: ((colour) => (\n                //     props.months[props.month]\n                //         ? colour.main\n                //         : colour.transparent\n                // ))(\n                //     seasons[props.month](theme, props.settings)\n                // ),\n                backgroundColor: seasons[props.month](theme, props.settings).main,\n                opacity: props.months[props.month] ? undefined : theme.palette.opacity,\n                color: seasons[props.month](theme, props.settings).contrastText,\n                borderColor: props.active ? theme.palette.error.main : 'transparent',\n                borderWidth: 2,\n                borderStyle: 'solid',\n                margin: -1,\n            }}\n        >\n            <CardContent style={{ paddingBottom: 16 }}>\n                {months[props.month]}\n            </CardContent>\n        </Card>\n    </td>\n}\ninterface MonthPanelsProps {\n    months: boolean[];\n    activeMonth: number;\n    settings: UserSettings;\n}\nexport default function MonthPanels(props: MonthPanelsProps) {\n    return <table style={{ width: '100%' }}>\n        <tbody>\n            <tr>\n                <MonthPanel\n                    months={props.months}\n                    month={0}\n                    active={props.activeMonth == 0}\n                    settings={props.settings}\n                />\n                <MonthPanel\n                    months={props.months}\n                    month={1}\n                    active={props.activeMonth == 1}\n                    settings={props.settings}\n                />\n                <MonthPanel\n                    months={props.months}\n                    month={2}\n                    active={props.activeMonth == 2}\n                    settings={props.settings}\n                />\n            </tr>\n            <tr>\n                <MonthPanel\n                    months={props.months}\n                    month={3}\n                    active={props.activeMonth == 3}\n                    settings={props.settings}\n                />\n                <MonthPanel\n                    months={props.months}\n                    month={4}\n                    active={props.activeMonth == 4}\n                    settings={props.settings}\n                />\n                <MonthPanel\n                    months={props.months}\n                    month={5}\n                    active={props.activeMonth == 5}\n                    settings={props.settings}\n                />\n            </tr>\n            <tr>\n                <MonthPanel\n                    months={props.months}\n                    month={6}\n                    active={props.activeMonth == 6}\n                    settings={props.settings}\n                />\n                <MonthPanel\n                    months={props.months}\n                    month={7}\n                    active={props.activeMonth == 7}\n                    settings={props.settings}\n                />\n                <MonthPanel\n                    months={props.months}\n                    month={8}\n                    active={props.activeMonth == 8}\n                    settings={props.settings}\n                />\n            </tr>\n            <tr>\n                <MonthPanel\n                    months={props.months}\n                    month={9}\n                    active={props.activeMonth == 9}\n                    settings={props.settings}\n                />\n                <MonthPanel\n                    months={props.months}\n                    month={10}\n                    active={props.activeMonth == 10}\n                    settings={props.settings}\n                />\n                <MonthPanel\n                    months={props.months}\n                    month={11}\n                    active={props.activeMonth == 11}\n                    settings={props.settings}\n                />\n            </tr>\n        </tbody>\n    </table >;\n}","import { useTheme } from '@material-ui/core';\nimport React from 'react';\nimport UserSettings from '../../../user_settings';\nimport './TimeTracker.scss';\n\ninterface TimeTrackerProps {\n    hours: boolean[];\n    time: Date;\n    settings: UserSettings;\n}\n\nexport default function TimeTracker(props: TimeTrackerProps) {\n    const theme = useTheme();\n    let now = props.time;\n    let progress = (\n        (\n            (\n                now.getMilliseconds() / 1000\n                + now.getSeconds()\n            ) / 60\n            + now.getMinutes()\n        ) / 60\n        + now.getHours()\n    ) * 100 / 24;\n    return <div\n        className=\"time-tracker\"\n        style={{\n            marginBottom: props.settings.useTwelveHourTime ? 64 : 40,\n        }}\n    >\n        <div\n            className=\"now\"\n            style={{\n                backgroundColor: theme.palette.error.main,\n                '--progress': `${progress}%`,\n            }}\n        />\n        <div>\n            <div className=\"large-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n            <div className=\"division-label\">\n                {\n                    props.settings.useTwelveHourTime\n                        ? '12:00AM'\n                        : '00:00'\n                }\n            </div>\n        </div>\n        <div className=\"hour\" style={{ backgroundColor: props.hours[0] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[1] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[2] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[3] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[4] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[5] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div>\n            <div className=\"medium-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n            <div className=\"division-label\">\n                {\n                    props.settings.useTwelveHourTime\n                        ? '6:00AM'\n                        : '06:00'\n                }\n            </div>\n        </div>\n        <div className=\"hour\" style={{ backgroundColor: props.hours[6] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[7] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[8] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[9] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[10] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[11] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div>\n            <div className=\"large-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n            <div className=\"division-label\">\n                {\n                    props.settings.useTwelveHourTime\n                        ? '12:00PM'\n                        : '12:00'\n                }\n            </div>\n        </div>\n        <div className=\"hour\" style={{ backgroundColor: props.hours[12] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[13] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[14] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[15] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[16] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[17] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div>\n            <div className=\"medium-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n            <div className=\"division-label\">\n                {\n                    props.settings.useTwelveHourTime\n                        ? '6:00PM'\n                        : '18:00'\n                }\n            </div>\n        </div>\n        <div className=\"hour\" style={{ backgroundColor: props.hours[18] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[19] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[20] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[21] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[22] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[23] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div>\n            <div className=\"large-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n            <div className=\"division-label\">\n                {\n                    props.settings.useTwelveHourTime\n                        ? '12:00AM'\n                        : '00:00'\n                }\n            </div>\n        </div>\n    </div>\n}","import { Card, CardActionArea, CardContent, Checkbox, Dialog, DialogActions, DialogContent, DialogTitle, Divider, FormControlLabel, IconButton, Toolbar, useTheme } from \"@material-ui/core\";\nimport { ChevronLeft, ChevronRight, Cloud, Help, Warning, WbSunny } from \"@material-ui/icons\";\nimport React from \"react\";\nimport '../../../prototype_mods';\nimport UserSettings from '../../../user_settings';\nimport { bugs, fish } from '../data.json';\nimport SearchParameters from \"../search_parameters\";\nimport './CritterPanel.scss';\nimport MonthPanels from \"./MonthPanels\";\nimport TimeTracker from \"./TimeTracker\";\n\n\n\ninterface CritterPanelProps {\n    data: (typeof bugs[0]) | (typeof fish[0]);\n    type: 'bug' | 'fish';\n    obtained: boolean;\n    modelled: boolean;\n    setObtained: (value: boolean) => void;\n    setModelled: (value: boolean) => void;\n    month: number;\n    hour: number;\n    searchParameters: SearchParameters;\n    openDialogue: number | null;\n    setOpenDialogue: (value: number | null) => void;\n    now: Date;\n    settings: UserSettings;\n}\nfunction CritterPanel(props: CritterPanelProps) {\n    const hours = (\n        props.settings.hemisphere == 'north' ?\n            props.data.hours :\n            [...props.data.hours.slice(6), ...props.data.hours.slice(0, 6)]\n    );\n    const theme = useTheme();\n    const activeNow = hours[props.month].reduce((a, b) => a || b);\n    const leavingSoon = activeNow && !hours[(props.month + 1) % 12].reduce((a, b) => a || b);\n    const { palette } = useTheme();\n    const {\n        activeRequired,\n        leavingRequired,\n        location,\n        name,\n        price,\n        priceComparison,\n        size,\n        unmodelledRequired,\n        unobtainedRequired,\n    } = props.searchParameters;\n    let shadow = '';\n    if (props.type == 'fish') {\n        shadow = (props.data as typeof fish[0]).shadow;\n    }\n    let match = true;\n    if (activeRequired && !activeNow) {\n        match = false;\n    } else if (leavingRequired && !leavingSoon) {\n        match = false;\n    } else if (!props.data.location.includes(location.toLowerCase())) {\n        match = false;\n    } else if (!props.data.name.includes(name.toLowerCase())) {\n        match = false;\n    } else if (props.type == 'fish' && !shadow.includes(size.toLowerCase())) {\n        match = false;\n    } else if (unobtainedRequired && props.obtained) {\n        match = false;\n    } else if (unmodelledRequired && props.modelled) {\n        match = false;\n    } else {\n        switch (priceComparison) {\n            case '>=':\n                if (props.data.price < price) {\n                    match = false;\n                }\n                break;\n            case '=':\n                if (props.data.price != price) {\n                    match = false;\n                }\n                break;\n            case '<=':\n                if (props.data.price > price) {\n                    match = false;\n                }\n                break;\n        }\n    }\n\n    return <>\n        <Card className=\"critter-panel\" title={\n            `${props.data.name.capitalize()} (${props.type.capitalize()\n            } #${props.data.index + 1})`\n        }\n            style={\n                {\n                    backgroundColor: props.modelled\n                        ? palette.modelled.transparent\n                        : (\n                            props.obtained\n                                ? palette.primary.transparent\n                                : (\n                                    activeNow\n                                        ? undefined\n                                        : palette.error.transparent\n                                )\n                        ),\n                    borderColor: props.modelled\n                        ? palette.modelled.main\n                        : (\n                            activeNow\n                                ? (\n                                    props.obtained\n                                        ? palette.primary.main\n                                        : undefined\n                                )\n                                : palette.error.main\n                        ),\n                    opacity: match ? 1 : theme.palette.opacity,\n                }\n            }\n        >\n            <CardActionArea onClick={() => props.setOpenDialogue(props.data.index)}>\n                {\n                    leavingSoon\n                        ? <Warning style={{\n                            color: props.modelled\n                                ? palette.modelled.main\n                                : palette.error.main,\n                        }} />\n                        : <Help style={{\n                            color: props.modelled\n                                ? palette.modelled.main\n                                : (\n                                    activeNow\n                                        ? (\n                                            props.obtained\n                                                ? palette.primary.main\n                                                : undefined\n                                        )\n                                        : palette.error.main\n                                ),\n                        }} />\n                }\n                <img src={\n                    `assets/${props.type}/${props.data.index.toString().padStart(2, '0')\n                    }.png`\n                } />\n            </CardActionArea>\n        </Card>\n        <Dialog\n            open={props.openDialogue == props.data.index}\n            onClose={() => props.setOpenDialogue(null)}\n            scroll=\"body\"\n            PaperProps={{\n                style: {\n                    borderColor: props.modelled\n                        ? palette.modelled.main\n                        : (\n                            props.obtained\n                                ? palette.primary.main\n                                : 'transparent'\n                        ),\n                    borderWidth: 1,\n                    borderStyle: 'solid',\n                    width: \"75%\",\n                    transition: 'color 0.5s ease-in-out, border-color 0.5s ease-in-out',\n                }\n            }}\n        >\n            <DialogTitle style={{\n                paddingBottom: 0,\n            }}\n            >\n                <Toolbar>\n                    {\n                        props.data.index > 0\n                            ? <IconButton edge=\"start\" onClick={() => props.setOpenDialogue(props.data.index - 1)}>\n                                {theme.direction == 'ltr' ? <ChevronLeft /> : <ChevronRight />}\n                            </IconButton>\n                            : <IconButton disabled />\n                    }\n                    <div style={{\n                        textAlign: 'center',\n                        color: props.modelled\n                            ? palette.modelled.main\n                            : (\n                                props.obtained\n                                    ? palette.primary.main\n                                    : undefined\n                            ),\n                        flexGrow: 1,\n                        transition: 'color 0.5s ease-in-out',\n                    }}>\n                        {props.data.name.capitalize()}\n                    </div>\n                    {\n                        props.data.index < 79\n                            ? <IconButton edge=\"end\" onClick={() => props.setOpenDialogue(props.data.index + 1)}>\n                                {theme.direction == 'ltr' ? <ChevronRight /> : <ChevronLeft />}\n                            </IconButton>\n                            : <IconButton disabled />\n                    }\n                </Toolbar>\n            </DialogTitle>\n            <DialogContent\n                style={{\n                    textAlign: 'center'\n                }}\n            >\n                {props.type.capitalize()} #{props.data.index + 1}\n                <br />\n                <Divider style={{ marginTop: 8, marginBottom: 8 }} />\n                <div\n                    style={{ paddingBottom: 8 }}\n                    dangerouslySetInnerHTML={{\n                        __html: props.data.quote.replace('{playername}', props.settings.playerName)\n                    }}\n                />\n                <MonthPanels\n                    months={hours.map(\n                        (month) => month.reduce((a, b) => a || b)\n                    )}\n                    activeMonth={props.month}\n                    settings={props.settings}\n                />\n                <TimeTracker\n                    hours={hours[props.now.getMonth()]}\n                    time={props.now}\n                    settings={props.settings}\n                />\n                <Card variant=\"outlined\">\n                    <CardContent>\n                        <div className=\"critter-overview\">\n                            <img\n                                src={\n                                    `assets/${props.type}/${props.data.index.toString().padStart(2, '0')\n                                    }.png`\n                                }\n                                className=\"critter-icon\"\n                            />\n                            {props.data.dry && <WbSunny className=\"critter-dry\" style={{ color: theme.palette.summer.main }} />}\n                            {props.data.rain && <Cloud className=\"critter-wet\" style={{ color: theme.palette.winter.main }} />}\n                            <div className=\"location-label\">Found:</div>\n                            <div className=\"price-label\">Sells for:</div>\n                            <div className=\"location\">{props.data.location}</div>\n                            <div className=\"price\">{props.data.price}</div>\n                        </div>\n                    </CardContent>\n                </Card>\n            </DialogContent>\n            <DialogActions>\n                <FormControlLabel\n                    control={\n                        <Checkbox\n                            checked={props.obtained}\n                            onChange={(event) => props.setObtained(event.target.checked)}\n                            color=\"primary\"\n                        />\n                    }\n                    label=\"Obtained\"\n                />\n                <FormControlLabel\n                    control={\n                        <Checkbox\n                            checked={props.modelled}\n                            disabled={!props.obtained}\n                            onChange={(event) => props.setModelled(event.target.checked)}\n                            color=\"default\"\n                            style={{ color: theme.palette.modelled.main }}\n                        />\n                    }\n                    label=\"Modelled\"\n                />\n            </DialogActions>\n        </Dialog>\n    </>;\n}\nexport default CritterPanel;","import { Card, CardContent, CardHeader, Checkbox, FormControl, FormControlLabel, Grid, InputLabel, MenuItem, Select, TextField, useTheme } from '@material-ui/core';\nimport React from 'react';\nimport UserSettings from '../../user_settings';\nimport CritterPanel from './components/CritterPanel';\nimport { bugs, fish } from './data.json';\nimport SearchParameters from './search_parameters';\nconst a = bugs;\nconst b = fish;\n\nfunction range(stop: number) {\n    return Array.from(Array(stop).keys());\n}\n\ninterface UserCritterData {\n    obtained: boolean;\n    modelled: boolean;\n}\n\ninterface UserCritterpediaData {\n    bugs: UserCritterData[];\n    fish: UserCritterData[];\n}\n\ninterface CritterpediaProps {\n    settings: UserSettings;\n    time: Date;\n}\n\nexport default function Critterpedia(props: CritterpediaProps) {\n    const theme = useTheme();\n    if (!window.localStorage.critterpedia) {\n        let data: UserCritterpediaData = {\n            bugs: [],\n            fish: [],\n        };\n        for (let i = 0; i < 80; i++) {\n            data.bugs.push({ obtained: false, modelled: false });\n            data.fish.push({ obtained: false, modelled: false });\n        }\n        window.localStorage.critterpedia = JSON.stringify(data);\n    }\n    const data: UserCritterpediaData = JSON.parse(window.localStorage.critterpedia);\n    const [activeRequired, setActiveRequired] = React.useState(false);\n    const [leavingRequired, setLeavingRequired] = React.useState(false);\n    const [location, setLocation] = React.useState('');\n    const [name, setName] = React.useState('');\n    const [price, setPrice] = React.useState(0);\n    const [priceComparison, setPriceComparison] = React.useState<'>=' | '=' | '<='>('>=');\n    const [size, setSize] = React.useState('');\n    const [unmodelledRequired, setUnmodelledRequired] = React.useState(false);\n    const [unobtainedRequired, setUnobtainedRequired] = React.useState(false);\n    const searchParameters: SearchParameters = {\n        activeRequired,\n        leavingRequired,\n        location,\n        name,\n        price,\n        priceComparison,\n        size,\n        unmodelledRequired,\n        unobtainedRequired,\n    };\n    const [bugsData, setBugsDataImpl] = React.useState(data.bugs);\n    const [fishData, setFishDataImpl] = React.useState(data.fish);\n    const [openDialogue, setOpenDialogue] = React.useState<number | null>(null);\n    const [openDialogueType, setOpenDialogueType] = React.useState<'bug' | 'fish'>('bug');\n    function setBugsData(bug: number, state: UserCritterData) {\n        data.bugs[bug] = state;\n        window.localStorage.critterpedia = JSON.stringify(data);\n        setBugsDataImpl(data.bugs);\n    }\n    function setFishData(fish: number, state: UserCritterData) {\n        data.fish[fish] = state;\n        window.localStorage.critterpedia = JSON.stringify(data);\n        setFishDataImpl(data.fish);\n    }\n    const now = new Date();\n    return <div style={{ maxWidth: 1316, margin: 'auto' }}>\n        <Card style={{ margin: 16 }}>\n            <CardHeader title=\"Search Critters\" />\n            <CardContent>\n                <Grid container spacing={1}>\n                    <Grid item xs={12} sm={6} md={4} >\n                        <TextField fullWidth value={name} onChange={(event) => setName(event.target.value)} label=\"Name\" />\n                    </Grid>\n                    <Grid item xs={12} sm={6} md={4} >\n                        <TextField fullWidth value={location} onChange={(event) => setLocation(event.target.value)} label=\"Location\" />\n                    </Grid>\n                    <Grid item xs={12} sm={6} md={4} >\n                        <TextField fullWidth value={size} onChange={(event) => setSize(event.target.value)} label=\"Size (fish)\" />\n                    </Grid>\n                    <Grid item xs={6} sm={3} md={2} >\n                        <FormControl fullWidth variant=\"filled\">\n                            <InputLabel id=\"comp-label\">Price</InputLabel>\n                            <Select\n                                value={priceComparison}\n                                onChange={(event) => setPriceComparison(\n                                    event.target.value as ('>=' | '=' | '<=')\n                                )}\n                                labelId='comp-label'\n                                fullWidth\n                            >\n                                <MenuItem value=\">=\">≥</MenuItem>\n                                <MenuItem value=\"=\">=</MenuItem>\n                                <MenuItem value=\"<=\">≤</MenuItem>\n                            </Select>\n                        </FormControl>\n                    </Grid>\n                    <Grid item xs={6} sm={3} md={2} >\n                        <TextField fullWidth value={price} onChange={(event) => setPrice(+event.target.value)} label=\"Value\" />\n                    </Grid>\n                    <Grid item xs={12} sm={6} md={4} >\n                        <FormControlLabel\n                            control={\n                                <Checkbox\n                                    checked={activeRequired}\n                                    onChange={(event) => setActiveRequired(event.target.checked)}\n                                    color=\"primary\"\n                                />\n                            }\n                            label=\"Available this month\"\n                        />\n                    </Grid>\n                    <Grid item xs={12} sm={6} md={4} >\n                        <FormControlLabel\n                            control={\n                                <Checkbox\n                                    checked={leavingRequired}\n                                    onChange={(event) => setLeavingRequired(event.target.checked)}\n                                    color=\"primary\"\n                                />\n                            }\n                            label=\"Unavailable from next month\"\n                        />\n                    </Grid>\n                    <Grid item xs={12} sm={6} md={4} >\n                        <FormControlLabel\n                            control={\n                                <Checkbox\n                                    checked={unobtainedRequired}\n                                    onChange={(event) => setUnobtainedRequired(event.target.checked)}\n                                    color=\"primary\"\n                                />\n                            }\n                            label=\"Unobtained\"\n                        />\n                    </Grid>\n                    <Grid item xs={12} sm={6} md={4} >\n                        <FormControlLabel\n                            control={\n                                <Checkbox\n                                    checked={unmodelledRequired}\n                                    onChange={(event) => setUnmodelledRequired(event.target.checked)}\n                                    color=\"primary\"\n                                />\n                            }\n                            label=\"Model unobtained\"\n                        />\n                    </Grid>\n                </Grid>\n            </CardContent>\n        </Card>\n        <Card style={{ margin: 16 }}>\n            <CardHeader title={\n                <>\n                    Bugs - <span style={{ color: theme.palette.primary.main }}>\n                        ({\n                            bugsData.reduce((total, bug) => total + (+bug.obtained), 0)\n                        } / 80)\n                    </span> <span style={{ color: theme.palette.modelled.main }}>\n                        ({\n                            bugsData.reduce((total, bug) => total + (+bug.modelled), 0)\n                        } / 80)\n                    </span>\n                </>\n            } />\n            <CardContent style={{ overflowX: 'auto' }}>\n                <table style={{ paddingRight: 16 }}>\n                    <tbody>\n                        {\n                            range(5).map(\n                                (y) =>\n                                    <tr>\n                                        {\n                                            range(16).map(\n                                                (x) => {\n                                                    const bugData = bugsData[x * 5 + y];\n                                                    return <td>\n                                                        <CritterPanel\n                                                            data={bugs[x * 5 + y]}\n                                                            obtained={bugData.obtained}\n                                                            modelled={bugData.modelled}\n                                                            type=\"bug\"\n                                                            setObtained={(value: boolean) => setBugsData(x * 5 + y, { obtained: value, modelled: false })}\n                                                            setModelled={(value: boolean) => setBugsData(x * 5 + y, { obtained: true, modelled: value })}\n                                                            month={now.getMonth()}\n                                                            hour={now.getHours()}\n                                                            openDialogue={openDialogueType === 'bug' ? openDialogue : null}\n                                                            setOpenDialogue={(value: number | null) => {\n                                                                setOpenDialogueType('bug');\n                                                                setOpenDialogue(value);\n                                                            }}\n                                                            searchParameters={searchParameters}\n                                                            settings={props.settings}\n                                                            now={props.time}\n                                                        />\n                                                    </td>;\n                                                }\n                                            )\n                                        }\n                                    </tr>\n                            )\n                        }\n                    </tbody>\n                </table>\n            </CardContent>\n        </Card>\n        <Card style={{ margin: 16 }}>\n            <CardHeader title={\n                <>\n                    Fish - <span style={{ color: theme.palette.primary.main }}>\n                        ({\n                            fishData.reduce((total, fish) => total + (+fish.obtained), 0)\n                        } / 80)\n                    </span> <span style={{ color: theme.palette.modelled.main }}>\n                        ({\n                            fishData.reduce((total, fish) => total + (+fish.modelled), 0)\n                        } / 80)\n                    </span>\n                </>\n            } />\n            <CardContent style={{ overflowX: 'auto' }}>\n                <table style={{ paddingRight: 16 }}>\n                    <tbody>\n                        {\n                            range(5).map(\n                                (y) =>\n                                    <tr>\n                                        {\n                                            range(16).map(\n                                                (x) => {\n                                                    const bugData = fishData[x * 5 + y];\n                                                    return <td>\n                                                        <CritterPanel\n                                                            data={fish[x * 5 + y]}\n                                                            obtained={bugData.obtained}\n                                                            modelled={bugData.modelled}\n                                                            type=\"fish\"\n                                                            setObtained={(value: boolean) => setFishData(x * 5 + y, { obtained: value, modelled: false })}\n                                                            setModelled={(value: boolean) => setFishData(x * 5 + y, { obtained: true, modelled: value })}\n                                                            month={now.getMonth()}\n                                                            hour={now.getHours()}\n                                                            openDialogue={openDialogueType === 'fish' ? openDialogue : null}\n                                                            setOpenDialogue={(value: number | null) => {\n                                                                setOpenDialogueType('fish');\n                                                                setOpenDialogue(value);\n                                                            }}\n                                                            searchParameters={searchParameters}\n                                                            settings={props.settings}\n                                                            now={props.time}\n                                                        />\n                                                    </td>;\n                                                }\n                                            )\n                                        }\n                                    </tr>\n                            )\n                        }\n                    </tbody>\n                </table>\n            </CardContent>\n        </Card>\n    </div>\n}","import { ComponentsProps } from \"@material-ui/core/styles/props\";\n\nconst commonProps: ComponentsProps = {\n    MuiTextField: {\n        variant: 'filled',\n    },\n    MuiSelect: {\n        variant: 'filled',\n    },\n    MuiFormControl: {\n        variant: 'filled',\n    },\n};\nexport { commonProps };\n","import { createMuiTheme } from '@material-ui/core/styles';\nimport { commonProps } from './common_theme_data';\nimport './prototype_mods';\n\n\n// Dark theme\nconst theme = createMuiTheme({\n    palette: {\n        type: 'dark',\n        opacity: 0.3,\n        elevations: {\n            0: { main: '#1e1e1e' },\n            1: { main: '#292929' },\n            2: { main: '#2e2e2e' },\n            3: { main: '#303030' },\n            4: { main: '#323232' },\n            6: { main: '#373737' },\n            8: { main: '#393939' },\n            12: { main: '#3e3e3e' },\n            16: { main: '#404040' },\n            24: { main: '#424242' },\n        },\n        modelled: {\n            main: 'gold',\n            transparent: 'rgba(255, 215, 0, 0.3)',\n        },\n        winter: {\n            main: '#3c84c6',\n            transparent: 'rgba(60, 132, 198, 0.3)',\n            contrastText: 'rgba(0,0,0,87%)'\n        },\n        spring: {\n            main: '#38761c',\n            transparent: 'rgba(56, 118, 28, 0.3)',\n            contrastText: 'rgba(0,0,0,87%)'\n        },\n        summer: {\n            main: '#e69038',\n            transparent: 'rgba(230, 144, 56, 0.3)',\n            contrastText: 'rgba(0,0,0,87%)'\n        },\n        autumn: {\n            main: '#b45f04',\n            transparent: 'rgba(180, 95, 4, 0.3)',\n            contrastText: 'rgba(0,0,0,87%)'\n        },\n        primary: {\n            main: '#bb86fc',\n            dark: '#3700b3',\n            contrastText: 'rgba(0,0,0,87%)',\n            transparent: 'rgba(187, 134, 252, 0.3)',\n        },\n        secondary: {\n            main: '#03dac6',\n            dark: '#03dac6',\n            contrastText: 'rgba(0,0,0,87%)',\n        },\n        error: {\n            main: '#cf6679',\n            transparent: 'rgba(207, 102, 121, 0.3)',\n        },\n        background: {\n            paper: '#1e1e1e',\n            default: '#121212'\n        },\n        text: {\n            primary: 'rgba(255,255,255,87%)',\n            secondary: 'rgba(255,255,255,60%)',\n            hint: 'rgba(255,255,255,60%)',\n            disabled: 'rgba(255,255,255,38%)',\n        }\n    },\n    zIndex: {\n        appBar: 1250\n    },\n    props: commonProps,\n});\n\ntheme.overrides = {\n    MuiAppBar: {\n        colorPrimary: {\n            backgroundColor: theme.palette.background.paper,\n            color: theme.palette.primary.main,\n        },\n        colorSecondary: {\n            backgroundColor: theme.palette.background.paper,\n            color: theme.palette.secondary.main,\n        },\n        colorDefault: {\n            backgroundColor: theme.palette.background.paper,\n            color: theme.palette.text.primary,\n        }\n    },\n    MuiDrawer: {\n        paper: {\n            width: 240\n        }\n    },\n    MuiCard: {\n        root: {\n            borderWidth: 1,\n            borderColor: 'rgba(255, 255, 255, 8%)',\n            borderStyle: 'solid',\n        },\n    },\n    MuiCardHeader: {\n        root: {\n            paddingBottom: 0,\n            textAlign: 'center',\n        },\n    },\n    MuiListItemIcon: {\n        root: {\n            color: theme.palette.text.secondary,\n        }\n    }\n};\n\nexport default theme;","import { createMuiTheme } from '@material-ui/core/styles';\nimport { commonProps } from './common_theme_data';\nimport './prototype_mods';\n\n// Normal or default theme\nconst theme = createMuiTheme({\n    palette: {\n        type: 'light',\n        opacity: 0.6,\n        elevations: {\n            0: { main: '#ffffff' },\n            1: { main: '#ffffff' },\n            2: { main: '#ffffff' },\n            3: { main: '#ffffff' },\n            4: { main: '#ffffff' },\n            6: { main: '#ffffff' },\n            8: { main: '#ffffff' },\n            12: { main: '#ffffff' },\n            16: { main: '#ffffff' },\n            24: { main: '#ffffff' },\n        },\n        modelled: {\n            main: '#fbc02d',\n            transparent: 'rgba(251, 192, 45, 0.5)',\n        },\n        winter: {\n            main: '#3c84c6',\n            transparent: 'rgba(60, 132, 198, 0.6)',\n            contrastText: 'rgba(0,0,0,87%)',\n        },\n        spring: {\n            main: '#38761c',\n            transparent: 'rgba(56, 118, 28, 0.6)',\n            contrastText: 'rgba(0,0,0,87%)',\n        },\n        summer: {\n            main: '#e69038',\n            transparent: 'rgba(230, 144, 56, 0.6)',\n            contrastText: 'rgba(0,0,0,87%)',\n        },\n        autumn: {\n            main: '#b45f04',\n            transparent: 'rgba(180, 95, 4, 0.6)',\n            contrastText: 'rgba(0,0,0,87%)',\n        },\n        primary: {\n            main: '#6200ee',\n            dark: '#3700b3',\n            contrastText: 'rgba(255,255,255,87%)',\n            transparent: 'rgba(98, 0, 238, 0.5)',\n        },\n        secondary: {\n            main: '#03dac6',\n            dark: '#018786',\n            contrastText: 'rgba(0,0,0,87%)',\n        },\n        error: {\n            main: '#b00020',\n            transparent: 'rgba(176, 0, 32, 0.5)',\n        },\n        background: {\n            paper: '#ffffff',\n            default: '#eeeeee'\n        },\n        text: {\n            primary: 'rgba(0,0,0,87%)',\n            secondary: 'rgba(0,0,0,60%)',\n            hint: 'rgba(0,0,0,60%)',\n            disabled: 'rgba(0,0,0,38%)',\n        }\n    },\n    zIndex: {\n        appBar: 1250\n    },\n    props: commonProps,\n});\n\ntheme.overrides = {\n    MuiDrawer: {\n        paper: {\n            width: 240\n        }\n    },\n    MuiCard: {\n        root: {\n            borderWidth: 1,\n            borderColor: 'transparent',\n            borderStyle: 'solid',\n        },\n    },\n    MuiCardHeader: {\n        root: {\n            paddingBottom: 0,\n            textAlign: 'center',\n        },\n    },\n};\n\nexport default theme;","import dark from './dark';\nimport light from './light';\n\nconst themes = {\n    light,\n    dark,\n}\n\nexport default function getTheme(theme: \"light\" | \"dark\") {\n    return themes[theme];\n}","\nimport { CssBaseline, List, ListItem, ListItemIcon, ListItemText, ThemeProvider, Typography, useMediaQuery, useTheme } from '@material-ui/core';\nimport { EmojiNature } from '@material-ui/icons';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport AppBar from './components/AppBar';\nimport NavigationDrawer from './components/NavigationDrawer';\nimport './index.scss';\nimport Critterpedia from './pages/critterpedia';\nimport getTheme from './themes';\nimport UserSettings from './user_settings';\n\n\ninterface DrawerAdjustProps {\n    active: boolean,\n    children: React.ReactNode;\n}\nfunction DrawerAdjust(props: DrawerAdjustProps) {\n    const theme = useTheme();\n    const matches = useMediaQuery(theme.breakpoints.up('sm'));\n    return (\n        <div style={{ paddingLeft: 240 * (+props.active) * (+matches), transition: 'padding-left 195ms cubic-bezier(0.4, 0, 0.6, 1) 0ms' }}>\n            {props.children}\n        </div>\n    )\n}\ninterface AppFrameProps {\n    setTheme: (value: \"dark\" | \"light\") => void;\n    theme: \"dark\" | \"light\";\n    setPage: (value: string) => void;\n    page: string;\n    children: React.ReactNode;\n}\nfunction AppFrame(props: AppFrameProps) {\n    const [drawerOpen, setDrawerOpen] = React.useState(false);\n    const theme = useTheme();\n    return (\n        <>\n            <AppBar setTheme={props.setTheme} setDrawerOpen={setDrawerOpen} theme={props.theme} drawerOpen={drawerOpen} title={\n                <Typography variant=\"h6\">\n                    <div\n                        style={{\n                            color: theme.palette.winter.main,\n                            display: 'inline'\n                        }}>Nook</div>\n                    <div\n                        style={{\n                            color: theme.palette.summer.main,\n                            display: 'inline'\n                        }}>Data</div>\n                </Typography>\n            } />\n            <NavigationDrawer open={drawerOpen} setOpen={setDrawerOpen}>\n                <List>\n                    <ListItem selected={props.page === 'critterpedia'} button key='critterpedia' onClick={() => props.setPage('critterpedia')}>\n                        <ListItemIcon><EmojiNature /></ListItemIcon>\n                        <ListItemText primary='Critterpedia' />\n                    </ListItem>\n                    {/* {['A', 'B', 'C'].map((text, index) => (\n                        <ListItem selected={props.page === text} button key={text} onClick={() => props.setPage(text)}>\n                            <ListItemIcon>{index % 2 === 0 ? <EmojiNature /> : <MailIcon />}</ListItemIcon>\n                            <ListItemText primary={text} />\n                        </ListItem>\n                    ))} */}\n                </List>\n                {/* <Divider />\n                <List>\n                    {['A', 'B', 'C'].map((text, index) => (\n                        <ListItem button key={text}>\n                            <ListItemIcon>{index % 2 === 0 ? <EmojiNature /> : <MailIcon />}</ListItemIcon>\n                            <ListItemText primary={text} />\n                        </ListItem>\n                    ))}\n                </List> */}\n            </NavigationDrawer>\n            <DrawerAdjust active={drawerOpen}>\n                {props.children}\n            </DrawerAdjust>\n        </>\n    )\n}\n\ninterface RouteProps {\n    page: string;\n    route: string;\n    children: React.ReactNode;\n}\nfunction Route(props: RouteProps) {\n    if (props.page !== props.route) {\n        return null;\n    }\n    return <>\n        {props.children}\n    </>;\n}\n\nlet timeUpdateId: number | undefined = undefined;\nconst sentinelDate = new Date();\n\nfunction App() {\n    const themeSetting: \"dark\" | \"light\" = window.localStorage.theme || 'dark';\n    const [chosenTheme, setChosenTheme] = React.useState<'dark' | 'light'>(themeSetting);\n    const hemisphereSetting: \"north\" | \"south\" = window.localStorage.hemisphere || 'north';\n    const [chosenHemisphere, setChosenHemisphere] = React.useState<'north' | 'south'>(hemisphereSetting);\n    const settings: UserSettings = {\n        theme: chosenTheme,\n        hemisphere: chosenHemisphere,\n        islandName: 'Gloverboia',\n        playerName: 'Starwort',\n        timeOffset: 0,\n        useSystemTime: true,\n        useTwelveHourTime: true,\n    }\n    const [time, setTime] = React.useState(sentinelDate);\n    if (timeUpdateId) {\n        window.clearInterval(timeUpdateId);\n    }\n    timeUpdateId = window.setInterval(() => setTime(new Date()), 500);\n    const [page, setPage] = React.useState('home');\n    const theme = React.useMemo(\n        () => getTheme(chosenTheme),\n        [chosenTheme]\n    );\n    return <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <AppFrame page={page} theme={chosenTheme} setTheme={setChosenTheme} setPage={setPage}>\n            <Route page={page} route=\"critterpedia\">\n                <Critterpedia time={time} settings={settings} />\n            </Route>\n        </AppFrame>\n    </ThemeProvider>\n}\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\nexport { };\n"],"sourceRoot":""}