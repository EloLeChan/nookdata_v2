{"version":3,"sources":["components/AppBar.tsx","components/NavigationDrawer.tsx","i18n.ts","pages/critterpedia/data.ts","prototype_mods.ts","pages/critterpedia/components/MonthPanels.tsx","pages/critterpedia/components/TimeTracker.tsx","pages/critterpedia/components/CritterPanel.tsx","pages/critterpedia/index.tsx","common_theme_data.ts","dark.tsx","light.tsx","themes.tsx","index.tsx"],"names":["AppBar","props","useTranslation","t","i18n","position","Toolbar","IconButton","edge","color","aria-label","style","marginRight","onClick","setDrawerOpen","drawerOpen","flexGrow","title","FormControl","InputLabel","id","Select","autoWidth","value","language","split","onChange","event","changeLanguage","target","labelId","MenuItem","theme","window","localStorage","setTheme","NavigationDrawer","useTheme","container","undefined","document","body","Hidden","smUp","Drawer","variant","anchor","direction","open","onClose","setOpen","children","xsDown","use","Backend","LanguageDetector","initReactI18next","init","backend","loadPath","fallbackLng","debug","process","interpolation","escapeValue","getCritterName","critter","type","normal_name","getCritterQuote","playername","getCritterLocation","location","String","prototype","capitalise","this","charAt","toUpperCase","slice","months","winter","settings","hemisphere","palette","summer","spring","autumn","seasons","MonthPanel","width","Card","backgroundColor","month","main","opacity","contrastText","borderColor","active","error","borderWidth","borderStyle","margin","CardContent","paddingBottom","MonthPanels","activeMonth","TimeTracker","now","time","progress","getMilliseconds","getSeconds","getMinutes","getHours","className","marginBottom","useTwelveHourTime","text","primary","pad","h12","h24","m","hours","modelled","useStyles","makeStyles","createStyles","transparent","CritterPanel","data","activeNow","hour","reduce","a","b","leavingSoon","searchParameters","activeRequired","name","price","priceComparison","size","stateRequired","shadow","match","includes","toLowerCase","obtained","index","filter","elem","join","CardActionArea","setOpenDialogue","Warning","Help","src","toString","padStart","Dialog","openDialogue","scroll","PaperProps","transition","DialogTitle","ChevronLeft","ChevronRight","disabled","textAlign","DialogContent","Divider","marginTop","dangerouslySetInnerHTML","__html","playerName","map","getMonth","dry","WbSunny","rain","Cloud","DialogActions","FormControlLabel","control","Checkbox","checked","setObtained","label","setModelled","range","stop","Array","from","keys","Critterpedia","params","setParams","critterpedia","bugs","fish","i","push","JSON","stringify","parse","React","useState","setActiveRequired","setLocation","setName","setPrice","setPriceComparison","setSize","setStateRequired","bugsData","setBugsDataImpl","fishData","setFishDataImpl","setOpenDialogueImpl","openDialogueType","setOpenDialogueType","history","pushState","URLSearchParams","has","Error","get","setBugsData","bug","state","setFishData","Date","maxWidth","CardHeader","Grid","spacing","item","xs","sm","md","TextField","fullWidth","display","justifyContent","alignItems","height","Trans","i18nKey","total","overflowX","paddingRight","y","x","bugData","commonProps","MuiTextField","MuiSelect","MuiFormControl","createMuiTheme","elevations","0","1","2","3","4","6","8","12","16","24","dark","secondary","background","paper","default","hint","zIndex","appBar","overrides","MuiAppBar","colorPrimary","colorSecondary","colorDefault","MuiDrawer","MuiCard","root","MuiCardHeader","MuiListItemIcon","themes","light","baseUrl","homepage","pageData","icon","EmojiNature","DrawerAdjust","matches","useMediaQuery","breakpoints","up","paddingLeft","AppFrame","startOpen","initialRender","setInitialRender","Typography","List","Object","entries","route","ListItem","selected","page","button","setPage","ListItemIcon","ListItemText","Route","pageTitle","timeUpdateId","sentinelDate","Loading","App","themeSetting","chosenTheme","setChosenThemeImpl","hemisphereSetting","chosenHemisphere","islandName","timeOffset","useSystemTime","setTime","clearInterval","setInterval","setPageImpl","url","URL","href","pathname","length","searchParams","useMemo","getTheme","ThemeProvider","CssBaseline","classList","add","setTimeout","remove","fallback","newParams","delete","key","append","urlTmp","replaceState","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.fc362ad1.chunk.js","sourcesContent":["import { AppBar as TopAppBar, FormControl, IconButton, InputLabel, MenuItem, Select, Toolbar } from '@material-ui/core';\nimport DarkModeIcon from '@material-ui/icons/Brightness4';\nimport LightModeIcon from '@material-ui/icons/Brightness7';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\n\ninterface AppBarProps {\n    setTheme: (value: \"dark\" | \"light\") => void,\n    theme: 'dark' | 'light',\n    setDrawerOpen: (value: boolean) => void,\n    drawerOpen: boolean,\n    title: React.ReactNode,\n}\n\nfunction AppBar(props: AppBarProps) {\n    const { t, i18n } = useTranslation('core');\n    return (\n        <>\n            <TopAppBar position=\"fixed\">\n                <Toolbar>\n                    <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\"\n                        style={{ marginRight: 16 }}\n                        onClick={() => props.setDrawerOpen(!props.drawerOpen)}>\n                        <MenuIcon />\n                    </IconButton>\n                    <div style={{ flexGrow: 1 }}>\n                        {props.title}\n                    </div>\n                    <FormControl>\n                        <InputLabel id=\"lang-label\">{t('core:lang.choose')}</InputLabel>\n                        <Select\n                            autoWidth\n                            value={i18n.language.split('-')[0]}\n                            onChange={(event) => i18n.changeLanguage(event.target.value as string)}\n                            labelId='lang-label'\n                        >\n                            <MenuItem value=\"en\">{t('core:lang.en')}</MenuItem>\n                            <MenuItem value=\"fr\">{t('core:lang.fr')}</MenuItem>\n                            {/* <MenuItem value=\"unmodelled\">{t('critterpedia:search.state.unmodelled')}</MenuItem> */}\n                        </Select>\n                    </FormControl>\n                    {props.theme == 'light'\n                        ? <IconButton color=\"inherit\" onClick={\n                            () => {\n                                window.localStorage.theme = 'dark';\n                                props.setTheme('dark')\n                            }}><DarkModeIcon /></IconButton>\n                        : <IconButton color=\"inherit\" onClick={\n                            () => {\n                                window.localStorage.theme = 'light';\n                                props.setTheme('light')\n                            }}><LightModeIcon /></IconButton>}\n                </Toolbar>\n            </TopAppBar>\n            <Toolbar />\n        </>\n    )\n}\nexport default AppBar;\n","import { Drawer, Hidden, Toolbar, useTheme } from '@material-ui/core';\nimport React from 'react';\ninterface NavigationDrawerProps {\n    open: boolean;\n    setOpen: (value: boolean) => void;\n    children: React.ReactNode;\n}\n\n\nfunction NavigationDrawer(props: NavigationDrawerProps) {\n    const theme = useTheme();\n    const container = window !== undefined ? () => window.document.body : undefined;\n    return <>\n        <Hidden smUp>\n            <Drawer\n                variant=\"temporary\"\n                container={container}\n                anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n                open={props.open}\n                onClose={() => props.setOpen(false)}\n            >\n                {props.children}\n            </Drawer>\n        </Hidden>\n        <Hidden xsDown>\n            <Drawer\n                variant=\"persistent\"\n                anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n                open={props.open}\n            >\n                <Toolbar />\n                {props.children}\n            </Drawer>\n        </Hidden>\n    </>;\n}\nexport default NavigationDrawer;\n","\nimport i18n from 'i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport Backend from 'i18next-http-backend';\nimport { initReactI18next } from 'react-i18next';\n\ni18n.use(Backend)\n    .use(LanguageDetector)\n    .use(initReactI18next)\n    .init({\n        backend: { loadPath: '/nookdata_v2/assets/i18n/{{lng}}/{{ns}}.json' },\n        fallbackLng: 'en',\n        debug: process.env.NODE_ENV == 'development',\n\n        interpolation: {\n            escapeValue: false, // not needed for react as it escapes by default\n        }\n    });","import { bugs, fish } from './data.json';\n\ntype Critter = typeof bugs[0] | typeof fish[0];\nexport type { Critter };\nexport {\n    getCritterName,\n    getCritterQuote,\n    getCritterLocation\n};\n\n\nfunction getCritterName(critter: Critter, type: 'bug' | 'fish', t: (key: string, props?: Object) => string) {\n    return t(`critterpedia:${type}.name.${critter.normal_name}`);\n}\n\nfunction getCritterQuote(critter: Critter, type: 'bug' | 'fish', playername: string, t: (key: string, props?: Object) => string) {\n    return t(`critterpedia:${type}.quote.${critter.normal_name}`, { playername });\n}\n\nfunction getCritterLocation(critter: Critter, type: 'bug' | 'fish', t: (key: string, props?: Object) => string) {\n    return t(`critterpedia:${type}.location.${critter.location}`);\n}\n\n\n","declare global {\n    interface String {\n        capitalise: () => String;\n    }\n}\nString.prototype.capitalise = function () {\n    return this.charAt(0).toUpperCase() + this.slice(1);\n}\n\ndeclare module \"react\" {\n    interface CSSProperties {\n        '--progress'?: string | number;\n    }\n}\n\ndeclare module \"@material-ui/core/styles/createPalette\" {\n    interface ElevationColour {\n        0: { main: string };\n        1: { main: string };\n        2: { main: string };\n        3: { main: string };\n        4: { main: string };\n        6: { main: string };\n        8: { main: string };\n        12: { main: string };\n        16: { main: string };\n        24: { main: string };\n    }\n    interface PaletteColor {\n        transparent?: string;\n    }\n    interface SimplePaletteColorOptions {\n        transparent?: string;\n    }\n    interface Palette {\n        elevations: ElevationColour;\n        opacity: number;\n        modelled: Palette['primary'];\n        spring: Palette['primary'];\n        summer: Palette['primary'];\n        autumn: Palette['primary'];\n        winter: Palette['primary'];\n    }\n    interface PaletteOptions {\n        elevations: ElevationColour;\n        opacity: number;\n        modelled: PaletteOptions['primary'];\n        spring: PaletteOptions['primary'];\n        summer: PaletteOptions['primary'];\n        autumn: PaletteOptions['primary'];\n        winter: PaletteOptions['primary'];\n    }\n}\nexport { };\n","import { Card, CardContent, Theme, useTheme } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport '../../../prototype_mods';\nimport UserSettings from '../../../user_settings';\nimport './CritterPanel.scss';\nconst months = [\n    \"critterpedia:dialogue.months.jan\",\n    \"critterpedia:dialogue.months.feb\",\n    \"critterpedia:dialogue.months.mar\",\n    \"critterpedia:dialogue.months.apr\",\n    \"critterpedia:dialogue.months.may\",\n    \"critterpedia:dialogue.months.jun\",\n    \"critterpedia:dialogue.months.jul\",\n    \"critterpedia:dialogue.months.aug\",\n    \"critterpedia:dialogue.months.sep\",\n    \"critterpedia:dialogue.months.oct\",\n    \"critterpedia:dialogue.months.nov\",\n    \"critterpedia:dialogue.months.dec\",\n];\nfunction winter(theme: Theme, settings: UserSettings) {\n    return (\n        settings.hemisphere === \"north\"\n            ? theme.palette.winter\n            : theme.palette.summer\n    );\n}\nfunction spring(theme: Theme, settings: UserSettings) {\n    return (\n        settings.hemisphere === \"north\"\n            ? theme.palette.spring\n            : theme.palette.autumn\n    );\n}\nfunction summer(theme: Theme, settings: UserSettings) {\n    return (\n        settings.hemisphere === \"north\"\n            ? theme.palette.summer\n            : theme.palette.winter\n    );\n}\nfunction autumn(theme: Theme, settings: UserSettings) {\n    return (\n        settings.hemisphere === \"north\"\n            ? theme.palette.autumn\n            : theme.palette.spring\n    );\n}\nconst seasons = [\n    winter,\n    winter,\n    spring,\n    spring,\n    spring,\n    summer,\n    summer,\n    summer,\n    autumn,\n    autumn,\n    autumn,\n    winter,\n];\n\ninterface MonthPanelProps {\n    months: boolean[];\n    month: number;\n    active: boolean;\n    settings: UserSettings;\n}\nfunction MonthPanel(props: MonthPanelProps) {\n    const theme = useTheme();\n    const { t, i18n } = useTranslation('critterpedia');\n    return <td width=\"33%\">\n        <Card\n            variant=\"outlined\"\n            style={{\n                // backgroundColor: ((colour) => (\n                //     props.months[props.month]\n                //         ? colour.main\n                //         : colour.transparent\n                // ))(\n                //     seasons[props.month](theme, props.settings)\n                // ),\n                backgroundColor: seasons[props.month](theme, props.settings).main,\n                opacity: props.months[props.month] ? undefined : theme.palette.opacity,\n                color: seasons[props.month](theme, props.settings).contrastText,\n                borderColor: props.active ? theme.palette.error.main : 'transparent',\n                borderWidth: 2,\n                borderStyle: 'solid',\n                margin: -1,\n            }}\n        >\n            <CardContent style={{ paddingBottom: 16 }}>\n                {t(months[props.month])}\n            </CardContent>\n        </Card>\n    </td>\n}\ninterface MonthPanelsProps {\n    months: boolean[];\n    activeMonth: number;\n    settings: UserSettings;\n}\nexport default function MonthPanels(props: MonthPanelsProps) {\n    return <table style={{ width: '100%' }}>\n        <tbody>\n            <tr>\n                <MonthPanel\n                    months={props.months}\n                    month={0}\n                    active={props.activeMonth == 0}\n                    settings={props.settings}\n                />\n                <MonthPanel\n                    months={props.months}\n                    month={1}\n                    active={props.activeMonth == 1}\n                    settings={props.settings}\n                />\n                <MonthPanel\n                    months={props.months}\n                    month={2}\n                    active={props.activeMonth == 2}\n                    settings={props.settings}\n                />\n            </tr>\n            <tr>\n                <MonthPanel\n                    months={props.months}\n                    month={3}\n                    active={props.activeMonth == 3}\n                    settings={props.settings}\n                />\n                <MonthPanel\n                    months={props.months}\n                    month={4}\n                    active={props.activeMonth == 4}\n                    settings={props.settings}\n                />\n                <MonthPanel\n                    months={props.months}\n                    month={5}\n                    active={props.activeMonth == 5}\n                    settings={props.settings}\n                />\n            </tr>\n            <tr>\n                <MonthPanel\n                    months={props.months}\n                    month={6}\n                    active={props.activeMonth == 6}\n                    settings={props.settings}\n                />\n                <MonthPanel\n                    months={props.months}\n                    month={7}\n                    active={props.activeMonth == 7}\n                    settings={props.settings}\n                />\n                <MonthPanel\n                    months={props.months}\n                    month={8}\n                    active={props.activeMonth == 8}\n                    settings={props.settings}\n                />\n            </tr>\n            <tr>\n                <MonthPanel\n                    months={props.months}\n                    month={9}\n                    active={props.activeMonth == 9}\n                    settings={props.settings}\n                />\n                <MonthPanel\n                    months={props.months}\n                    month={10}\n                    active={props.activeMonth == 10}\n                    settings={props.settings}\n                />\n                <MonthPanel\n                    months={props.months}\n                    month={11}\n                    active={props.activeMonth == 11}\n                    settings={props.settings}\n                />\n            </tr>\n        </tbody>\n    </table >;\n}","import { useTheme } from '@material-ui/core';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport UserSettings from '../../../user_settings';\nimport './TimeTracker.scss';\n\ninterface TimeTrackerProps {\n    hours: boolean[];\n    time: Date;\n    settings: UserSettings;\n}\n\nexport default function TimeTracker(props: TimeTrackerProps) {\n    const theme = useTheme();\n    const { t, i18n } = useTranslation('core');\n    let now = props.time;\n    let progress = (\n        (\n            (\n                now.getMilliseconds() / 1000\n                + now.getSeconds()\n            ) / 60\n            + now.getMinutes()\n        ) / 60\n        + now.getHours()\n    ) * 100 / 24;\n    return <div\n        className=\"time-tracker\"\n        style={{\n            marginBottom: props.settings.useTwelveHourTime ? 64 : 40,\n        }}\n    >\n        <div\n            className=\"now\"\n            style={{\n                backgroundColor: theme.palette.error.main,\n                '--progress': `${progress}%`,\n            }}\n        />\n        <div>\n            <div className=\"large-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n            <div className=\"division-label\">\n                {\n                    t(\n                        props.settings.useTwelveHourTime\n                            ? 'core:time.twelve_hour.am'\n                            : 'core:time.twenty_four_hour',\n                        {\n                            pad: '',\n                            h12: 12,\n                            h24: 0,\n                            m: '00',\n                        }\n                    )\n                }\n            </div>\n        </div>\n        <div className=\"hour\" style={{ backgroundColor: props.hours[0] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[1] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[2] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[3] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[4] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[5] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div>\n            <div className=\"medium-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n            <div className=\"division-label\">\n                {\n                    t(\n                        props.settings.useTwelveHourTime\n                            ? 'core:time.twelve_hour.am'\n                            : 'core:time.twenty_four_hour',\n                        {\n                            pad: '0',\n                            h12: 6,\n                            h24: 6,\n                            m: '00',\n                        }\n                    )\n                }\n            </div>\n        </div>\n        <div className=\"hour\" style={{ backgroundColor: props.hours[6] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[7] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[8] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[9] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[10] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[11] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div>\n            <div className=\"large-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n            <div className=\"division-label\">\n                {\n                    t(\n                        props.settings.useTwelveHourTime\n                            ? 'core:time.twelve_hour.pm'\n                            : 'core:time.twenty_four_hour',\n                        {\n                            pad: '',\n                            h12: 12,\n                            h24: 12,\n                            m: '00',\n                        }\n                    )\n                }\n            </div>\n        </div>\n        <div className=\"hour\" style={{ backgroundColor: props.hours[12] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[13] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[14] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[15] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[16] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[17] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div>\n            <div className=\"medium-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n            <div className=\"division-label\">\n                {\n                    t(\n                        props.settings.useTwelveHourTime\n                            ? 'core:time.twelve_hour.pm'\n                            : 'core:time.twenty_four_hour',\n                        {\n                            pad: '',\n                            h12: 6,\n                            h24: 18,\n                            m: '00',\n                        }\n                    )\n                }\n            </div>\n        </div>\n        <div className=\"hour\" style={{ backgroundColor: props.hours[18] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[19] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[20] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[21] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[22] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[23] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div>\n            <div className=\"large-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n            <div className=\"division-label\">\n                {\n                    t(\n                        props.settings.useTwelveHourTime\n                            ? 'core:time.twelve_hour.am'\n                            : 'core:time.twenty_four_hour',\n                        {\n                            pad: '0',\n                            h12: 12,\n                            h24: 0,\n                            m: '00',\n                        }\n                    )\n                }\n            </div>\n        </div>\n    </div>\n}","import { Card, CardActionArea, CardContent, Checkbox, createStyles, Dialog, DialogActions, DialogContent, DialogTitle, Divider, FormControlLabel, IconButton, makeStyles, Toolbar, useTheme } from \"@material-ui/core\";\nimport { ChevronLeft, ChevronRight, Cloud, Help, Warning, WbSunny } from \"@material-ui/icons\";\nimport React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport '../../../prototype_mods';\nimport UserSettings from '../../../user_settings';\nimport { getCritterLocation, getCritterName, getCritterQuote } from '../data';\nimport { bugs, fish } from '../data.json';\nimport SearchParameters from \"../search_parameters\";\nimport './CritterPanel.scss';\nimport MonthPanels from \"./MonthPanels\";\nimport TimeTracker from \"./TimeTracker\";\n\nconst useStyles = makeStyles((theme) => createStyles({\n    modelled: {\n        color: theme.palette.modelled.main,\n        '&.Mui-disabled': {\n            color: theme.palette.modelled.transparent,\n        },\n    },\n}))\n\ninterface CritterPanelProps {\n    data: (typeof bugs[0]) | (typeof fish[0]);\n    type: 'bug' | 'fish';\n    obtained: boolean;\n    modelled: boolean;\n    setObtained: (value: boolean) => void;\n    setModelled: (value: boolean) => void;\n    month: number;\n    hour: number;\n    searchParameters: SearchParameters;\n    openDialogue: number | null;\n    setOpenDialogue: (value: number | null) => void;\n    now: Date;\n    settings: UserSettings;\n}\nfunction CritterPanel(props: CritterPanelProps) {\n    const { t } = useTranslation('critterpedia');\n    const hours = (\n        props.settings.hemisphere == 'north' ?\n            props.data.hours :\n            [...props.data.hours.slice(6), ...props.data.hours.slice(0, 6)]\n    );\n    const theme = useTheme();\n    const activeNow = hours[props.month][props.hour];\n    const activeMonth = hours[props.month].reduce((a, b) => a || b);\n    const leavingSoon = activeMonth && !hours[(props.month + 1) % 12].reduce((a, b) => a || b);\n    const { palette } = useTheme();\n    const {\n        activeRequired,\n        location,\n        name,\n        price,\n        priceComparison,\n        size,\n        stateRequired,\n    } = props.searchParameters;\n    let shadow = '';\n    if (props.type == 'fish') {\n        shadow = t(`critterpedia:fish.size.${(props.data as typeof fish[0]).shadow}`);\n    }\n    let match = true;\n    if (activeRequired === 'now' && !activeNow) {\n        match = false;\n    } else if (activeRequired === 'month' && !activeMonth) {\n        match = false;\n    } else if (activeRequired === 'until_next' && !leavingSoon) {\n        match = false;\n    } else if (!getCritterLocation(props.data, props.type, t).includes(location.toLowerCase())) {\n        match = false;\n    } else if (!getCritterName(props.data, props.type, t).includes(name.toLowerCase())) {\n        match = false;\n    } else if (props.type == 'fish' && !shadow.includes(size.toLowerCase())) {\n        match = false;\n    } else if (stateRequired === 'unobtained' && props.obtained) {\n        match = false;\n    } else if (stateRequired === 'unmodelled' && props.modelled) {\n        match = false;\n    } else {\n        switch (priceComparison) {\n            case '>=':\n                if (props.data.price < price) {\n                    match = false;\n                }\n                break;\n            case '=':\n                if (props.data.price != price) {\n                    match = false;\n                }\n                break;\n            case '<=':\n                if (props.data.price > price) {\n                    match = false;\n                }\n                break;\n        }\n    }\n\n    return <>\n        <Card className=\"critter-panel\" title={\n            [\n                t(`critterpedia:panel.type.${props.type}`, { name: getCritterName(props.data, props.type, t).capitalise(), index: props.data.index + 1 }),\n                (activeMonth ? '' : t('critterpedia:panel.status.unavailable')),\n                (activeNow ? t('critterpedia:panel.status.now') : ''),\n                (props.modelled ? t('critterpedia:panel.status.modelled') : ''),\n                t('critterpedia:panel.status.details'),\n            ].filter((elem) => !!elem).join('\\n')\n        }\n            style={\n                {\n                    backgroundColor: props.modelled\n                        ? palette.modelled.transparent\n                        : (\n                            props.obtained\n                                ? palette.primary.transparent\n                                : (\n                                    activeMonth\n                                        ? undefined\n                                        : palette.error.transparent\n                                )\n                        ),\n                    borderColor: props.modelled\n                        ? palette.modelled.main\n                        : (\n                            activeMonth\n                                ? (\n                                    props.obtained\n                                        ? palette.primary.main\n                                        : undefined\n                                )\n                                : palette.error.main\n                        ),\n                    opacity: match ? 1 : theme.palette.opacity,\n                }\n            }\n        >\n            <CardActionArea onClick={() => props.setOpenDialogue(props.data.index)}>\n                {\n                    leavingSoon\n                        ? <Warning style={{\n                            color: props.modelled\n                                ? palette.modelled.main\n                                : palette.error.main,\n                        }} />\n                        : <Help style={{\n                            color: props.modelled\n                                ? palette.modelled.main\n                                : (\n                                    activeMonth\n                                        ? (\n                                            props.obtained\n                                                ? palette.primary.main\n                                                : undefined\n                                        )\n                                        : palette.error.main\n                                ),\n                        }} />\n                }\n                <img src={\n                    `assets/${props.type}/${props.data.index.toString().padStart(2, '0')\n                    }.png`\n                } />\n            </CardActionArea>\n        </Card>\n        <Dialog\n            open={props.openDialogue == props.data.index}\n            onClose={() => props.setOpenDialogue(null)}\n            scroll=\"body\"\n            PaperProps={{\n                style: {\n                    borderColor: props.modelled\n                        ? palette.modelled.main\n                        : (\n                            props.obtained\n                                ? palette.primary.main\n                                : 'transparent'\n                        ),\n                    borderWidth: 1,\n                    borderStyle: 'solid',\n                    width: \"75%\",\n                    transition: 'color 0.5s ease-in-out, border-color 0.5s ease-in-out',\n                }\n            }}\n        >\n            <DialogTitle style={{\n                paddingBottom: 0,\n            }}\n            >\n                <Toolbar>\n                    {\n                        props.data.index > 0\n                            ? <IconButton edge=\"start\" onClick={() => props.setOpenDialogue(props.data.index - 1)}>\n                                {theme.direction == 'ltr' ? <ChevronLeft /> : <ChevronRight />}\n                            </IconButton>\n                            : <IconButton disabled />\n                    }\n                    <div style={{\n                        textAlign: 'center',\n                        color: props.modelled\n                            ? palette.modelled.main\n                            : (\n                                props.obtained\n                                    ? palette.primary.main\n                                    : undefined\n                            ),\n                        flexGrow: 1,\n                        transition: 'color 0.5s ease-in-out',\n                    }}>\n                        {getCritterName(props.data, props.type, t).capitalise()}\n                    </div>\n                    {\n                        props.data.index < 79\n                            ? <IconButton edge=\"end\" onClick={() => props.setOpenDialogue(props.data.index + 1)}>\n                                {theme.direction == 'ltr' ? <ChevronRight /> : <ChevronLeft />}\n                            </IconButton>\n                            : <IconButton disabled />\n                    }\n                </Toolbar>\n            </DialogTitle>\n            <DialogContent\n                style={{\n                    textAlign: 'center'\n                }}\n            >\n                {t(`critterpedia:dialogue.type.${props.type}`, { index: props.data.index + 1 })}\n                <br />\n                <Divider style={{ marginTop: 8, marginBottom: 8 }} />\n                <div\n                    style={{ paddingBottom: 8 }}\n                    dangerouslySetInnerHTML={{\n                        __html: getCritterQuote(\n                            props.data,\n                            props.type,\n                            props.settings.playerName,\n                            t\n                        )\n                    }}\n                />\n                <MonthPanels\n                    months={hours.map(\n                        (month) => month.reduce((a, b) => a || b)\n                    )}\n                    activeMonth={props.month}\n                    settings={props.settings}\n                />\n                <TimeTracker\n                    hours={hours[props.now.getMonth()]}\n                    time={props.now}\n                    settings={props.settings}\n                />\n                <Card variant=\"outlined\">\n                    <CardContent>\n                        <div className=\"critter-overview\">\n                            <img\n                                src={\n                                    `assets/${props.type}/${props.data.index.toString().padStart(2, '0')\n                                    }.png`\n                                }\n                                className=\"critter-icon\"\n                            />\n                            {props.data.dry && <div\n                                title={t('critterpedia:dialogue.details.dry')}\n                            >\n                                <WbSunny\n                                    className=\"critter-dry\"\n                                    style={{\n                                        color: theme.palette.summer.main\n                                    }}\n                                />\n                            </div>}\n                            {props.data.rain && <div\n                                title={t('critterpedia:dialogue.details.wet')}\n                            >\n                                <Cloud\n                                    className=\"critter-wet\"\n                                    style={{\n                                        color: theme.palette.winter.main\n                                    }}\n                                />\n                            </div>}\n                            <div className=\"location-label\">Found:</div>\n                            <div className=\"price-label\">Sells for:</div>\n                            <div className=\"location\">{getCritterLocation(props.data, props.type, t)}</div>\n                            <div className=\"price\">{props.data.price}</div>\n                        </div>\n                    </CardContent>\n                </Card>\n            </DialogContent>\n            <DialogActions>\n                <FormControlLabel\n                    control={\n                        <Checkbox\n                            checked={props.obtained}\n                            onChange={(event) => props.setObtained(event.target.checked)}\n                            color=\"primary\"\n                        />\n                    }\n                    label={t('critterpedia:dialogue.obtained')}\n                />\n                <FormControlLabel\n                    control={\n                        <Checkbox\n                            className={useStyles(theme).modelled}\n                            checked={props.modelled}\n                            disabled={!props.obtained}\n                            onChange={(event) => props.setModelled(event.target.checked)}\n                            color=\"default\"\n                        />\n                    }\n                    label={t('critterpedia:dialogue.modelled')}\n                />\n            </DialogActions>\n        </Dialog>\n    </>;\n}\nexport default CritterPanel;","import { Card, CardContent, CardHeader, FormControl, Grid, InputLabel, MenuItem, Select, TextField, useTheme } from '@material-ui/core';\nimport React from 'react';\nimport { Trans, useTranslation } from 'react-i18next';\nimport UserSettings from '../../user_settings';\nimport CritterPanel from './components/CritterPanel';\nimport { getCritterName } from './data';\nimport { bugs, fish } from './data.json';\nimport SearchParameters from './search_parameters';\n\nfunction range(stop: number) {\n    return Array.from(Array(stop).keys());\n}\n\ninterface UserCritterData {\n    obtained: boolean;\n    modelled: boolean;\n}\n\ninterface UserCritterpediaData {\n    bugs: UserCritterData[];\n    fish: UserCritterData[];\n}\n\ninterface CritterpediaProps {\n    settings: UserSettings;\n    time: Date;\n    params: URLSearchParams;\n    setParams: (route: URLSearchParams) => void;\n}\n\nexport default function Critterpedia(props: CritterpediaProps) {\n    const { t } = useTranslation('critterpedia');\n    const { settings, time, params, setParams } = props;\n    const theme = useTheme();\n    if (!window.localStorage.critterpedia) {\n        let data: UserCritterpediaData = {\n            bugs: [],\n            fish: [],\n        };\n        for (let i = 0; i < 80; i++) {\n            data.bugs.push({ obtained: false, modelled: false });\n            data.fish.push({ obtained: false, modelled: false });\n        }\n        window.localStorage.critterpedia = JSON.stringify(data);\n    }\n    const data: UserCritterpediaData = JSON.parse(window.localStorage.critterpedia);\n    const [activeRequired, setActiveRequired] = React.useState<'now' | 'month' | 'until_next' | 'any'>('any');\n    const [location, setLocation] = React.useState('');\n    const [name, setName] = React.useState('');\n    const [price, setPrice] = React.useState(0);\n    const [priceComparison, setPriceComparison] = React.useState<'>=' | '=' | '<='>('>=');\n    const [size, setSize] = React.useState('');\n    const [stateRequired, setStateRequired] = React.useState<'unobtained' | 'unmodelled' | 'any'>('any');\n    const searchParameters: SearchParameters = {\n        activeRequired,\n        location,\n        name,\n        price,\n        priceComparison,\n        size,\n        stateRequired,\n    };\n    const [bugsData, setBugsDataImpl] = React.useState(data.bugs);\n    const [fishData, setFishDataImpl] = React.useState(data.fish);\n    const [openDialogue, setOpenDialogueImpl] = React.useState<number | null>(null);\n    const [openDialogueType, setOpenDialogueType] = React.useState<'bug' | 'fish'>('bug');\n    function setOpenDialogue(value: number | null) {\n        if (value !== null) {\n            let title = getCritterName(\n                (\n                    openDialogueType === 'bug'\n                        ? bugs\n                        : fish\n                )[value],\n                openDialogueType,\n                t\n            ).capitalise();\n            document.title = t('critterpedia:title.info', { name: title });\n            window.history.pushState(null, t('critterpedia:title.info', { name: title }));\n            setParams(new URLSearchParams({ 'type': openDialogueType, 'index': value.toString() }));\n        } else {\n            document.title = t('critterpedia:title.default');\n            window.history.pushState(null, t('critterpedia:title.default'));\n            setParams(new URLSearchParams());\n        }\n        setOpenDialogueImpl(value);\n    }\n    try {\n        if (!params.has('type')) {\n            throw new Error();\n        }\n        if (!params.has('index')) {\n            throw new Error();\n        }\n        const type: 'bug' | 'fish' = params.get('type') as 'bug' | 'fish';\n        const index: number = +params.get('index')!;\n        if (type === 'bug' || type == 'fish') {\n            if ((0 <= index && index < 80)\n                && (type !== openDialogueType || index !== openDialogue)) {\n                setOpenDialogueType(type);\n                setOpenDialogueImpl(index);\n                let title = getCritterName(\n                    (\n                        type === 'bug'\n                            ? bugs\n                            : fish\n                    )[index],\n                    type,\n                    t\n                ).capitalise();\n                document.title = t('critterpedia:title.info', { name: title });\n            }\n        }\n    } catch {\n        props.setParams(new URLSearchParams({}));\n    }\n\n    function setBugsData(bug: number, state: UserCritterData) {\n        data.bugs[bug] = state;\n        window.localStorage.critterpedia = JSON.stringify(data);\n        setBugsDataImpl(data.bugs);\n    }\n    function setFishData(fish: number, state: UserCritterData) {\n        data.fish[fish] = state;\n        window.localStorage.critterpedia = JSON.stringify(data);\n        setFishDataImpl(data.fish);\n    }\n    const now = new Date();\n    return <div style={{ maxWidth: 1316, margin: 'auto' }}>\n        <Card style={{ margin: 16 }}>\n            <CardHeader title={t('critterpedia:search.title')} />\n            <CardContent>\n                <Grid container spacing={1}>\n                    <Grid item xs={12} sm={6} md={4} >\n                        <TextField fullWidth value={name} onChange={(event) => setName(event.target.value)} label={t('critterpedia:search.name')} />\n                    </Grid>\n                    <Grid item xs={12} sm={6} md={4} >\n                        <TextField fullWidth value={location} onChange={(event) => setLocation(event.target.value)} label={t('critterpedia:search.location')} />\n                    </Grid>\n                    <Grid item xs={12} sm={6} md={4} >\n                        <TextField fullWidth value={size} onChange={(event) => setSize(event.target.value)} label={t('critterpedia:search.shadow')} />\n                    </Grid>\n                    <Grid item xs={4} sm={2} md={2} >\n                        {/* display:flex;justify-content:center;align-items:center; */}\n                        <div style={{\n                            display: 'flex',\n                            justifyContent: 'center',\n                            alignItems: 'center',\n                            height: '100%',\n                        }}>\n                            {t('critterpedia:search.price.label')}\n                        </div>\n                    </Grid>\n                    <Grid item xs={4} sm={2} md={1} >\n                        <FormControl fullWidth>\n                            <InputLabel id=\"comp-label\">{t('critterpedia:search.price.comp')}</InputLabel>\n                            <Select\n                                value={priceComparison}\n                                onChange={(event) => setPriceComparison(\n                                    event.target.value as ('>=' | '=' | '<=')\n                                )}\n                                labelId='comp-label'\n                                fullWidth\n                            >\n                                <MenuItem value=\">=\">≥</MenuItem>\n                                <MenuItem value=\"=\">=</MenuItem>\n                                <MenuItem value=\"<=\">≤</MenuItem>\n                            </Select>\n                        </FormControl>\n                    </Grid>\n                    <Grid item xs={4} sm={2} md={1} >\n                        <TextField fullWidth value={price} onChange={(event) => setPrice(+event.target.value)} label={t('critterpedia:search.price.value')} />\n                    </Grid>\n                    <Grid item xs={12} sm={6} md={4} >\n                        <FormControl fullWidth>\n                            <InputLabel id=\"active-label\">{t('critterpedia:search.active.title')}</InputLabel>\n                            <Select\n                                value={activeRequired}\n                                onChange={(event) => setActiveRequired(\n                                    event.target.value as ('now' | 'month' | 'until_next' | 'any')\n                                )}\n                                labelId='active-label'\n                                fullWidth\n                            >\n                                <MenuItem value=\"any\">{t('critterpedia:search.active.any')}</MenuItem>\n                                <MenuItem value=\"month\">{t('critterpedia:search.active.month')}</MenuItem>\n                                <MenuItem value=\"now\">{t('critterpedia:search.active.now')}</MenuItem>\n                                <MenuItem value=\"until_next\">{t('critterpedia:search.active.until_next')}</MenuItem>\n                            </Select>\n                        </FormControl>\n                    </Grid>\n                    <Grid item xs={12} sm={6} md={4} >\n                        <FormControl fullWidth>\n                            <InputLabel id=\"state-label\">{t('critterpedia:search.state.title')}</InputLabel>\n                            <Select\n                                value={stateRequired}\n                                onChange={(event) => setStateRequired(\n                                    event.target.value as ('any' | 'unobtained' | 'unmodelled')\n                                )}\n                                labelId='state-label'\n                                fullWidth\n                            >\n                                <MenuItem value=\"any\">{t('critterpedia:search.state.any')}</MenuItem>\n                                <MenuItem value=\"unobtained\">{t('critterpedia:search.state.unobtained')}</MenuItem>\n                                <MenuItem value=\"unmodelled\">{t('critterpedia:search.state.unmodelled')}</MenuItem>\n                            </Select>\n                        </FormControl>\n                    </Grid>\n                </Grid>\n            </CardContent>\n        </Card>\n        <Card style={{ margin: 16 }}>\n            <CardHeader title={\n                <Trans i18nKey=\"critterpedia:cards.bugs\" t={t}>\n                    Bugs <span style={{ color: theme.palette.primary.main }}>\n                        ({\n                            {\n                                obtained: bugsData.reduce(\n                                    (total, bug) => total + (+bug.obtained), 0),\n                            }\n                        } / 80)\n                    </span> <span style={{ color: theme.palette.modelled.main }}>\n                        ({\n                            {\n                                modelled: bugsData.reduce(\n                                    (total, bug) => total + (+bug.modelled), 0),\n                            }\n                        } / 80)\n                    </span>\n                </Trans>\n            } />\n            <CardContent style={{ overflowX: 'auto' }}>\n                <table style={{ paddingRight: 16 }}>\n                    <tbody>\n                        {\n                            range(5).map(\n                                (y) =>\n                                    <tr>\n                                        {\n                                            range(16).map(\n                                                (x) => {\n                                                    const bugData = bugsData[x * 5 + y];\n                                                    return <td key={x}>\n                                                        <CritterPanel\n                                                            data={bugs[x * 5 + y]}\n                                                            obtained={bugData.obtained}\n                                                            modelled={bugData.modelled}\n                                                            type=\"bug\"\n                                                            setObtained={(value: boolean) => setBugsData(x * 5 + y, { obtained: value, modelled: false })}\n                                                            setModelled={(value: boolean) => setBugsData(x * 5 + y, { obtained: true, modelled: value })}\n                                                            month={now.getMonth()}\n                                                            hour={now.getHours()}\n                                                            openDialogue={openDialogueType === 'bug' ? openDialogue : null}\n                                                            setOpenDialogue={(value: number | null) => {\n                                                                setOpenDialogueType('bug');\n                                                                setOpenDialogue(value);\n                                                            }}\n                                                            searchParameters={searchParameters}\n                                                            settings={settings}\n                                                            now={time}\n                                                        />\n                                                    </td>;\n                                                }\n                                            )\n                                        }\n                                    </tr>\n                            )\n                        }\n                    </tbody>\n                </table>\n            </CardContent>\n        </Card>\n        <Card style={{ margin: 16 }}>\n            <CardHeader title={\n                <Trans i18nKey=\"critterpedia:cards.fish\" t={t}>\n                    Fish <span style={{ color: theme.palette.primary.main }}>\n                        ({\n                            {\n                                obtained: fishData.reduce(\n                                    (total, fish) => total + (+fish.obtained), 0),\n                            }\n                        } / 80)\n                        </span> <span style={{ color: theme.palette.modelled.main }}>\n                        ({\n                            {\n                                modelled: fishData.reduce(\n                                    (total, fish) => total + (+fish.modelled), 0),\n                            }\n                        } / 80)\n                        </span>\n                </Trans>\n            } />\n            <CardContent style={{ overflowX: 'auto' }}>\n                <table style={{ paddingRight: 16 }}>\n                    <tbody>\n                        {\n                            range(5).map(\n                                (y) =>\n                                    <tr>\n                                        {\n                                            range(16).map(\n                                                (x) => {\n                                                    const bugData = fishData[x * 5 + y];\n                                                    return <td key={x}>\n                                                        <CritterPanel\n                                                            data={fish[x * 5 + y]}\n                                                            obtained={bugData.obtained}\n                                                            modelled={bugData.modelled}\n                                                            type=\"fish\"\n                                                            setObtained={(value: boolean) => setFishData(x * 5 + y, { obtained: value, modelled: false })}\n                                                            setModelled={(value: boolean) => setFishData(x * 5 + y, { obtained: true, modelled: value })}\n                                                            month={now.getMonth()}\n                                                            hour={now.getHours()}\n                                                            openDialogue={openDialogueType === 'fish' ? openDialogue : null}\n                                                            setOpenDialogue={(value: number | null) => {\n                                                                setOpenDialogueType('fish');\n                                                                setOpenDialogue(value);\n                                                            }}\n                                                            searchParameters={searchParameters}\n                                                            settings={settings}\n                                                            now={time}\n                                                        />\n                                                    </td>;\n                                                }\n                                            )\n                                        }\n                                    </tr>\n                            )\n                        }\n                    </tbody>\n                </table>\n            </CardContent>\n        </Card>\n    </div>\n}","import { ComponentsProps } from \"@material-ui/core/styles/props\";\n\nconst commonProps: ComponentsProps = {\n    MuiTextField: {\n        variant: 'filled',\n    },\n    MuiSelect: {\n        variant: 'filled',\n    },\n    MuiFormControl: {\n        variant: 'filled',\n    },\n};\nexport { commonProps };\n","import { createMuiTheme } from '@material-ui/core/styles';\nimport { commonProps } from './common_theme_data';\nimport './prototype_mods';\n\n\n// Dark theme\nconst theme = createMuiTheme({\n    palette: {\n        type: 'dark',\n        opacity: 0.3,\n        elevations: {\n            0: { main: '#1e1e1e' },\n            1: { main: '#292929' },\n            2: { main: '#2e2e2e' },\n            3: { main: '#303030' },\n            4: { main: '#323232' },\n            6: { main: '#373737' },\n            8: { main: '#393939' },\n            12: { main: '#3e3e3e' },\n            16: { main: '#404040' },\n            24: { main: '#424242' },\n        },\n        modelled: {\n            main: 'gold',\n            transparent: 'rgba(255, 215, 0, 0.3)',\n        },\n        winter: {\n            main: '#3c84c6',\n            transparent: 'rgba(60, 132, 198, 0.3)',\n            contrastText: 'rgba(0,0,0,87%)'\n        },\n        spring: {\n            main: '#38761c',\n            transparent: 'rgba(56, 118, 28, 0.3)',\n            contrastText: 'rgba(0,0,0,87%)'\n        },\n        summer: {\n            main: '#e69038',\n            transparent: 'rgba(230, 144, 56, 0.3)',\n            contrastText: 'rgba(0,0,0,87%)'\n        },\n        autumn: {\n            main: '#b45f04',\n            transparent: 'rgba(180, 95, 4, 0.3)',\n            contrastText: 'rgba(0,0,0,87%)'\n        },\n        primary: {\n            main: '#bb86fc',\n            dark: '#3700b3',\n            contrastText: 'rgba(0,0,0,87%)',\n            transparent: 'rgba(187, 134, 252, 0.3)',\n        },\n        secondary: {\n            main: '#03dac6',\n            dark: '#03dac6',\n            contrastText: 'rgba(0,0,0,87%)',\n        },\n        error: {\n            main: '#cf6679',\n            transparent: 'rgba(207, 102, 121, 0.3)',\n        },\n        background: {\n            paper: '#1e1e1e',\n            default: '#121212'\n        },\n        text: {\n            primary: 'rgba(255,255,255,87%)',\n            secondary: 'rgba(255,255,255,60%)',\n            hint: 'rgba(255,255,255,60%)',\n            disabled: 'rgba(255,255,255,38%)',\n        }\n    },\n    zIndex: {\n        appBar: 1250\n    },\n    props: commonProps,\n});\n\ntheme.overrides = {\n    MuiAppBar: {\n        colorPrimary: {\n            backgroundColor: theme.palette.background.paper,\n            color: theme.palette.primary.main,\n        },\n        colorSecondary: {\n            backgroundColor: theme.palette.background.paper,\n            color: theme.palette.secondary.main,\n        },\n        colorDefault: {\n            backgroundColor: theme.palette.background.paper,\n            color: theme.palette.text.primary,\n        }\n    },\n    MuiDrawer: {\n        paper: {\n            width: 240\n        }\n    },\n    MuiCard: {\n        root: {\n            borderWidth: 1,\n            borderColor: 'rgba(255, 255, 255, 8%)',\n            borderStyle: 'solid',\n        },\n    },\n    MuiCardHeader: {\n        root: {\n            paddingBottom: 0,\n            textAlign: 'center',\n        },\n    },\n    MuiListItemIcon: {\n        root: {\n            color: theme.palette.text.secondary,\n        }\n    }\n};\n\nexport default theme;","import { createMuiTheme } from '@material-ui/core/styles';\nimport { commonProps } from './common_theme_data';\nimport './prototype_mods';\n\n// Normal or default theme\nconst theme = createMuiTheme({\n    palette: {\n        type: 'light',\n        opacity: 0.6,\n        elevations: {\n            0: { main: '#ffffff' },\n            1: { main: '#ffffff' },\n            2: { main: '#ffffff' },\n            3: { main: '#ffffff' },\n            4: { main: '#ffffff' },\n            6: { main: '#ffffff' },\n            8: { main: '#ffffff' },\n            12: { main: '#ffffff' },\n            16: { main: '#ffffff' },\n            24: { main: '#ffffff' },\n        },\n        modelled: {\n            main: '#fbc02d',\n            transparent: 'rgba(251, 192, 45, 0.5)',\n        },\n        winter: {\n            main: '#3c84c6',\n            transparent: 'rgba(60, 132, 198, 0.6)',\n            contrastText: 'rgba(0,0,0,87%)',\n        },\n        spring: {\n            main: '#38761c',\n            transparent: 'rgba(56, 118, 28, 0.6)',\n            contrastText: 'rgba(0,0,0,87%)',\n        },\n        summer: {\n            main: '#e69038',\n            transparent: 'rgba(230, 144, 56, 0.6)',\n            contrastText: 'rgba(0,0,0,87%)',\n        },\n        autumn: {\n            main: '#b45f04',\n            transparent: 'rgba(180, 95, 4, 0.6)',\n            contrastText: 'rgba(0,0,0,87%)',\n        },\n        primary: {\n            main: '#6200ee',\n            dark: '#3700b3',\n            contrastText: 'rgba(255,255,255,87%)',\n            transparent: 'rgba(98, 0, 238, 0.5)',\n        },\n        secondary: {\n            main: '#03dac6',\n            dark: '#018786',\n            contrastText: 'rgba(0,0,0,87%)',\n        },\n        error: {\n            main: '#b00020',\n            transparent: 'rgba(176, 0, 32, 0.5)',\n        },\n        background: {\n            paper: '#ffffff',\n            default: '#eeeeee'\n        },\n        text: {\n            primary: 'rgba(0,0,0,87%)',\n            secondary: 'rgba(0,0,0,60%)',\n            hint: 'rgba(0,0,0,60%)',\n            disabled: 'rgba(0,0,0,38%)',\n        }\n    },\n    zIndex: {\n        appBar: 1250\n    },\n    props: commonProps,\n});\n\ntheme.overrides = {\n    MuiDrawer: {\n        paper: {\n            width: 240\n        }\n    },\n    MuiCard: {\n        root: {\n            borderWidth: 1,\n            borderColor: 'transparent',\n            borderStyle: 'solid',\n        },\n    },\n    MuiCardHeader: {\n        root: {\n            paddingBottom: 0,\n            textAlign: 'center',\n        },\n    },\n};\n\nexport default theme;","import dark from './dark';\nimport light from './light';\n\nconst themes = {\n    light,\n    dark,\n}\n\nexport default function getTheme(theme: \"light\" | \"dark\") {\n    return themes[theme];\n}","import { CssBaseline, List, ListItem, ListItemIcon, ListItemText, ThemeProvider, Typography, useMediaQuery, useTheme } from '@material-ui/core';\nimport { EmojiNature } from '@material-ui/icons';\nimport React, { Suspense } from 'react';\nimport ReactDOM from 'react-dom';\nimport { useTranslation } from 'react-i18next';\nimport { homepage } from '../package.json';\nimport AppBar from './components/AppBar';\nimport NavigationDrawer from './components/NavigationDrawer';\nimport './i18n';\nimport './index.scss';\nimport { Dict } from './misc';\nimport Critterpedia from './pages/critterpedia';\nimport getTheme from './themes';\nimport UserSettings from './user_settings';\n\nconst baseUrl = process.env.NODE_ENV === 'production' ? homepage : 'http://localhost:3000/nookdata_v2';\nconst root = '/nookdata_v2';\n\ninterface PageData {\n    title: string;\n    icon: React.ReactNode;\n}\nconst pageData: Dict<PageData> = {\n    '/critterpedia': {\n        title: 'core:pages.critterpedia',\n        icon: <EmojiNature />,\n    },\n    // '/': {\n    //     title: 'Home',\n    //     icon: <EmojiNature />,\n    // },\n}\n\n\ninterface DrawerAdjustProps {\n    active: boolean,\n    children: React.ReactNode;\n}\nfunction DrawerAdjust(props: DrawerAdjustProps) {\n    const theme = useTheme();\n    const matches = useMediaQuery(theme.breakpoints.up('sm'));\n    return (\n        <div style={{ paddingLeft: 240 * (+props.active) * (+matches), transition: 'padding-left 195ms cubic-bezier(0.4, 0, 0.6, 1) 0ms' }}>\n            {props.children}\n        </div>\n    )\n}\ninterface AppFrameProps {\n    setTheme: (value: \"dark\" | \"light\") => void;\n    theme: \"dark\" | \"light\";\n    setPage: (value: string) => void;\n    page: string;\n    children: React.ReactNode;\n}\nfunction AppFrame(props: AppFrameProps) {\n    const theme = useTheme();\n    const startOpen = useMediaQuery(theme.breakpoints.up('lg'));\n    const [initialRender, setInitialRender] = React.useState(true);\n    const [drawerOpen, setDrawerOpen] = React.useState(false);\n    if (startOpen && initialRender) {\n        setDrawerOpen(true);\n        setInitialRender(false);\n    }\n    const { t } = useTranslation('core');\n    return (\n        <>\n            <AppBar setTheme={props.setTheme} setDrawerOpen={setDrawerOpen} theme={props.theme} drawerOpen={drawerOpen} title={\n                <Typography variant=\"h6\">\n                    <div\n                        style={{\n                            color: theme.palette.winter.main,\n                            display: 'inline'\n                        }}>{t('title.a')}</div>\n                    <div\n                        style={{\n                            color: theme.palette.summer.main,\n                            display: 'inline'\n                        }}>{t('title.b')}</div>\n                </Typography>\n            } />\n            <NavigationDrawer open={drawerOpen} setOpen={setDrawerOpen}>\n                <List>\n                    {Object.entries(pageData).map(([route, data]) => (\n                        <ListItem selected={props.page === route} button onClick={() => props.setPage(route)}>\n                            <ListItemIcon>{data.icon}</ListItemIcon>\n                            <ListItemText primary={t(data.title)} />\n                        </ListItem>\n                    ))}\n                </List>\n            </NavigationDrawer>\n            <DrawerAdjust active={drawerOpen}>\n                {props.children}\n            </DrawerAdjust>\n        </>\n    )\n}\n\ninterface RouteProps {\n    page: string;\n    route: string;\n    children: React.ReactNode;\n}\nfunction Route(props: RouteProps) {\n    const { t } = useTranslation('core');\n    if (props.page.split('?')[0] !== props.route) {\n        return null;\n    }\n    document.title = t('core:title.browser.page', { pageTitle: t(pageData[props.route].title) });\n    return <>\n        {props.children}\n    </>;\n}\n\nlet timeUpdateId: number | undefined = undefined;\nconst sentinelDate = new Date();\n\nfunction Loading() {\n    // return <img\n    //     src=\"assets/shared/loading.gif\"\n    //     style={{ width: '20%', height: '20%', margin: '15% 40%', borderRadius: '50%' }}\n    // />;\n    return <div className=\"loader\"></div>\n}\n\nfunction App() {\n    const { t } = useTranslation('core');\n    const themeSetting: \"dark\" | \"light\" = window.localStorage.theme || 'dark';\n    const [chosenTheme, setChosenThemeImpl] = React.useState<'dark' | 'light'>(themeSetting);\n    function setChosenTheme(value: 'dark' | 'light') {\n        document.body.classList.add(\"no-transition\");\n        setTimeout(() => setChosenThemeImpl(value), 10);\n        setTimeout(() => document.body.classList.remove(\"no-transition\"), 20);\n    }\n    const hemisphereSetting: \"north\" | \"south\" = window.localStorage.hemisphere || 'north';\n    const [chosenHemisphere, setChosenHemisphere] = React.useState<'north' | 'south'>(hemisphereSetting);\n    const settings: UserSettings = {\n        theme: chosenTheme,\n        hemisphere: chosenHemisphere,\n        islandName: 'Gloverboia',\n        playerName: 'Starwort',\n        timeOffset: 0,\n        useSystemTime: true,\n        useTwelveHourTime: true,\n    }\n    const [time, setTime] = React.useState(sentinelDate);\n    if (timeUpdateId) {\n        window.clearInterval(timeUpdateId);\n    }\n    timeUpdateId = window.setInterval(() => setTime(new Date()), 500);\n    const [page, setPageImpl] = React.useState('/');\n    function setPage(route: string) {\n        window.history.pushState(null, t('core:title.browser.page', { pageTitle: t(pageData[route].title) }), baseUrl + route);\n        setPageImpl(route);\n    }\n    let url = new URL(window.location.href);\n    url.pathname = url.pathname.slice(root.length) || '/';\n    let route = url.pathname;\n    if (route !== page) {\n        setPageImpl(route);\n    }\n    const params = url.searchParams;\n    function setParams(newParams: URLSearchParams) {\n        params.delete('index');\n        for (let key of params.keys()) {\n            params.delete(key);\n        }\n        for (let [key, value] of newParams.entries()) {\n            params.append(key, value);\n        }\n        let urlTmp = new URL(url.href);\n        urlTmp.pathname = root + urlTmp.pathname;\n        window.history.replaceState(null, document.title, urlTmp.href);\n        // setParamsImpl(params);\n    }\n    const theme = React.useMemo(\n        () => getTheme(chosenTheme),\n        [chosenTheme]\n    );\n    return <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <AppFrame page={page} theme={chosenTheme} setTheme={setChosenTheme} setPage={setPage}>\n            <Suspense fallback={<Loading />}>\n                <Route page={page} route=\"/critterpedia\">\n                    <Critterpedia time={time} settings={settings} params={params} setParams={setParams} />\n                </Route>\n                {/* <Route page={page} route=\"/\">\n                    <Loading />\n                </Route> */}\n            </Suspense>\n        </AppFrame>\n    </ThemeProvider>\n}\n\nReactDOM.render(\n    <Suspense fallback={<Loading />}>\n        <App />\n    </Suspense>,\n    document.getElementById('root')\n);\nexport { };\n"],"sourceRoot":""}