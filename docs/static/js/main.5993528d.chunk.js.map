{"version":3,"sources":["components/AppBar.tsx","components/NavigationDrawer.tsx","prototype_mods.ts","pages/critterpedia/components/MonthPanels.tsx","pages/critterpedia/components/TimeTracker.tsx","pages/critterpedia/components/CritterPanel.tsx","pages/critterpedia/index.tsx","common_theme_data.ts","dark.tsx","light.tsx","themes.tsx","index.tsx"],"names":["AppBar","props","position","Toolbar","IconButton","edge","color","aria-label","style","marginRight","onClick","setDrawerOpen","drawerOpen","flexGrow","title","theme","window","localStorage","setTheme","NavigationDrawer","useTheme","container","undefined","document","body","Hidden","smUp","Drawer","variant","anchor","direction","open","onClose","setOpen","children","xsDown","String","prototype","capitalise","this","charAt","toUpperCase","slice","months","winter","settings","hemisphere","palette","summer","spring","autumn","seasons","MonthPanel","width","Card","backgroundColor","month","main","opacity","contrastText","borderColor","active","error","borderWidth","borderStyle","margin","CardContent","paddingBottom","MonthPanels","activeMonth","TimeTracker","now","time","progress","getMilliseconds","getSeconds","getMinutes","getHours","className","marginBottom","useTwelveHourTime","text","primary","hours","modelled","useStyles","makeStyles","createStyles","transparent","CritterPanel","data","activeNow","hour","reduce","a","b","leavingSoon","searchParameters","activeRequired","location","name","price","priceComparison","size","stateRequired","shadow","type","match","includes","toLowerCase","obtained","index","CardActionArea","setOpenDialogue","Warning","Help","src","toString","padStart","Dialog","openDialogue","scroll","PaperProps","transition","DialogTitle","ChevronLeft","ChevronRight","disabled","textAlign","DialogContent","Divider","marginTop","dangerouslySetInnerHTML","__html","quote","replace","playerName","map","getMonth","dry","WbSunny","rain","Cloud","DialogActions","FormControlLabel","control","Checkbox","checked","onChange","event","setObtained","target","label","setModelled","bugs","fish","range","stop","Array","from","keys","Critterpedia","critterpedia","i","push","JSON","stringify","parse","React","useState","setActiveRequired","setLocation","setName","setPrice","setPriceComparison","setSize","setStateRequired","bugsData","setBugsDataImpl","fishData","setFishDataImpl","setOpenDialogueImpl","openDialogueType","setOpenDialogueType","value","history","pushState","setBugsData","bug","state","setFishData","Date","maxWidth","CardHeader","Grid","spacing","item","xs","sm","md","TextField","fullWidth","FormControl","InputLabel","id","Select","labelId","MenuItem","total","overflowX","paddingRight","y","x","bugData","commonProps","MuiTextField","MuiSelect","MuiFormControl","createMuiTheme","elevations","0","1","2","3","4","6","8","12","16","24","dark","secondary","background","paper","default","hint","zIndex","appBar","overrides","MuiAppBar","colorPrimary","colorSecondary","colorDefault","MuiDrawer","MuiCard","root","MuiCardHeader","MuiListItemIcon","themes","light","baseUrl","homepage","pageData","icon","EmojiNature","DrawerAdjust","matches","useMediaQuery","breakpoints","up","paddingLeft","AppFrame","startOpen","initialRender","setInitialRender","Typography","display","List","Object","entries","route","ListItem","selected","page","button","setPage","ListItemIcon","ListItemText","Route","console","log","timeUpdateId","sentinelDate","App","themeSetting","chosenTheme","setChosenThemeImpl","hemisphereSetting","chosenHemisphere","islandName","timeOffset","useSystemTime","setTime","clearInterval","setInterval","setPageImpl","href","length","useMemo","getTheme","ThemeProvider","CssBaseline","classList","add","setTimeout","remove","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.5993528d.chunk.js","sourcesContent":["import { AppBar as TopAppBar, IconButton, Toolbar } from '@material-ui/core';\nimport DarkModeIcon from '@material-ui/icons/Brightness4';\nimport LightModeIcon from '@material-ui/icons/Brightness7';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport React from 'react';\n\n\ninterface AppBarProps {\n    setTheme: (value: \"dark\" | \"light\") => void,\n    theme: 'dark' | 'light',\n    setDrawerOpen: (value: boolean) => void,\n    drawerOpen: boolean,\n    title: React.ReactNode,\n}\n\nfunction AppBar(props: AppBarProps) {\n    return (\n        <>\n            <TopAppBar position=\"fixed\">\n                <Toolbar>\n                    <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\"\n                        style={{ marginRight: 16 }}\n                        onClick={() => props.setDrawerOpen(!props.drawerOpen)}>\n                        <MenuIcon />\n                    </IconButton>\n                    <div style={{ flexGrow: 1 }}>\n                        {props.title}\n                    </div>\n                    {props.theme == 'light'\n                        ? <IconButton color=\"inherit\" onClick={\n                            () => {\n                                window.localStorage.theme = 'dark';\n                                props.setTheme('dark')\n                            }}><DarkModeIcon /></IconButton>\n                        : <IconButton color=\"inherit\" onClick={\n                            () => {\n                                window.localStorage.theme = 'light';\n                                props.setTheme('light')\n                            }}><LightModeIcon /></IconButton>}\n                </Toolbar>\n            </TopAppBar>\n            <Toolbar />\n        </>\n    )\n}\nexport default AppBar;\n","import { Drawer, Hidden, Toolbar, useTheme } from '@material-ui/core';\nimport React from 'react';\ninterface NavigationDrawerProps {\n    open: boolean;\n    setOpen: (value: boolean) => void;\n    children: React.ReactNode;\n}\n\n\nfunction NavigationDrawer(props: NavigationDrawerProps) {\n    const theme = useTheme();\n    const container = window !== undefined ? () => window.document.body : undefined;\n    return <>\n        <Hidden smUp>\n            <Drawer\n                variant=\"temporary\"\n                container={container}\n                anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n                open={props.open}\n                onClose={() => props.setOpen(false)}\n            >\n                {props.children}\n            </Drawer>\n        </Hidden>\n        <Hidden xsDown>\n            <Drawer\n                variant=\"persistent\"\n                anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n                open={props.open}\n            >\n                <Toolbar />\n                {props.children}\n            </Drawer>\n        </Hidden>\n    </>;\n}\nexport default NavigationDrawer;\n","declare global {\n    interface String {\n        capitalise: () => String;\n    }\n}\nString.prototype.capitalise = function () {\n    return this.charAt(0).toUpperCase() + this.slice(1);\n}\n\ndeclare module \"react\" {\n    interface CSSProperties {\n        '--progress'?: string | number;\n    }\n}\n\ndeclare module \"@material-ui/core/styles/createPalette\" {\n    interface ElevationColour {\n        0: { main: string };\n        1: { main: string };\n        2: { main: string };\n        3: { main: string };\n        4: { main: string };\n        6: { main: string };\n        8: { main: string };\n        12: { main: string };\n        16: { main: string };\n        24: { main: string };\n    }\n    interface PaletteColor {\n        transparent?: string;\n    }\n    interface SimplePaletteColorOptions {\n        transparent?: string;\n    }\n    interface Palette {\n        elevations: ElevationColour;\n        opacity: number;\n        modelled: Palette['primary'];\n        spring: Palette['primary'];\n        summer: Palette['primary'];\n        autumn: Palette['primary'];\n        winter: Palette['primary'];\n    }\n    interface PaletteOptions {\n        elevations: ElevationColour;\n        opacity: number;\n        modelled: PaletteOptions['primary'];\n        spring: PaletteOptions['primary'];\n        summer: PaletteOptions['primary'];\n        autumn: PaletteOptions['primary'];\n        winter: PaletteOptions['primary'];\n    }\n}\nexport { };\n","import { Card, CardContent, Theme, useTheme } from \"@material-ui/core\";\nimport React from \"react\";\nimport '../../../prototype_mods';\nimport UserSettings from '../../../user_settings';\nimport './CritterPanel.scss';\nconst months = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n];\nfunction winter(theme: Theme, settings: UserSettings) {\n    return (\n        settings.hemisphere === \"north\"\n            ? theme.palette.winter\n            : theme.palette.summer\n    );\n}\nfunction spring(theme: Theme, settings: UserSettings) {\n    return (\n        settings.hemisphere === \"north\"\n            ? theme.palette.spring\n            : theme.palette.autumn\n    );\n}\nfunction summer(theme: Theme, settings: UserSettings) {\n    return (\n        settings.hemisphere === \"north\"\n            ? theme.palette.summer\n            : theme.palette.winter\n    );\n}\nfunction autumn(theme: Theme, settings: UserSettings) {\n    return (\n        settings.hemisphere === \"north\"\n            ? theme.palette.autumn\n            : theme.palette.spring\n    );\n}\nconst seasons = [\n    winter,\n    winter,\n    spring,\n    spring,\n    spring,\n    summer,\n    summer,\n    summer,\n    autumn,\n    autumn,\n    autumn,\n    winter,\n];\n\ninterface MonthPanelProps {\n    months: boolean[];\n    month: number;\n    active: boolean;\n    settings: UserSettings;\n}\nfunction MonthPanel(props: MonthPanelProps) {\n    const theme = useTheme();\n    return <td width=\"33%\">\n        <Card\n            variant=\"outlined\"\n            style={{\n                // backgroundColor: ((colour) => (\n                //     props.months[props.month]\n                //         ? colour.main\n                //         : colour.transparent\n                // ))(\n                //     seasons[props.month](theme, props.settings)\n                // ),\n                backgroundColor: seasons[props.month](theme, props.settings).main,\n                opacity: props.months[props.month] ? undefined : theme.palette.opacity,\n                color: seasons[props.month](theme, props.settings).contrastText,\n                borderColor: props.active ? theme.palette.error.main : 'transparent',\n                borderWidth: 2,\n                borderStyle: 'solid',\n                margin: -1,\n            }}\n        >\n            <CardContent style={{ paddingBottom: 16 }}>\n                {months[props.month]}\n            </CardContent>\n        </Card>\n    </td>\n}\ninterface MonthPanelsProps {\n    months: boolean[];\n    activeMonth: number;\n    settings: UserSettings;\n}\nexport default function MonthPanels(props: MonthPanelsProps) {\n    return <table style={{ width: '100%' }}>\n        <tbody>\n            <tr>\n                <MonthPanel\n                    months={props.months}\n                    month={0}\n                    active={props.activeMonth == 0}\n                    settings={props.settings}\n                />\n                <MonthPanel\n                    months={props.months}\n                    month={1}\n                    active={props.activeMonth == 1}\n                    settings={props.settings}\n                />\n                <MonthPanel\n                    months={props.months}\n                    month={2}\n                    active={props.activeMonth == 2}\n                    settings={props.settings}\n                />\n            </tr>\n            <tr>\n                <MonthPanel\n                    months={props.months}\n                    month={3}\n                    active={props.activeMonth == 3}\n                    settings={props.settings}\n                />\n                <MonthPanel\n                    months={props.months}\n                    month={4}\n                    active={props.activeMonth == 4}\n                    settings={props.settings}\n                />\n                <MonthPanel\n                    months={props.months}\n                    month={5}\n                    active={props.activeMonth == 5}\n                    settings={props.settings}\n                />\n            </tr>\n            <tr>\n                <MonthPanel\n                    months={props.months}\n                    month={6}\n                    active={props.activeMonth == 6}\n                    settings={props.settings}\n                />\n                <MonthPanel\n                    months={props.months}\n                    month={7}\n                    active={props.activeMonth == 7}\n                    settings={props.settings}\n                />\n                <MonthPanel\n                    months={props.months}\n                    month={8}\n                    active={props.activeMonth == 8}\n                    settings={props.settings}\n                />\n            </tr>\n            <tr>\n                <MonthPanel\n                    months={props.months}\n                    month={9}\n                    active={props.activeMonth == 9}\n                    settings={props.settings}\n                />\n                <MonthPanel\n                    months={props.months}\n                    month={10}\n                    active={props.activeMonth == 10}\n                    settings={props.settings}\n                />\n                <MonthPanel\n                    months={props.months}\n                    month={11}\n                    active={props.activeMonth == 11}\n                    settings={props.settings}\n                />\n            </tr>\n        </tbody>\n    </table >;\n}","import { useTheme } from '@material-ui/core';\nimport React from 'react';\nimport UserSettings from '../../../user_settings';\nimport './TimeTracker.scss';\n\ninterface TimeTrackerProps {\n    hours: boolean[];\n    time: Date;\n    settings: UserSettings;\n}\n\nexport default function TimeTracker(props: TimeTrackerProps) {\n    const theme = useTheme();\n    let now = props.time;\n    let progress = (\n        (\n            (\n                now.getMilliseconds() / 1000\n                + now.getSeconds()\n            ) / 60\n            + now.getMinutes()\n        ) / 60\n        + now.getHours()\n    ) * 100 / 24;\n    return <div\n        className=\"time-tracker\"\n        style={{\n            marginBottom: props.settings.useTwelveHourTime ? 64 : 40,\n        }}\n    >\n        <div\n            className=\"now\"\n            style={{\n                backgroundColor: theme.palette.error.main,\n                '--progress': `${progress}%`,\n            }}\n        />\n        <div>\n            <div className=\"large-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n            <div className=\"division-label\">\n                {\n                    props.settings.useTwelveHourTime\n                        ? '12:00AM'\n                        : '00:00'\n                }\n            </div>\n        </div>\n        <div className=\"hour\" style={{ backgroundColor: props.hours[0] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[1] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[2] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[3] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[4] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[5] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div>\n            <div className=\"medium-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n            <div className=\"division-label\">\n                {\n                    props.settings.useTwelveHourTime\n                        ? '6:00AM'\n                        : '06:00'\n                }\n            </div>\n        </div>\n        <div className=\"hour\" style={{ backgroundColor: props.hours[6] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[7] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[8] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[9] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[10] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[11] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div>\n            <div className=\"large-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n            <div className=\"division-label\">\n                {\n                    props.settings.useTwelveHourTime\n                        ? '12:00PM'\n                        : '12:00'\n                }\n            </div>\n        </div>\n        <div className=\"hour\" style={{ backgroundColor: props.hours[12] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[13] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[14] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[15] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[16] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[17] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div>\n            <div className=\"medium-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n            <div className=\"division-label\">\n                {\n                    props.settings.useTwelveHourTime\n                        ? '6:00PM'\n                        : '18:00'\n                }\n            </div>\n        </div>\n        <div className=\"hour\" style={{ backgroundColor: props.hours[18] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[19] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[20] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[21] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[22] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[23] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div>\n            <div className=\"large-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n            <div className=\"division-label\">\n                {\n                    props.settings.useTwelveHourTime\n                        ? '12:00AM'\n                        : '00:00'\n                }\n            </div>\n        </div>\n    </div>\n}","import { Card, CardActionArea, CardContent, Checkbox, createStyles, Dialog, DialogActions, DialogContent, DialogTitle, Divider, FormControlLabel, IconButton, makeStyles, Toolbar, useTheme } from \"@material-ui/core\";\nimport { ChevronLeft, ChevronRight, Cloud, Help, Warning, WbSunny } from \"@material-ui/icons\";\nimport React from \"react\";\nimport '../../../prototype_mods';\nimport UserSettings from '../../../user_settings';\nimport { bugs, fish } from '../data.json';\nimport SearchParameters from \"../search_parameters\";\nimport './CritterPanel.scss';\nimport MonthPanels from \"./MonthPanels\";\nimport TimeTracker from \"./TimeTracker\";\n\nconst useStyles = makeStyles((theme) => createStyles({\n    modelled: {\n        color: theme.palette.modelled.main,\n        '&.Mui-disabled': {\n            color: theme.palette.modelled.transparent,\n        },\n    },\n}))\n\ninterface CritterPanelProps {\n    data: (typeof bugs[0]) | (typeof fish[0]);\n    type: 'bug' | 'fish';\n    obtained: boolean;\n    modelled: boolean;\n    setObtained: (value: boolean) => void;\n    setModelled: (value: boolean) => void;\n    month: number;\n    hour: number;\n    searchParameters: SearchParameters;\n    openDialogue: number | null;\n    setOpenDialogue: (value: number | null) => void;\n    now: Date;\n    settings: UserSettings;\n}\nfunction CritterPanel(props: CritterPanelProps) {\n    const hours = (\n        props.settings.hemisphere == 'north' ?\n            props.data.hours :\n            [...props.data.hours.slice(6), ...props.data.hours.slice(0, 6)]\n    );\n    const theme = useTheme();\n    const activeNow = hours[props.month][props.hour];\n    const activeMonth = hours[props.month].reduce((a, b) => a || b);\n    const leavingSoon = activeMonth && !hours[(props.month + 1) % 12].reduce((a, b) => a || b);\n    const { palette } = useTheme();\n    const {\n        activeRequired,\n        location,\n        name,\n        price,\n        priceComparison,\n        size,\n        stateRequired,\n    } = props.searchParameters;\n    let shadow = '';\n    if (props.type == 'fish') {\n        shadow = (props.data as typeof fish[0]).shadow;\n    }\n    let match = true;\n    if (activeRequired === 'now' && !activeNow) {\n        match = false;\n    } else if (activeRequired === 'month' && !activeMonth) {\n        match = false;\n    } else if (activeRequired === 'until_next' && !leavingSoon) {\n        match = false;\n    } else if (!props.data.location.includes(location.toLowerCase())) {\n        match = false;\n    } else if (!props.data.name.includes(name.toLowerCase())) {\n        match = false;\n    } else if (props.type == 'fish' && !shadow.includes(size.toLowerCase())) {\n        match = false;\n    } else if (stateRequired === 'unobtained' && props.obtained) {\n        match = false;\n    } else if (stateRequired === 'unmodelled' && props.modelled) {\n        match = false;\n    } else {\n        switch (priceComparison) {\n            case '>=':\n                if (props.data.price < price) {\n                    match = false;\n                }\n                break;\n            case '=':\n                if (props.data.price != price) {\n                    match = false;\n                }\n                break;\n            case '<=':\n                if (props.data.price > price) {\n                    match = false;\n                }\n                break;\n        }\n    }\n\n    return <>\n        <Card className=\"critter-panel\" title={\n            `${props.data.name.capitalise()} (${props.type.capitalise()\n            } #${props.data.index + 1})`\n            + (activeMonth ? '' : '\\nUnavailable')\n            + (activeNow ? '\\nActive right now!' : '')\n            + (props.modelled ? '\\nModel obtained!' : '')\n            + '\\nClick for more details'\n        }\n            style={\n                {\n                    backgroundColor: props.modelled\n                        ? palette.modelled.transparent\n                        : (\n                            props.obtained\n                                ? palette.primary.transparent\n                                : (\n                                    activeMonth\n                                        ? undefined\n                                        : palette.error.transparent\n                                )\n                        ),\n                    borderColor: props.modelled\n                        ? palette.modelled.main\n                        : (\n                            activeMonth\n                                ? (\n                                    props.obtained\n                                        ? palette.primary.main\n                                        : undefined\n                                )\n                                : palette.error.main\n                        ),\n                    opacity: match ? 1 : theme.palette.opacity,\n                }\n            }\n        >\n            <CardActionArea onClick={() => props.setOpenDialogue(props.data.index)}>\n                {\n                    leavingSoon\n                        ? <Warning style={{\n                            color: props.modelled\n                                ? palette.modelled.main\n                                : palette.error.main,\n                        }} />\n                        : <Help style={{\n                            color: props.modelled\n                                ? palette.modelled.main\n                                : (\n                                    activeMonth\n                                        ? (\n                                            props.obtained\n                                                ? palette.primary.main\n                                                : undefined\n                                        )\n                                        : palette.error.main\n                                ),\n                        }} />\n                }\n                <img src={\n                    `assets/${props.type}/${props.data.index.toString().padStart(2, '0')\n                    }.png`\n                } />\n            </CardActionArea>\n        </Card>\n        <Dialog\n            open={props.openDialogue == props.data.index}\n            onClose={() => props.setOpenDialogue(null)}\n            scroll=\"body\"\n            PaperProps={{\n                style: {\n                    borderColor: props.modelled\n                        ? palette.modelled.main\n                        : (\n                            props.obtained\n                                ? palette.primary.main\n                                : 'transparent'\n                        ),\n                    borderWidth: 1,\n                    borderStyle: 'solid',\n                    width: \"75%\",\n                    transition: 'color 0.5s ease-in-out, border-color 0.5s ease-in-out',\n                }\n            }}\n        >\n            <DialogTitle style={{\n                paddingBottom: 0,\n            }}\n            >\n                <Toolbar>\n                    {\n                        props.data.index > 0\n                            ? <IconButton edge=\"start\" onClick={() => props.setOpenDialogue(props.data.index - 1)}>\n                                {theme.direction == 'ltr' ? <ChevronLeft /> : <ChevronRight />}\n                            </IconButton>\n                            : <IconButton disabled />\n                    }\n                    <div style={{\n                        textAlign: 'center',\n                        color: props.modelled\n                            ? palette.modelled.main\n                            : (\n                                props.obtained\n                                    ? palette.primary.main\n                                    : undefined\n                            ),\n                        flexGrow: 1,\n                        transition: 'color 0.5s ease-in-out',\n                    }}>\n                        {props.data.name.capitalise()}\n                    </div>\n                    {\n                        props.data.index < 79\n                            ? <IconButton edge=\"end\" onClick={() => props.setOpenDialogue(props.data.index + 1)}>\n                                {theme.direction == 'ltr' ? <ChevronRight /> : <ChevronLeft />}\n                            </IconButton>\n                            : <IconButton disabled />\n                    }\n                </Toolbar>\n            </DialogTitle>\n            <DialogContent\n                style={{\n                    textAlign: 'center'\n                }}\n            >\n                {props.type.capitalise()} #{props.data.index + 1}\n                <br />\n                <Divider style={{ marginTop: 8, marginBottom: 8 }} />\n                <div\n                    style={{ paddingBottom: 8 }}\n                    dangerouslySetInnerHTML={{\n                        __html: props.data.quote.replace('{playername}', props.settings.playerName)\n                    }}\n                />\n                <MonthPanels\n                    months={hours.map(\n                        (month) => month.reduce((a, b) => a || b)\n                    )}\n                    activeMonth={props.month}\n                    settings={props.settings}\n                />\n                <TimeTracker\n                    hours={hours[props.now.getMonth()]}\n                    time={props.now}\n                    settings={props.settings}\n                />\n                <Card variant=\"outlined\">\n                    <CardContent>\n                        <div className=\"critter-overview\">\n                            <img\n                                src={\n                                    `assets/${props.type}/${props.data.index.toString().padStart(2, '0')\n                                    }.png`\n                                }\n                                className=\"critter-icon\"\n                            />\n                            {props.data.dry && <WbSunny className=\"critter-dry\" style={{ color: theme.palette.summer.main }} />}\n                            {props.data.rain && <Cloud className=\"critter-wet\" style={{ color: theme.palette.winter.main }} />}\n                            <div className=\"location-label\">Found:</div>\n                            <div className=\"price-label\">Sells for:</div>\n                            <div className=\"location\">{props.data.location}</div>\n                            <div className=\"price\">{props.data.price}</div>\n                        </div>\n                    </CardContent>\n                </Card>\n            </DialogContent>\n            <DialogActions>\n                <FormControlLabel\n                    control={\n                        <Checkbox\n                            checked={props.obtained}\n                            onChange={(event) => props.setObtained(event.target.checked)}\n                            color=\"primary\"\n                        />\n                    }\n                    label=\"Obtained\"\n                />\n                <FormControlLabel\n                    control={\n                        <Checkbox\n                            className={useStyles(theme).modelled}\n                            checked={props.modelled}\n                            disabled={!props.obtained}\n                            onChange={(event) => props.setModelled(event.target.checked)}\n                            color=\"default\"\n                        />\n                    }\n                    label=\"Modelled\"\n                />\n            </DialogActions>\n        </Dialog>\n    </>;\n}\nexport default CritterPanel;","import { Card, CardContent, CardHeader, FormControl, Grid, InputLabel, MenuItem, Select, TextField, useTheme } from '@material-ui/core';\nimport React from 'react';\nimport UserSettings from '../../user_settings';\nimport CritterPanel from './components/CritterPanel';\nimport { bugs, fish } from './data.json';\nimport SearchParameters from './search_parameters';\nconst a = bugs;\nconst b = fish;\n\nfunction range(stop: number) {\n    return Array.from(Array(stop).keys());\n}\n\ninterface UserCritterData {\n    obtained: boolean;\n    modelled: boolean;\n}\n\ninterface UserCritterpediaData {\n    bugs: UserCritterData[];\n    fish: UserCritterData[];\n}\n\ninterface CritterpediaProps {\n    settings: UserSettings;\n    time: Date;\n}\n\nexport default function Critterpedia(props: CritterpediaProps) {\n    const theme = useTheme();\n    if (!window.localStorage.critterpedia) {\n        let data: UserCritterpediaData = {\n            bugs: [],\n            fish: [],\n        };\n        for (let i = 0; i < 80; i++) {\n            data.bugs.push({ obtained: false, modelled: false });\n            data.fish.push({ obtained: false, modelled: false });\n        }\n        window.localStorage.critterpedia = JSON.stringify(data);\n    }\n    const data: UserCritterpediaData = JSON.parse(window.localStorage.critterpedia);\n    const [activeRequired, setActiveRequired] = React.useState<'now' | 'month' | 'until_next' | 'any'>('any');\n    const [location, setLocation] = React.useState('');\n    const [name, setName] = React.useState('');\n    const [price, setPrice] = React.useState(0);\n    const [priceComparison, setPriceComparison] = React.useState<'>=' | '=' | '<='>('>=');\n    const [size, setSize] = React.useState('');\n    const [stateRequired, setStateRequired] = React.useState<'unobtained' | 'unmodelled' | 'any'>('any');\n    const searchParameters: SearchParameters = {\n        activeRequired,\n        location,\n        name,\n        price,\n        priceComparison,\n        size,\n        stateRequired,\n    };\n    const [bugsData, setBugsDataImpl] = React.useState(data.bugs);\n    const [fishData, setFishDataImpl] = React.useState(data.fish);\n    const [openDialogue, setOpenDialogueImpl] = React.useState<number | null>(null);\n    const [openDialogueType, setOpenDialogueType] = React.useState<'bug' | 'fish'>('bug');\n    function setOpenDialogue(value: number | null) {\n        if (value !== null) {\n            let title = (\n                openDialogueType === 'bug'\n                    ? bugs\n                    : fish\n            )[value].name.capitalise();\n            window.history.pushState(null, `Critterpedia - ${title} | NookData`)\n        } else {\n            window.history.pushState(null, `Critterpedia | NookData`)\n        }\n        setOpenDialogueImpl(value);\n    }\n    function setBugsData(bug: number, state: UserCritterData) {\n        data.bugs[bug] = state;\n        window.localStorage.critterpedia = JSON.stringify(data);\n        setBugsDataImpl(data.bugs);\n    }\n    function setFishData(fish: number, state: UserCritterData) {\n        data.fish[fish] = state;\n        window.localStorage.critterpedia = JSON.stringify(data);\n        setFishDataImpl(data.fish);\n    }\n    const now = new Date();\n    return <div style={{ maxWidth: 1316, margin: 'auto' }}>\n        <Card style={{ margin: 16 }}>\n            <CardHeader title=\"Search Critters\" />\n            <CardContent>\n                <Grid container spacing={1}>\n                    <Grid item xs={12} sm={6} md={4} >\n                        <TextField fullWidth value={name} onChange={(event) => setName(event.target.value)} label=\"Name\" />\n                    </Grid>\n                    <Grid item xs={12} sm={6} md={4} >\n                        <TextField fullWidth value={location} onChange={(event) => setLocation(event.target.value)} label=\"Location\" />\n                    </Grid>\n                    <Grid item xs={12} sm={6} md={4} >\n                        <TextField fullWidth value={size} onChange={(event) => setSize(event.target.value)} label=\"Size (fish)\" />\n                    </Grid>\n                    <Grid item xs={6} sm={3} md={2} >\n                        <FormControl fullWidth>\n                            <InputLabel id=\"comp-label\">Price</InputLabel>\n                            <Select\n                                value={priceComparison}\n                                onChange={(event) => setPriceComparison(\n                                    event.target.value as ('>=' | '=' | '<=')\n                                )}\n                                labelId='comp-label'\n                                fullWidth\n                            >\n                                <MenuItem value=\">=\">≥</MenuItem>\n                                <MenuItem value=\"=\">=</MenuItem>\n                                <MenuItem value=\"<=\">≤</MenuItem>\n                            </Select>\n                        </FormControl>\n                    </Grid>\n                    <Grid item xs={6} sm={3} md={2} >\n                        <TextField fullWidth value={price} onChange={(event) => setPrice(+event.target.value)} label=\"Value\" />\n                    </Grid>\n                    <Grid item xs={12} sm={6} md={4} >\n                        <FormControl fullWidth>\n                            <InputLabel id=\"active-label\">Activity</InputLabel>\n                            <Select\n                                value={activeRequired}\n                                onChange={(event) => setActiveRequired(\n                                    event.target.value as ('now' | 'month' | 'until_next' | 'any')\n                                )}\n                                labelId='active-label'\n                                fullWidth\n                            >\n                                <MenuItem value=\"any\">Any activity</MenuItem>\n                                <MenuItem value=\"month\">Active this month</MenuItem>\n                                <MenuItem value=\"now\">Active now</MenuItem>\n                                <MenuItem value=\"until_next\">Active until next month</MenuItem>\n                            </Select>\n                        </FormControl>\n                    </Grid>\n                    <Grid item xs={12} sm={6} md={4} >\n                        <FormControl fullWidth>\n                            <InputLabel id=\"state-label\">Collection</InputLabel>\n                            <Select\n                                value={stateRequired}\n                                onChange={(event) => setStateRequired(\n                                    event.target.value as ('any' | 'unobtained' | 'unmodelled')\n                                )}\n                                labelId='state-label'\n                                fullWidth\n                            >\n                                <MenuItem value=\"any\">Any</MenuItem>\n                                <MenuItem value=\"unobtained\">Not yet caught</MenuItem>\n                                <MenuItem value=\"unmodelled\">No model obtained</MenuItem>\n                            </Select>\n                        </FormControl>\n                    </Grid>\n                </Grid>\n            </CardContent>\n        </Card>\n        <Card style={{ margin: 16 }}>\n            <CardHeader title={\n                <>\n                    Bugs - <span style={{ color: theme.palette.primary.main }}>\n                        ({\n                            bugsData.reduce((total, bug) => total + (+bug.obtained), 0)\n                        } / 80)\n                    </span> <span style={{ color: theme.palette.modelled.main }}>\n                        ({\n                            bugsData.reduce((total, bug) => total + (+bug.modelled), 0)\n                        } / 80)\n                    </span>\n                </>\n            } />\n            <CardContent style={{ overflowX: 'auto' }}>\n                <table style={{ paddingRight: 16 }}>\n                    <tbody>\n                        {\n                            range(5).map(\n                                (y) =>\n                                    <tr>\n                                        {\n                                            range(16).map(\n                                                (x) => {\n                                                    const bugData = bugsData[x * 5 + y];\n                                                    return <td>\n                                                        <CritterPanel\n                                                            data={bugs[x * 5 + y]}\n                                                            obtained={bugData.obtained}\n                                                            modelled={bugData.modelled}\n                                                            type=\"bug\"\n                                                            setObtained={(value: boolean) => setBugsData(x * 5 + y, { obtained: value, modelled: false })}\n                                                            setModelled={(value: boolean) => setBugsData(x * 5 + y, { obtained: true, modelled: value })}\n                                                            month={now.getMonth()}\n                                                            hour={now.getHours()}\n                                                            openDialogue={openDialogueType === 'bug' ? openDialogue : null}\n                                                            setOpenDialogue={(value: number | null) => {\n                                                                setOpenDialogueType('bug');\n                                                                setOpenDialogue(value);\n                                                            }}\n                                                            searchParameters={searchParameters}\n                                                            settings={props.settings}\n                                                            now={props.time}\n                                                        />\n                                                    </td>;\n                                                }\n                                            )\n                                        }\n                                    </tr>\n                            )\n                        }\n                    </tbody>\n                </table>\n            </CardContent>\n        </Card>\n        <Card style={{ margin: 16 }}>\n            <CardHeader title={\n                <>\n                    Fish - <span style={{ color: theme.palette.primary.main }}>\n                        ({\n                            fishData.reduce((total, fish) => total + (+fish.obtained), 0)\n                        } / 80)\n                    </span> <span style={{ color: theme.palette.modelled.main }}>\n                        ({\n                            fishData.reduce((total, fish) => total + (+fish.modelled), 0)\n                        } / 80)\n                    </span>\n                </>\n            } />\n            <CardContent style={{ overflowX: 'auto' }}>\n                <table style={{ paddingRight: 16 }}>\n                    <tbody>\n                        {\n                            range(5).map(\n                                (y) =>\n                                    <tr>\n                                        {\n                                            range(16).map(\n                                                (x) => {\n                                                    const bugData = fishData[x * 5 + y];\n                                                    return <td>\n                                                        <CritterPanel\n                                                            data={fish[x * 5 + y]}\n                                                            obtained={bugData.obtained}\n                                                            modelled={bugData.modelled}\n                                                            type=\"fish\"\n                                                            setObtained={(value: boolean) => setFishData(x * 5 + y, { obtained: value, modelled: false })}\n                                                            setModelled={(value: boolean) => setFishData(x * 5 + y, { obtained: true, modelled: value })}\n                                                            month={now.getMonth()}\n                                                            hour={now.getHours()}\n                                                            openDialogue={openDialogueType === 'fish' ? openDialogue : null}\n                                                            setOpenDialogue={(value: number | null) => {\n                                                                setOpenDialogueType('fish');\n                                                                setOpenDialogue(value);\n                                                            }}\n                                                            searchParameters={searchParameters}\n                                                            settings={props.settings}\n                                                            now={props.time}\n                                                        />\n                                                    </td>;\n                                                }\n                                            )\n                                        }\n                                    </tr>\n                            )\n                        }\n                    </tbody>\n                </table>\n            </CardContent>\n        </Card>\n    </div>\n}","import { ComponentsProps } from \"@material-ui/core/styles/props\";\n\nconst commonProps: ComponentsProps = {\n    MuiTextField: {\n        variant: 'filled',\n    },\n    MuiSelect: {\n        variant: 'filled',\n    },\n    MuiFormControl: {\n        variant: 'filled',\n    },\n};\nexport { commonProps };\n","import { createMuiTheme } from '@material-ui/core/styles';\nimport { commonProps } from './common_theme_data';\nimport './prototype_mods';\n\n\n// Dark theme\nconst theme = createMuiTheme({\n    palette: {\n        type: 'dark',\n        opacity: 0.3,\n        elevations: {\n            0: { main: '#1e1e1e' },\n            1: { main: '#292929' },\n            2: { main: '#2e2e2e' },\n            3: { main: '#303030' },\n            4: { main: '#323232' },\n            6: { main: '#373737' },\n            8: { main: '#393939' },\n            12: { main: '#3e3e3e' },\n            16: { main: '#404040' },\n            24: { main: '#424242' },\n        },\n        modelled: {\n            main: 'gold',\n            transparent: 'rgba(255, 215, 0, 0.3)',\n        },\n        winter: {\n            main: '#3c84c6',\n            transparent: 'rgba(60, 132, 198, 0.3)',\n            contrastText: 'rgba(0,0,0,87%)'\n        },\n        spring: {\n            main: '#38761c',\n            transparent: 'rgba(56, 118, 28, 0.3)',\n            contrastText: 'rgba(0,0,0,87%)'\n        },\n        summer: {\n            main: '#e69038',\n            transparent: 'rgba(230, 144, 56, 0.3)',\n            contrastText: 'rgba(0,0,0,87%)'\n        },\n        autumn: {\n            main: '#b45f04',\n            transparent: 'rgba(180, 95, 4, 0.3)',\n            contrastText: 'rgba(0,0,0,87%)'\n        },\n        primary: {\n            main: '#bb86fc',\n            dark: '#3700b3',\n            contrastText: 'rgba(0,0,0,87%)',\n            transparent: 'rgba(187, 134, 252, 0.3)',\n        },\n        secondary: {\n            main: '#03dac6',\n            dark: '#03dac6',\n            contrastText: 'rgba(0,0,0,87%)',\n        },\n        error: {\n            main: '#cf6679',\n            transparent: 'rgba(207, 102, 121, 0.3)',\n        },\n        background: {\n            paper: '#1e1e1e',\n            default: '#121212'\n        },\n        text: {\n            primary: 'rgba(255,255,255,87%)',\n            secondary: 'rgba(255,255,255,60%)',\n            hint: 'rgba(255,255,255,60%)',\n            disabled: 'rgba(255,255,255,38%)',\n        }\n    },\n    zIndex: {\n        appBar: 1250\n    },\n    props: commonProps,\n});\n\ntheme.overrides = {\n    MuiAppBar: {\n        colorPrimary: {\n            backgroundColor: theme.palette.background.paper,\n            color: theme.palette.primary.main,\n        },\n        colorSecondary: {\n            backgroundColor: theme.palette.background.paper,\n            color: theme.palette.secondary.main,\n        },\n        colorDefault: {\n            backgroundColor: theme.palette.background.paper,\n            color: theme.palette.text.primary,\n        }\n    },\n    MuiDrawer: {\n        paper: {\n            width: 240\n        }\n    },\n    MuiCard: {\n        root: {\n            borderWidth: 1,\n            borderColor: 'rgba(255, 255, 255, 8%)',\n            borderStyle: 'solid',\n        },\n    },\n    MuiCardHeader: {\n        root: {\n            paddingBottom: 0,\n            textAlign: 'center',\n        },\n    },\n    MuiListItemIcon: {\n        root: {\n            color: theme.palette.text.secondary,\n        }\n    }\n};\n\nexport default theme;","import { createMuiTheme } from '@material-ui/core/styles';\nimport { commonProps } from './common_theme_data';\nimport './prototype_mods';\n\n// Normal or default theme\nconst theme = createMuiTheme({\n    palette: {\n        type: 'light',\n        opacity: 0.6,\n        elevations: {\n            0: { main: '#ffffff' },\n            1: { main: '#ffffff' },\n            2: { main: '#ffffff' },\n            3: { main: '#ffffff' },\n            4: { main: '#ffffff' },\n            6: { main: '#ffffff' },\n            8: { main: '#ffffff' },\n            12: { main: '#ffffff' },\n            16: { main: '#ffffff' },\n            24: { main: '#ffffff' },\n        },\n        modelled: {\n            main: '#fbc02d',\n            transparent: 'rgba(251, 192, 45, 0.5)',\n        },\n        winter: {\n            main: '#3c84c6',\n            transparent: 'rgba(60, 132, 198, 0.6)',\n            contrastText: 'rgba(0,0,0,87%)',\n        },\n        spring: {\n            main: '#38761c',\n            transparent: 'rgba(56, 118, 28, 0.6)',\n            contrastText: 'rgba(0,0,0,87%)',\n        },\n        summer: {\n            main: '#e69038',\n            transparent: 'rgba(230, 144, 56, 0.6)',\n            contrastText: 'rgba(0,0,0,87%)',\n        },\n        autumn: {\n            main: '#b45f04',\n            transparent: 'rgba(180, 95, 4, 0.6)',\n            contrastText: 'rgba(0,0,0,87%)',\n        },\n        primary: {\n            main: '#6200ee',\n            dark: '#3700b3',\n            contrastText: 'rgba(255,255,255,87%)',\n            transparent: 'rgba(98, 0, 238, 0.5)',\n        },\n        secondary: {\n            main: '#03dac6',\n            dark: '#018786',\n            contrastText: 'rgba(0,0,0,87%)',\n        },\n        error: {\n            main: '#b00020',\n            transparent: 'rgba(176, 0, 32, 0.5)',\n        },\n        background: {\n            paper: '#ffffff',\n            default: '#eeeeee'\n        },\n        text: {\n            primary: 'rgba(0,0,0,87%)',\n            secondary: 'rgba(0,0,0,60%)',\n            hint: 'rgba(0,0,0,60%)',\n            disabled: 'rgba(0,0,0,38%)',\n        }\n    },\n    zIndex: {\n        appBar: 1250\n    },\n    props: commonProps,\n});\n\ntheme.overrides = {\n    MuiDrawer: {\n        paper: {\n            width: 240\n        }\n    },\n    MuiCard: {\n        root: {\n            borderWidth: 1,\n            borderColor: 'transparent',\n            borderStyle: 'solid',\n        },\n    },\n    MuiCardHeader: {\n        root: {\n            paddingBottom: 0,\n            textAlign: 'center',\n        },\n    },\n};\n\nexport default theme;","import dark from './dark';\nimport light from './light';\n\nconst themes = {\n    light,\n    dark,\n}\n\nexport default function getTheme(theme: \"light\" | \"dark\") {\n    return themes[theme];\n}","\nimport { CssBaseline, List, ListItem, ListItemIcon, ListItemText, ThemeProvider, Typography, useMediaQuery, useTheme } from '@material-ui/core';\nimport { EmojiNature } from '@material-ui/icons';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { homepage } from '../package.json';\nimport AppBar from './components/AppBar';\nimport NavigationDrawer from './components/NavigationDrawer';\nimport './index.scss';\nimport { Dict } from './misc';\nimport Critterpedia from './pages/critterpedia';\nimport getTheme from './themes';\nimport UserSettings from './user_settings';\n\nconst baseUrl = process.env.NODE_ENV === 'production' ? homepage : 'http://localhost:3000/nookdata_v2';\n\ninterface PageData {\n    title: string;\n    icon: React.ReactNode;\n}\nconst pageData: Dict<PageData> = {\n    '/critterpedia': {\n        title: 'Critterpedia',\n        icon: <EmojiNature />,\n    }\n}\n\n\ninterface DrawerAdjustProps {\n    active: boolean,\n    children: React.ReactNode;\n}\nfunction DrawerAdjust(props: DrawerAdjustProps) {\n    const theme = useTheme();\n    const matches = useMediaQuery(theme.breakpoints.up('sm'));\n    return (\n        <div style={{ paddingLeft: 240 * (+props.active) * (+matches), transition: 'padding-left 195ms cubic-bezier(0.4, 0, 0.6, 1) 0ms' }}>\n            {props.children}\n        </div>\n    )\n}\ninterface AppFrameProps {\n    setTheme: (value: \"dark\" | \"light\") => void;\n    theme: \"dark\" | \"light\";\n    setPage: (value: string) => void;\n    page: string;\n    children: React.ReactNode;\n}\nfunction AppFrame(props: AppFrameProps) {\n    const theme = useTheme();\n    const startOpen = useMediaQuery(theme.breakpoints.up('lg'));\n    const [initialRender, setInitialRender] = React.useState(true);\n    const [drawerOpen, setDrawerOpen] = React.useState(false);\n    if (startOpen && initialRender) {\n        setDrawerOpen(true);\n        setInitialRender(false);\n    }\n    return (\n        <>\n            <AppBar setTheme={props.setTheme} setDrawerOpen={setDrawerOpen} theme={props.theme} drawerOpen={drawerOpen} title={\n                <Typography variant=\"h6\">\n                    <div\n                        style={{\n                            color: theme.palette.winter.main,\n                            display: 'inline'\n                        }}>Nook</div>\n                    <div\n                        style={{\n                            color: theme.palette.summer.main,\n                            display: 'inline'\n                        }}>Data</div>\n                </Typography>\n            } />\n            <NavigationDrawer open={drawerOpen} setOpen={setDrawerOpen}>\n                <List>\n                    {Object.entries(pageData).map(([route, data]) => (\n                        <ListItem selected={props.page === route} button onClick={() => props.setPage(route)}>\n                            <ListItemIcon>{data.icon}</ListItemIcon>\n                            <ListItemText primary={data.title} />\n                        </ListItem>\n                    ))}\n                </List>\n            </NavigationDrawer>\n            <DrawerAdjust active={drawerOpen}>\n                {props.children}\n            </DrawerAdjust>\n        </>\n    )\n}\n\ninterface RouteProps {\n    page: string;\n    route: string;\n    children: React.ReactNode;\n}\nfunction Route(props: RouteProps) {\n    console.log(props);\n    if (props.page !== props.route) {\n        return null;\n    }\n    document.title = pageData[props.route].title + ' | NookData';\n    return <>\n        {props.children}\n    </>;\n}\n\nlet timeUpdateId: number | undefined = undefined;\nconst sentinelDate = new Date();\n\nfunction App() {\n    const themeSetting: \"dark\" | \"light\" = window.localStorage.theme || 'dark';\n    const [chosenTheme, setChosenThemeImpl] = React.useState<'dark' | 'light'>(themeSetting);\n    function setChosenTheme(value: 'dark' | 'light') {\n        document.body.classList.add(\"no-transition\");\n        setTimeout(() => setChosenThemeImpl(value), 10);\n        setTimeout(() => document.body.classList.remove(\"no-transition\"), 20);\n    }\n    const hemisphereSetting: \"north\" | \"south\" = window.localStorage.hemisphere || 'north';\n    const [chosenHemisphere, setChosenHemisphere] = React.useState<'north' | 'south'>(hemisphereSetting);\n    const settings: UserSettings = {\n        theme: chosenTheme,\n        hemisphere: chosenHemisphere,\n        islandName: 'Gloverboia',\n        playerName: 'Starwort',\n        timeOffset: 0,\n        useSystemTime: true,\n        useTwelveHourTime: true,\n    }\n    const [time, setTime] = React.useState(sentinelDate);\n    if (timeUpdateId) {\n        window.clearInterval(timeUpdateId);\n    }\n    timeUpdateId = window.setInterval(() => setTime(new Date()), 500);\n    const [page, setPageImpl] = React.useState('/');\n    function setPage(route: string) {\n        window.history.pushState(null, pageData[route].title, baseUrl + route);\n        setPageImpl(route);\n    }\n    let route = window.location.href.slice(baseUrl.length);\n    if (route !== page) {\n        setPageImpl(route);\n    }\n    const theme = React.useMemo(\n        () => getTheme(chosenTheme),\n        [chosenTheme]\n    );\n    return <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <AppFrame page={page} theme={chosenTheme} setTheme={setChosenTheme} setPage={setPage}>\n            <Route page={page} route=\"/critterpedia\">\n                <Critterpedia time={time} settings={settings} />\n            </Route>\n        </AppFrame>\n    </ThemeProvider>\n}\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\nexport { };\n"],"sourceRoot":""}